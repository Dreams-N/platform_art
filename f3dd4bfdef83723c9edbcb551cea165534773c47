Revision: f3dd4bfdef83723c9edbcb551cea165534773c47
Patch-set: 3
File: /COMMIT_MSG

7:34-7:40
Wed Apr 29 17:30:30 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 30e3da4b_21b06e6c
Bytes: 7
x86-64?

7:34-7:40
Thu Apr 30 18:29:31 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 30e3da4b_21b06e6c
UUID: b017cafa_a952a5eb
Bytes: 4
Done

File: compiler/optimizing/code_generator_x86.cc

847:4-850:17
Wed Apr 29 17:28:50 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 705392ca_234f0a94
Bytes: 77
Is this really needed?  The switch seems to cover all the values of the enum.

847:4-850:17
Thu Apr 30 18:29:31 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 705392ca_234f0a94
UUID: d01c3e21_19db2f18
Bytes: 4
Done

854:32-854:46
Wed Apr 29 17:28:50 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 705392ca_c3ae3699
Bytes: 43
Nit: please move this argument on line 853.

854:32-854:46
Thu Apr 30 18:29:31 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 705392ca_c3ae3699
UUID: d01c3e21_b994bb1a
Bytes: 4
Done

863:0-863:101
Wed Apr 29 17:28:50 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b0598aea_250cee3c
Bytes: 15
Nit: long line.

863:0-863:101
Thu Apr 30 18:29:31 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b0598aea_250cee3c
UUID: 100336c0_3e909119
Bytes: 4
Done

870:0-871:43
Wed Apr 29 17:28:50 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 30e3da4b_81205ac7
Bytes: 32
Nit: maybe swap these two lines?

870:0-871:43
Thu Apr 30 18:29:31 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 30e3da4b_81205ac7
UUID: 100336c0_1e8dcd03
Bytes: 4
Done

899:0-900:43
Wed Apr 29 17:28:50 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b0598aea_e51c966b
Bytes: 6
Ditto.

903:10-903:28
Wed Apr 29 17:28:50 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b0598aea_65b426c1
Bytes: 185
I'm not sure about this, but maybe you could use HBinaryOperation::GetConstantRight and HBinaryOperation::GetLeastConstantLeft here to handle left- as well as right-hand side constants.

903:10-903:28
Thu Apr 30 18:29:31 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b0598aea_65b426c1
UUID: 100336c0_be6661d6
Bytes: 261
No, the Locations settings ensures that the right is the constant (if it can be) and the left is in a register.   What would be better would be a pass trying to put the constant on the RHS by swapping the condition/compare.  Have to be careful for float values.

903:10-903:28
Mon May 11 15:10:46 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 100336c0_be6661d6
UUID: 2d62a1ee_1e751978
Bytes: 38
Alright, thanks for the clarification.

1003:0-1004:39
Wed Apr 29 17:28:50 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 705392ca_a3a3fa7c
Bytes: 6
Ditto.

1003:0-1004:39
Thu Apr 30 18:29:31 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 705392ca_a3a3fa7c
UUID: b017cafa_099f5936
Bytes: 4
Done

1086:4-1086:28
Wed Apr 29 17:28:50 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 30e3da4b_e1d16600
Bytes: 25
DCHECK_NE(cond, nullptr);

1086:4-1086:28
Thu Apr 30 18:29:31 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 30e3da4b_e1d16600
UUID: d01c3e21_d9a3777c
Bytes: 39
That doesn't work.  You need the DCHECK

1086:4-1086:28
Mon May 11 15:10:46 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d01c3e21_d9a3777c
UUID: 2d62a1ee_9e60e9b6
Bytes: 59
Sorry, I forgot DCHECK_{EQ,NE} would not work in this case.

1088:4-1088:31
Wed Apr 29 17:28:50 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b0598aea_45dd6ae1
Bytes: 28
DCHECK_NE(compare, nullptr);

1088:4-1088:31
Thu Apr 30 18:29:31 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b0598aea_45dd6ae1
UUID: b017cafa_e9a3fd7b
Bytes: 5
ditto

1177:7-1177:51
Wed Apr 29 17:28:50 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 705392ca_63a6628d
Bytes: 38
"We do not set location in this case"?

1177:7-1177:51
Thu Apr 30 18:29:31 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 705392ca_63a6628d
UUID: 100336c0_9e6b9da0
Bytes: 41
code removed to make SSA liveness happier

1191:6-1191:32
Wed Apr 29 17:28:50 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b0598aea_a5ee9e84
Bytes: 64
Maybe use the same condition as in the location builder visitor?

1191:6-1191:32
Thu Apr 30 18:29:31 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b0598aea_a5ee9e84
UUID: 100336c0_3e5b7111
Bytes: 4
Done

File: compiler/optimizing/code_generator_x86.h

188:0-190:55
Wed Apr 29 17:28:50 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 705392ca_e3057297
Bytes: 88
Maybe place this declaration on a single line, if it is not greater than 100 characters?

188:0-190:55
Thu Apr 30 18:29:31 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 705392ca_e3057297
UUID: d01c3e21_996bbfa0
Bytes: 4
Done

File: compiler/optimizing/code_generator_x86_64.cc

805:0-805:101
Wed Apr 29 17:28:50 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b0598aea_25338e71
Bytes: 15
Nit: long line.

805:0-805:101
Thu Apr 30 18:29:31 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b0598aea_25338e71
UUID: d01c3e21_59b007bb
Bytes: 4
Done

810:10-810:28
Wed Apr 29 17:28:50 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b0598aea_e5d7b673
Bytes: 100
Same remark regarding HBinaryOperation::GetConstantRight and HBinaryOperation::GetLeastConstantLeft.

810:10-810:28
Thu Apr 30 18:29:31 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b0598aea_e5d7b673
UUID: 100336c0_be4dc152
Bytes: 15
Same answer :-)

819:32-819:38
Wed Apr 29 17:28:50 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 30e3da4b_e14046f7
Bytes: 19
"a 32-bit integer"?

819:32-819:38
Thu Apr 30 18:29:31 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 30e3da4b_e14046f7
UUID: b017cafa_6987ede1
Bytes: 4
Done

838:0-838:102
Wed Apr 29 17:28:50 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 705392ca_830a7ea6
Bytes: 6
Ditto.

838:0-838:102
Thu Apr 30 18:29:31 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 705392ca_830a7ea6
UUID: 100336c0_9e527dec
Bytes: 28
Assume this was a long line.

838:0-838:102
Mon May 11 15:10:46 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 100336c0_9e527dec
UUID: 2d62a1ee_be8a8de8
Bytes: 29
Yes; sorry for the confusion.

851:0-851:104
Wed Apr 29 17:28:50 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 705392ca_a30f7ab5
Bytes: 6
Ditto.

851:0-851:104
Thu Apr 30 18:29:31 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 705392ca_a30f7ab5
UUID: d01c3e21_b97b1b77
Bytes: 4
Done

859:0-860:55
Wed Apr 29 17:28:50 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b0598aea_45c7aac4
Bytes: 6
Ditto.

859:0-860:55
Thu Apr 30 18:29:31 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b0598aea_45c7aac4
UUID: 100336c0_fe47392c
Bytes: 104
I think I need this as there are other types in the switch and it will complain if I don't have them all

859:0-860:55
Mon May 11 15:10:46 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 100336c0_fe47392c
UUID: 2d62a1ee_9e87c9e2
Bytes: 58
Indeed!  Sorry, I got this case mixed up with another one.

902:0-903:39
Wed Apr 29 17:28:50 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 705392ca_03368e60
Bytes: 6
Ditto.

902:0-903:39
Thu Apr 30 18:29:31 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 705392ca_03368e60
UUID: d01c3e21_9980dfd0
Bytes: 4
Done

985:4-985:28
Wed Apr 29 17:28:50 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 705392ca_23338a71
Bytes: 25
DCHECK_NE(cond, nullptr);

985:4-985:28
Thu Apr 30 18:29:31 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 705392ca_23338a71
UUID: b017cafa_495b1110
Bytes: 8
Can't do

987:4-987:31
Wed Apr 29 17:28:50 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 705392ca_c3d2b686
Bytes: 28
DCHECK_NE(compare, nullptr);

987:4-987:31
Thu Apr 30 18:29:31 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 705392ca_c3d2b686
UUID: d01c3e21_f9759380
Bytes: 8
Cant' do

1075:7-1075:51
Wed Apr 29 17:28:50 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 705392ca_e3d7b273
Bytes: 38
"We do not set location in this case"?

1075:7-1075:51
Thu Apr 30 18:29:31 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 705392ca_e3d7b273
UUID: d01c3e21_d97a5770
Bytes: 39
code removed to make ssa liveness happy

1090:6-1090:32
Wed Apr 29 17:28:50 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 30e3da4b_e15206bb
Bytes: 64
Maybe use the same condition as in the location builder visitor?

1090:6-1090:32
Thu Apr 30 18:29:31 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 30e3da4b_e15206bb
UUID: 100336c0_de4cf553
Bytes: 4
Done

File: compiler/optimizing/code_generator_x86_64.h

192:0-194:55
Wed Apr 29 17:28:50 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b0598aea_a5269e33
Bytes: 40
Place this declaration on a single line?

192:0-194:55
Thu Apr 30 18:29:31 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b0598aea_a5269e33
UUID: d01c3e21_79b343c9
Bytes: 4
Done

File: compiler/optimizing/instruction_simplifier.cc

386:2-387:48
Wed Apr 29 17:28:50 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b0598aea_a5b3fe4a
Bytes: 23
Place on a single line?

386:2-387:48
Thu Apr 30 18:29:31 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b0598aea_a5b3fe4a
UUID: d01c3e21_3990ab19
Bytes: 4
Done

388:7-388:36
Wed Apr 29 17:28:50 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 30e3da4b_41681269
Bytes: 26
"Conversion not possible"?

388:7-388:36
Thu Apr 30 18:29:31 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 30e3da4b_41681269
UUID: 100336c0_3e42511d
Bytes: 4
Done

393:2-394:45
Wed Apr 29 17:28:50 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 705392ca_83dcbe99
Bytes: 23
Place on a single line?

393:2-394:45
Thu Apr 30 18:29:31 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 705392ca_83dcbe99
UUID: 100336c0_1e3f8d87
Bytes: 4
Done

407:5-407:17
Wed Apr 29 17:28:50 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b0598aea_45b9ea29
Bytes: 13
compatibility

407:5-407:17
Thu Apr 30 18:29:31 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b0598aea_45b9ea29
UUID: d01c3e21_198def03
Bytes: 4
Done

File: compiler/optimizing/nodes.cc

1369:5-1369:36
Wed Apr 29 17:28:50 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b0598aea_c58b9a74
Bytes: 114
This is a bit ambiguous; what about "The comparison must immediately precede the condition (disregarding moves)."?

1369:5-1369:36
Thu Apr 30 18:29:31 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b0598aea_c58b9a74
UUID: d01c3e21_798a23ed
Bytes: 4
Done

1379:2-1379:36
Wed Apr 29 17:28:50 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 705392ca_63c422bf
Bytes: 6
Ditto.

1379:2-1379:36
Thu Apr 30 18:29:31 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 705392ca_63c422bf
UUID: d01c3e21_598767e1
Bytes: 4
Done

File: compiler/optimizing/nodes.h

1655
Wed Apr 29 17:28:50 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 30e3da4b_81621a85
Bytes: 1
.

1655
Thu Apr 30 18:29:31 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 30e3da4b_81621a85
UUID: 100336c0_7e3cc990
Bytes: 4
Done

File: compiler/optimizing/register_allocator.cc

1489:14-1489:45
Wed Apr 29 17:28:50 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 30e3da4b_01c9eafa
Bytes: 134
Replace with

  else {
    DCHECK(user->IsCondition());

and remove the

  else {
    DCHECK(false);
  }

branch on lines 1495–1497.

1489:14-1489:45
Thu Apr 30 18:29:31 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 30e3da4b_01c9eafa
UUID: d01c3e21_b9667bd6
Bytes: 29
removed this code completely.

File: compiler/optimizing/ssa_liveness_analysis.cc

234:37-234:81
Wed Apr 29 17:28:50 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 705392ca_c3f95600
Bytes: 39
Why did you have to add this condition?

234:37-234:81
Thu Apr 30 18:29:31 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 705392ca_c3f95600
UUID: 100336c0_5e39059f
Bytes: 93
Was done because no location was set for compare.  Changed the logic and removed this clause.

