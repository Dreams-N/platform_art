Revision: 0524bc9fd01390d9179a08b8ee1f7f1873d1cb5f
Patch-set: 5
File: /COMMIT_MSG

9:59-9:68
Tue Jul 21 11:00:45 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ad33f6f3_8c120788
Bytes: 9
precision

9:59-9:68
Tue Jul 21 13:34:42 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ad33f6f3_8c120788
UUID: cd24aaaf_cd0b692d
Bytes: 4
Done

File: compiler/optimizing/graph_visualizer.cc

401:11-401:17
Tue Jul 21 11:00:45 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 4d399acf_d1f1c4d3
Bytes: 21
Why not using strcmp?

401:11-401:17
Tue Jul 21 13:34:42 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 4d399acf_d1f1c4d3
UUID: cd24aaaf_4d00990c
Bytes: 79
because I want the prefix not the exact match. see my comment in a previous PS.

File: compiler/optimizing/nodes.h

4074:70-4074:87
Tue Jul 21 11:00:45 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2d0b8619_38610904
Bytes: 29
Nit: upper_bound_can_be_zero?

4074:70-4074:87
Tue Jul 21 13:34:42 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2d0b8619_38610904
UUID: ed296e86_2eaf879b
Bytes: 212
I prefer the current naming:
- this is about null not zero
- it's the upper value of the type of the input, not of the upper_bound variable which that may suggest
- it will be merge with RTI in the future anyway.

4084:7-4084:24
Tue Jul 21 11:00:45 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2d0b8619_1866451c
Bytes: 20
CanUpperBoundBeZero?

4084:7-4084:24
Tue Jul 21 13:34:42 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2d0b8619_1866451c
UUID: ad33f6f3_ec0e2b3f
Bytes: 5
ditto

4103:0-4104:48
Tue Jul 21 11:00:45 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: cd24aaaf_4d43f969
Bytes: 59
Maybe move this explanation before the DCHECK on line 4087?

4103:0-4104:48
Tue Jul 21 13:34:42 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: cd24aaaf_4d43f969
UUID: ed296e86_0eb4cbeb
Bytes: 66
I prefer to keep it here. This documents the field not the DCHECK.

File: compiler/optimizing/reference_type_propagation.cc

85:34-86:57
Tue Jul 21 11:00:45 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ad33f6f3_ec6aabde
Bytes: 68
Please document argument, at least load_class and bound_can_be_null.

85:34-86:57
Tue Jul 21 13:34:42 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ad33f6f3_ec6aabde
UUID: 0d432251_af7499c2
Bytes: 4
Done

139:45-139:49
Mon Jul 20 14:17:58 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 18b8c23c_d0617c33
Bytes: 11
drop 'just'

139:16-139:18
Mon Jul 20 14:17:58 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 38b10658_11a2ecfc
Bytes: 17
we -> upper_bound

139:45-139:49
Tue Jul 21 13:34:42 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 18b8c23c_d0617c33
UUID: 2df2a655_6043526a
Bytes: 4
Done

139:16-139:18
Tue Jul 21 13:34:42 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 38b10658_11a2ecfc
UUID: 2df2a655_803e56e8
Bytes: 4
Done

139:69-140:15
Mon Jul 20 14:17:58 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f8ba0e36_7247f66f
Bytes: 155
bound type but that needs -> bounded type. However, we would also need to update the instructions that use the HBoundType and have access to the work list.

139:69-140:15
Tue Jul 21 13:34:42 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f8ba0e36_7247f66f
UUID: 4deb5a63_81fbfa88
Bytes: 4
Done

192:10-192:15
Mon Jul 20 14:17:58 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 18b8c23c_30572851
Bytes: 37
Please add comments around the break.

192:10-192:15
Tue Jul 21 13:34:42 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 18b8c23c_30572851
UUID: 2d0b8619_b8a2b9aa
Bytes: 4
Done

252:39-253:19
Tue Jul 21 11:00:45 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 8d19d274_f31bb0a7
Bytes: 18
Nit: one per line.

252:39-253:19
Tue Jul 21 13:34:42 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 8d19d274_f31bb0a7
UUID: cd24aaaf_ada25daa
Bytes: 33
I found it a bit overkill but ok.

256:10-256:15
Mon Jul 20 14:17:58 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 38b10658_519c74b6
Bytes: 5
ditto

256:10-256:15
Tue Jul 21 13:34:42 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 38b10658_519c74b6
UUID: 4deb5a63_210aee2c
Bytes: 4
Done

343:34-344:66
Tue Jul 21 11:00:45 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2d8e26f0_603ed2eb
Bytes: 18
Nit: one per line.

343:34-344:66
Tue Jul 21 13:34:42 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2d8e26f0_603ed2eb
UUID: cd24aaaf_6d8c7543
Bytes: 4
Done

345:39-346:18
Tue Jul 21 11:00:45 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2d0b8619_783e61eb
Bytes: 6
Ditto.

345:39-346:18
Tue Jul 21 13:34:42 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2d0b8619_783e61eb
UUID: ad33f6f3_4c91bf59
Bytes: 4
Done

485:0-487:3
Mon Jul 20 14:17:58 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 38dae6a9_ac2e2bca
Bytes: 49
I think the DCHECK line 486 make this if useless.

485:0-487:3
Tue Jul 21 13:34:42 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 38dae6a9_ac2e2bca
UUID: 2d8e26f0_0096e657
Bytes: 20
huh... sure. thanks.

494:6-494:54
Tue Jul 21 11:00:45 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ad33f6f3_0c3df7e9
Bytes: 100
Replace with this:

  if (phi->InputAt(i)->CanBeNull()) {
    new_can_be_null = true;
    break;
  }

494:6-494:54
Tue Jul 21 13:34:42 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ad33f6f3_0c3df7e9
UUID: 2d8e26f0_8091965c
Bytes: 92
done.
I doubt it will make a difference. It's rare that we have more then 2 inputs to a phi.

File: compiler/optimizing/reference_type_propagation.h

33:27-34:56
Tue Jul 21 11:00:45 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: cd24aaaf_2d38adf9
Bytes: 18
Nit: one per line?

33:27-34:56
Tue Jul 21 13:34:42 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: cd24aaaf_2d38adf9
UUID: 2d0b8619_f80ef13e
Bytes: 4
Done

File: test/450-checker-types/src/Main.java

55:2-55:8
Tue Jul 21 11:00:45 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2d0b8619_183d25ea
Bytes: 13
Nit: private?

55:2-55:8
Tue Jul 21 13:34:42 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2d0b8619_183d25ea
UUID: ad33f6f3_2c05531c
Bytes: 18
it doesn't matter.

