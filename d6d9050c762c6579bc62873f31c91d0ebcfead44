Revision: d6d9050c762c6579bc62873f31c91d0ebcfead44
Patch-set: 1
File: /COMMIT_MSG

7:22-7:28
Fri Jan 16 17:07:50 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: abdbcb04_1f872ff9
Bytes: 68
I wouldn't really call this inline. "Implement" seems to fit better.

7:22-7:28
Fri Jan 16 17:09:36 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: abdbcb04_1f872ff9
UUID: 8b6b67dc_1a4979b1
Bytes: 4
Done

File: compiler/optimizing/code_generator_x86.cc

2086:41-2086:44
Fri Jan 16 18:23:33 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 8be0c7b0_2fa3e90f
Bytes: 75
fnc maybe? assuming it comes from functions.

the same in the other places.

2086:41-2086:44
Fri Jan 16 18:33:48 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 8be0c7b0_2fa3e90f
UUID: 4b7def9e_5e4fe9b8
Bytes: 54
It comes from FunCtioN.  Personal preference, I guess.

2103:2-2103:41
Fri Jan 16 18:23:33 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 4bc24f1f_9089da4f
Bytes: 116
Ideally we should make it possible to request temporary stack slots. I think it's ok for not but can you add a note?

2103:2-2103:41
Fri Jan 16 18:33:48 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 4bc24f1f_9089da4f
UUID: 8b6b67dc_7d718fcc
Bytes: 4
Done

2105:2-2105:18
Fri Jan 16 18:23:33 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 8be0c7b0_efa40116
Bytes: 26
doesn't it work with `__`?

2105:2-2105:18
Fri Jan 16 18:33:48 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 8be0c7b0_efa40116
UUID: 6bae3367_26d79656
Bytes: 152
__ doesn't support pointer to member function, unfortunately.  I tried several things.  I *think* that the problem is that ->* has to be one token (???)

File: compiler/optimizing/code_generator_x86_64.cc

562:15-562:34
Fri Jan 16 18:23:33 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 8be0c7b0_2f7c49da
Bytes: 15
who needs this?

562:15-562:34
Fri Jan 16 18:33:48 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 8be0c7b0_2f7c49da
UUID: 6bae3367_c6db227d
Bytes: 64
When I tested by generating core-optimized.oat, I ran into this.

562:15-562:34
Fri Jan 16 19:41:42 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6bae3367_c6db227d
UUID: 4bc24f1f_90947a4e
Bytes: 134
hmm, it shouldn't be case. I'm not having any issue when testing with the optimzed boot image... I will look more carefully next week.

562:15-562:34
Fri Jan 16 20:03:48 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 4bc24f1f_90947a4e
UUID: 4b7def9e_0956199f
Bytes: 77
You are right.  I removed this and passed the tests.  Will remove it as well.

676:9-676:23
Fri Jan 16 18:23:33 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: cbd63fdb_d142048d
Bytes: 32
why did you need to change this?

676:9-676:23
Fri Jan 16 18:33:48 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: cbd63fdb_d142048d
UUID: 6bae3367_a6e2a62c
Bytes: 258
Because I thought that it would remove a dependency, and allow the 2 instructions to issue in parallel.   Any other thoughts?

I also put in checks for 0 and used Xors, but I realized that they modify the CC and could cause a problem, so I removed that code.

