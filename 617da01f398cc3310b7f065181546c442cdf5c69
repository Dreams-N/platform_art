Revision: 617da01f398cc3310b7f065181546c442cdf5c69
Patch-set: 2
File: compiler/optimizing/bounds_check_elimination.cc

760:0-772:8
Wed Apr 29 12:32:28 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 500f6eb1_b92b4baf
Bytes: 58
Nit: maybe add blank lines before and after code snippets?

760:0-772:8
Mon May 11 22:27:51 2015 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 500f6eb1_b92b4baf
UUID: 0d679d0f_896c5e89
Bytes: 4
Done

774:24-774:28
Wed Apr 29 08:11:28 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 500f6eb1_5edb1517
Bytes: 10
goes -> go

774:24-774:28
Mon May 11 22:27:51 2015 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 500f6eb1_5edb1517
UUID: 4d6d15ec_0585830a
Bytes: 4
Done

775:34-775:56
Wed Apr 29 08:11:28 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 30375a6d_55398c9e
Bytes: 40
Nit: add "('i' is in the example above)"

775:34-775:56
Mon May 11 22:27:51 2015 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 30375a6d_55398c9e
UUID: 0d679d0f_c9625687
Bytes: 4
Done

776:36-776:39
Wed Apr 29 08:11:28 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 30375a6d_f5c8e02a
Bytes: 14
And -> We then

776:36-776:39
Mon May 11 22:27:51 2015 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 30375a6d_f5c8e02a
UUID: 0d679d0f_c9bb364f
Bytes: 4
Done

783:14-783:20
Wed Apr 29 08:11:28 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 30375a6d_15cea434
Bytes: 47
not to -> to not (though I'm no english expert)

783:14-783:20
Wed Apr 29 12:32:28 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 30375a6d_15cea434
UUID: 30375a6d_1049d293
Bytes: 43
I think the initial phrasing is correct. :)

785:76-785:82
Wed Apr 29 08:11:28 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 500f6eb1_3ed86118
Bytes: 15
throws -> throw

785:76-785:82
Mon May 11 22:27:51 2015 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 500f6eb1_3ed86118
UUID: 4d6d15ec_45a85b57
Bytes: 4
Done

788:8-788:12
Wed Apr 29 08:11:28 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 90e3a61e_1572160c
Bytes: 24
Remove duplicate 'from'.

788:8-788:12
Mon May 11 22:27:51 2015 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 90e3a61e_1572160c
UUID: 2d70e1c2_db79b5c0
Bytes: 4
Done

792:27-792:50
Wed Apr 29 08:11:28 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 30375a6d_d5d7dcc1
Bytes: 51
, so the collected array -> . These accesses are ..

791:39-792:26
Wed Apr 29 08:11:28 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 500f6eb1_1ed59dde
Bytes: 55
-> of blocks in the loop that dominates the back edge ?

792:27-792:50
Mon May 11 22:27:51 2015 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 30375a6d_d5d7dcc1
UUID: 0d679d0f_c91d76e9
Bytes: 4
Done

791:39-792:26
Mon May 11 22:27:51 2015 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 500f6eb1_1ed59dde
UUID: 0d679d0f_a9d7e275
Bytes: 94
Done. Also changed to "all back edges" since you are relaxing the single back edge constraint.

794:5-796:38
Wed Apr 29 08:11:28 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 90e3a61e_b557c25b
Bytes: 97
I'm having a hard time parsing that sentence. Might be worth splitting it into smaller sentences.

794:5-796:38
Mon May 11 22:27:51 2015 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 90e3a61e_b557c25b
UUID: 4d6d15ec_05e90329
Bytes: 336
Rephrase that to:
  // With 1) and 2), if the loop doesn't throw AIOOBE, collected array accesses when the
  // induction variable is at initial_ or end_ must be in legal range. Since the
  // added deoptimizations are basicly checking the induction variable at initial_ and
  // end_ values, no deoptimization will be triggered either.

801:0-801:57
Wed Apr 29 08:11:28 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 90e3a61e_955cc680
Bytes: 74
Maybe add an example, or restate the comment above about increasing by 2 ?

801:0-801:57
Mon May 11 22:27:51 2015 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 90e3a61e_955cc680
UUID: 4d6d15ec_c5beab46
Bytes: 75
Ok. I added restatement of "An increment of 2, for example, may skip end_."

