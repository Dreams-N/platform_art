Revision: 6ca20dce2cf69b5fda5136aaf4cb0b6297274f46
Patch-set: 1
File: compiler/elf_builder.h

1068:4-1077:5
Thu Apr 16 05:18:25 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 907ac6a8_29a3cbad
Bytes: 1694
Is there a reason to add a segment for this? If I compare against what Clang & GCC produce, both eh_frame and eh_frame_hdr are covered by a general load (note: eh_frame_hdr is also inside a LOAD). Then the alignment isn't an issue.

If we want to keep things separated (which would be understandable), it seems that we'll have to align eh_frame.

Here's for comparison libart.so from the host:

Elf file type is DYN (Shared object file)
Entry point 0x0
There are 8 program headers, starting at offset 52

Program Headers:
  Type           Offset   VirtAddr   PhysAddr   FileSiz MemSiz  Flg Align
  PHDR           0x000034 0x00000034 0x00000034 0x00100 0x00100 R   0x4
  LOAD           0x000000 0x00000000 0x00000000 0x531a68 0x531a68 R E 0x1000
  LOAD           0x532330 0x00533330 0x00533330 0x07ac0 0x098a0 RW  0x1000
  DYNAMIC        0x538030 0x00539030 0x00539030 0x00158 0x00158 RW  0x4
  NOTE           0x000134 0x00000134 0x00000134 0x00024 0x00024 R   0x4
  GNU_EH_FRAME   0x531494 0x00531494 0x00531494 0x005d4 0x005d4 R   0x4
  GNU_STACK      0x000000 0x00000000 0x00000000 0x00000 0x00000 RW  0
  GNU_RELRO      0x532330 0x00533330 0x00533330 0x06cd0 0x06cd0 RW  0x10

 Section to Segment mapping:
  Segment Sections...
   00     
   01     .note.gnu.build-id .dynsym .dynstr .gnu.hash .gnu.version .gnu.version_d .gnu.version_r .rel.dyn .rel.plt .init .plt .text .fini .rodata .eh_frame .eh_frame_hdr 
   02     .data.rel.ro.local .ctors .dtors .jcr .data.rel.ro .init_array .dynamic .got .got.plt .data .bss 
   03     .dynamic 
   04     .note.gnu.build-id 
   05     .eh_frame_hdr 
   06     
   07     .data.rel.ro.local .ctors .dtors .jcr .data.rel.ro .init_array .dynamic .got

