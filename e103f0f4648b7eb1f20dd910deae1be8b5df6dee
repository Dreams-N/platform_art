Revision: e103f0f4648b7eb1f20dd910deae1be8b5df6dee
Patch-set: 1
File: compiler/elf_builder.h

118:4-118:11
Tue Apr 28 20:32:46 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d0d99e70_5c0b145e
Bytes: 1
?

118:4-118:11
Tue Apr 28 21:39:33 2015 +0000
Author: David Srbecky <1065473@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d0d99e70_5c0b145e
UUID: 30375a6d_15ef84b5
Bytes: 4
Done

122:4-122:11
Tue Apr 28 20:32:46 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d0d99e70_fc19a0b0
Bytes: 1
?

122:4-122:11
Tue Apr 28 21:39:33 2015 +0000
Author: David Srbecky <1065473@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d0d99e70_fc19a0b0
UUID: 90e3a61e_b5210220
Bytes: 4
Done

161:4-161:11
Tue Apr 28 20:32:46 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f0f222e5_55d52add
Bytes: 1
?

161:4-161:11
Tue Apr 28 21:39:33 2015 +0000
Author: David Srbecky <1065473@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f0f222e5_55d52add
UUID: 90e3a61e_95260634
Bytes: 4
Done

165:4-165:11
Tue Apr 28 20:32:46 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d0d99e70_dcff04a6
Bytes: 1
?

165:4-165:11
Tue Apr 28 21:39:33 2015 +0000
Author: David Srbecky <1065473@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d0d99e70_dcff04a6
UUID: 30375a6d_b5e338ce
Bytes: 4
Done

223:8-223:17
Tue Apr 28 20:32:46 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b0d42a38_34a5fa28
Bytes: 135
That's a bad name. What is lazy about it?

Most team members were not in favor of lambdas in the past. That's where CodeOutput came in.

223:8-223:17
Tue Apr 28 21:39:33 2015 +0000
Author: David Srbecky <1065473@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b0d42a38_34a5fa28
UUID: 90e3a61e_753cba42
Bytes: 259
Done (renamed).

I did a quick search for <functional> in the code base before I added this, and seems that lambadas are used in several other places.  So are lambda still frowned upon?  I would prefer to keep them but I can change it if there are objections.

223:8-223:17
Wed Apr 29 04:19:49 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 90e3a61e_753cba42
UUID: f0f222e5_e3058314
Bytes: 468
Searching for <functional> doesn't mean you find lambdas. We use it for function pointers, too. In fact, except for Igor's cmdline parser, I believe most use of lambdas has been scrubbed from the main files (the only existence is in *tests* for the optimizing compiler and one assembler [because it was the only typable way to get things done generically, languages without integrated reflection suck...]).

Don't change things, yet. I was waiting for bdc to weigh in.

223:8-223:17
Wed Apr 29 08:15:12 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f0f222e5_e3058314
UUID: 90e3a61e_00b9b60e
Bytes: 182
I strongly favor not using it. I personally can't parse:
using LazyWrite = std::function<bool(File*)>;  // NOLINT

I'm sure there's other ways to write it that don't involve lambdas.

223:8-223:17
Wed Apr 29 09:29:41 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 90e3a61e_00b9b60e
UUID: 90e3a61e_c08f2e2e
Bytes: 295
The run time overhead of std::function<> is substantial, starting with its internal usage of new/delete. So, I'm not very keen to use it widely.

It's already slipped into command line parsing and dex2oat's class list parsing but I'm now tempted to remove it so that people don't get used to it.

236:4-236:11
Tue Apr 28 20:32:46 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b0d42a38_74c4a2e2
Bytes: 1
?

236:4-236:11
Tue Apr 28 21:39:33 2015 +0000
Author: David Srbecky <1065473@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b0d42a38_74c4a2e2
UUID: 30375a6d_d5e83cac
Bytes: 4
Done

240:4-240:11
Tue Apr 28 20:32:46 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f0f222e5_35950616
Bytes: 1
?

240:4-240:11
Tue Apr 28 21:39:33 2015 +0000
Author: David Srbecky <1065473@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f0f222e5_35950616
UUID: 90e3a61e_5539be50
Bytes: 4
Done

324:4-324:11
Tue Apr 28 20:32:46 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b0d42a38_742dc212
Bytes: 1
?

324:4-324:11
Tue Apr 28 21:39:33 2015 +0000
Author: David Srbecky <1065473@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b0d42a38_742dc212
UUID: 500f6eb1_5ea0b59e
Bytes: 4
Done

328:4-328:11
Tue Apr 28 20:32:46 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b0d42a38_5422c623
Bytes: 1
?

328:4-328:11
Tue Apr 28 21:39:33 2015 +0000
Author: David Srbecky <1065473@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b0d42a38_5422c623
UUID: 500f6eb1_3ead0197
Bytes: 4
Done

383:4-383:11
Tue Apr 28 20:32:46 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b0d42a38_b4332a6f
Bytes: 1
?

383:4-383:11
Tue Apr 28 21:39:33 2015 +0000
Author: David Srbecky <1065473@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b0d42a38_b4332a6f
UUID: 500f6eb1_1eaa3d7f
Bytes: 4
Done

389:4-389:11
Tue Apr 28 20:32:46 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f0f222e5_357ce66d
Bytes: 1
?

389:4-389:11
Tue Apr 28 21:39:33 2015 +0000
Author: David Srbecky <1065473@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f0f222e5_357ce66d
UUID: 30375a6d_75de1009
Bytes: 4
Done

File: oatdump/oatdump.cc

255:6-255:52
Tue Apr 28 20:32:46 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f0f222e5_b50456d0
Bytes: 39
?

Didn't you just change that to auto?

255:6-255:52
Tue Apr 28 21:39:33 2015 +0000
Author: David Srbecky <1065473@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f0f222e5_b50456d0
UUID: 90e3a61e_b5dc6299
Bytes: 107
Done (it was a side effect of the fact that I did the first CL last to separate changes that affect output)

