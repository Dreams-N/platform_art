Revision: b19930c5cba3cf662dce5ee057fcc9829b4cbb9c
Patch-set: 2
File: compiler/optimizing/code_generator_utils.cc

38:32-38:84
Fri Apr 10 13:56:32 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6394aac1_be72f562
Bytes: 91
This condition is exactly the same as the one from the previous line; did I miss something?

38:32-38:84
Fri Apr 10 15:14:10 2015 +0000
Author: Guillaume Sanchez <1068522@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6394aac1_be72f562
UUID: 6394aac1_7ecb0dcc
Bytes: 54
I just don't know. Copy pasted all of this from Quick.

38:32-38:84
Fri Apr 10 15:24:02 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6394aac1_7ecb0dcc
UUID: 6394aac1_3eea651e
Bytes: 253
There are two different formulas here and I think the original author wanted to specify the conditions for both even if they are the same.

I agree that this can be improved :)

Roland, quick could have use a reviewer with such skills to details as you!

38:32-38:84
Fri Apr 10 15:42:09 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6394aac1_3eea651e
UUID: 6394aac1_be7835f4
Bytes: 66
Alright, I'll have a look at Quick's code.  (And thanks Calin!) :)

File: compiler/optimizing/code_generator_utils.h

26:5-26:36
Fri Apr 10 12:29:08 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6394aac1_be9af545
Bytes: 78
Could you move this to CodeGenerator as a static function and avoid this file?

26:5-26:36
Fri Apr 10 13:32:34 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6394aac1_be9af545
UUID: a38a229d_c0f7e05a
Bytes: 366
I think it's nicer to have an utility file here. We're starting to pile up static functions in CodeGenerator class which shouldn't be there imo (e.g. GetInt32ValueOf). The alternative to mix static function and classes it's pretty ugly.

There are also some constant definition too and other functions which could potentially be separated here as they are utilities.

26:5-26:36
Fri Apr 10 13:35:23 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a38a229d_c0f7e05a
UUID: e3617abc_ba9a0d46
Bytes: 52
OK. Should we add a CodeGeneratorHelpers class then?

26:5-26:36
Fri Apr 10 13:39:53 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e3617abc_ba9a0d46
UUID: 6394aac1_9e40d9f8
Bytes: 348
That sounds equally good to me. I'd still keep it in a separate file, but if it's a separate class I don't mind having it in the code generator either. Up to you :)

side thought: I have the feeling that in future we might expand this o be an utility for the optimizing in general, but until that need arises I think it's to focus on the generator.

File: compiler/optimizing/code_generator_x86.cc

2381:8-2383:22
Fri Apr 10 12:29:08 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e3617abc_da40a167
Bytes: 210
Strange indentation. I suggest:

SlowPathCodeX86* slow_path = new (GetGraph()->GetArena()) DivRemMinusOneSlowPathX86(
    out.AsRegister<Register>(), is_div);

Or move DivRemMinusOneSlowPathX86 to the new line.

