Revision: db63b29c4a93a3555a0f2c63a576561368f79354
Patch-set: 28
File: compiler/dex/mir_optimization.cc

1704:10-1704:47
Thu Apr 16 13:03:49 2015 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b0926a12_ccd4b7e5
Bytes: 44
const SafeMap<uint32_t, std::set<uint32_t>>&

File: compiler/optimizing/builder.cc

595:0-598:64
Mon Apr 20 11:14:10 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7048f2a0_3bbf7745
Bytes: 58
Please add a helper in CompilerDriver: IsStringInitMethod.

667:5-668:99
Mon Apr 20 11:14:10 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 10089662_304e884e
Bytes: 135
This has the potential of being null in case of inlining. You should probably return false if it is (this will bailout to using quick).

1856:10-1856:67
Mon Apr 20 11:14:10 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 103a56f6_c0677e97
Bytes: 38
Please add a helper in CompilerDriver.

File: compiler/optimizing/intrinsics_arm.cc

893:0-894:100
Mon Apr 20 11:14:10 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 10089662_50d86cf3
Bytes: 91
Can we deopt/ask for stack traces for these methods? If yes, you need to call RecordPcInfo.

913:0-915:13
Mon Apr 20 11:14:10 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 103a56f6_80c9f6fc
Bytes: 60
Why don't you need a slow path in case of null for this one?

File: compiler/optimizing/intrinsics_arm64.cc

1016:0-1016:30
Mon Apr 20 11:14:10 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 103a56f6_40bfee43
Bytes: 7
Remove.

1045:0-1045:30
Mon Apr 20 11:14:10 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 10089662_30c9682d
Bytes: 7
Remove.

1065:0-1065:30
Mon Apr 20 11:14:10 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 103a56f6_20c46ae2
Bytes: 7
Remove.

File: compiler/optimizing/nodes.h

2234:31-2234:32
Mon Apr 20 11:14:10 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7048f2a0_7bc9fff9
Bytes: 5
const

2246:13-2246:25
Mon Apr 20 11:14:10 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7048f2a0_1bc43be2
Bytes: 17
is_string_init_ ?

2247:10-2247:29
Mon Apr 20 11:14:10 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7048f2a0_9bafab10
Bytes: 27
Add a comment what this is.

File: runtime/entrypoints/quick/quick_alloc_entrypoints.cc

162
Thu Apr 16 20:17:39 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 10dc16fc_7963fb3f
Bytes: 278
Just a note: this does not have the kUseTlabFastPath code. But it can't use the kUseTlabFastPath logic because we need to do more than just allocate like copying bytes/chars. As we now combine an allocation call and a constructor call into one, this could be faster than before.

File: runtime/interpreter/interpreter_common.cc

672:4-672:31
Thu Apr 16 13:03:49 2015 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 709c722a_6f5eb97d
Bytes: 28
MethodRefToStringInitRegMap&

File: runtime/mirror/object-inl.h

343:65-343:82
Thu Apr 16 20:17:39 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 907ac6a8_fb22719c
Bytes: 130
How about we call 

return GetClass<kVerifyFlags, kReadBarrierOption>()->IsStringClass<kReadBarrierOption>();

like IsArtMethod()?

348:9-348:72
Thu Apr 16 20:17:39 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d080bec6_cd81ffd3
Bytes: 29
Just call IsString() instead?

