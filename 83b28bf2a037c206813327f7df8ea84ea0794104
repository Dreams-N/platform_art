Revision: 83b28bf2a037c206813327f7df8ea84ea0794104
Patch-set: 2
File: runtime/stack.cc

325:36-325:47
Tue Sep 06 10:34:31 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 16453384_be9ed9b2
Bytes: 21
Nit: add parentheses.

325:50-325:57
Tue Sep 06 10:34:31 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f6417f7a_005e8872
Bytes: 6
Ditto.

File: test/534-checker-bce-deoptimization/src/Main.java

63:70-64:79
Tue Sep 06 09:34:35 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 16fd3327_3ecd6980
Bytes: 97
To prevent this, could you update the test to only have one deoptimize with an empty loop header?

63:70-64:79
Tue Sep 06 10:07:06 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 16fd3327_3ecd6980
UUID: 166e130e_96866c11
Bytes: 475
I don't understand how reducing the number of Deoptimize instructions is related to this comment. I'm referring to the rewrite I advocated at

    https://android-review.googlesource.com/#/c/248205/1/compiler/optimizing/bounds_check_elimination.cc@1339

(I guess I could get rid of the null check Deoptimize with

  if (array == null) return;

but the two BCE Deoptimize instructions are inevitably there in the "BCE (after)" even though one of them is later removed by DCE.)

