Revision: 83c1a3db838d05a85e2a07d10ca52d567896e9d8
Patch-set: 1
File: /COMMIT_MSG

7:43-7:48
Fri Apr 22 10:03:01 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a87f884b_67e0e6df
Bytes: 10
Nit: Baker

File: runtime/gc/collector/concurrent_copying-inl.h

71:17-71:22
Fri Apr 22 10:03:01 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 289d58d4_56abca99
Bytes: 6
Ditto.

71:17-71:22
Thu May 19 02:18:51 2016 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 289d58d4_56abca99
UUID: e85340c8_f02bd272
Bytes: 4
Done

83:47-83:49
Fri Apr 22 09:05:43 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 288b98a4_80a5d877
Bytes: 23
maybe say why it is ok.

83:47-83:49
Thu May 19 02:18:51 2016 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 288b98a4_80a5d877
UUID: e85340c8_90e5be85
Bytes: 4
Done

92:11-96:74
Fri Apr 22 09:05:43 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c8659cc5_fd4f230b
Bytes: 18
nit: one per line?

92:11-96:74
Thu May 19 02:18:51 2016 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: c8659cc5_fd4f230b
UUID: e85340c8_50ef4661
Bytes: 4
Done

97:71-97:98
Fri Apr 22 09:05:43 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 88864495_232b3476
Bytes: 59
why do you need to do it at the end of marking and not now?

97:71-97:98
Thu May 19 02:18:51 2016 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 88864495_232b3476
UUID: e85340c8_50418618
Bytes: 361
This detection logic is conservative (it would include false-gray and some really-gray cases both.) If we change it to white now, it would be incorrect for really-gray cases, that is, turning off the read barrier and breaking the invariant (DCHECK) that the objects on the mark stack are gray. Doing it at the end of marking ensures that there's no such issues.

File: runtime/gc/collector/concurrent_copying.cc

324:15-324:20
Fri Apr 22 10:03:01 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 289d58d4_f6b2b608
Bytes: 6
Ditto.

324:15-324:20
Thu May 19 02:18:51 2016 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 289d58d4_f6b2b608
UUID: e85340c8_d02d766d
Bytes: 4
Done

324:0-343:7
Fri Apr 22 09:05:43 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 4879ac72_f992d3d3
Bytes: 93
Looks very similar to the other code in concurrent_copying-inl.h. Could you somehow share it?

324:0-343:7
Thu May 19 02:18:51 2016 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 4879ac72_f992d3d3
UUID: e85340c8_1b2fafd0
Bytes: 4
Done

708:30-708:34
Fri Apr 22 10:03:01 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e8a6e026_ee549fd2
Bytes: 13
Maybe remove?

708:30-708:34
Thu May 19 02:18:51 2016 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e8a6e026_ee549fd2
UUID: e85340c8_90605ead
Bytes: 4
Done

1927:1-1946:7
Fri Apr 22 09:05:43 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c87cbc59_852de46e
Bytes: 25
ditto about similar code.

1927:1-1946:7
Thu May 19 02:18:51 2016 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: c87cbc59_852de46e
UUID: e85340c8_5b1c47ae
Bytes: 4
Done

1988:0-2015:11
Fri Apr 22 09:05:43 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 4879ac72_19986ff1
Bytes: 14
sort of ditto.

1988:0-2015:11
Thu May 19 02:18:51 2016 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 4879ac72_19986ff1
UUID: e85340c8_db8117ef
Bytes: 69
I'll keep this one as it's part of a larger pattern with differences.

