Revision: a124fc578dfdec13cded8e8e7e198a9068d0a454
Patch-set: 11
File: compiler/common_compiler_test.h

118:38-118:41
Tue Nov 03 11:20:59 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 968f39ad_41abd45b
Bytes: 4
drop

118:38-118:41
Tue Nov 03 17:34:09 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 968f39ad_41abd45b
UUID: 968f39ad_616b706b
Bytes: 4
Done

File: compiler/dex/quick/quick_compiler.cc

676:6-676:42
Tue Nov 03 11:20:59 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b688bda5_8506c65c
Bytes: 52
Why doens't kForceReadBarrier imply kUseReadBarrier?

676:6-676:42
Tue Nov 03 17:34:09 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b688bda5_8506c65c
UUID: 768ac5a0_803238d3
Bytes: 366
The kForceReadBarrier flag turns on read barrier support in the compiler, but does not actually execute any read barrier algorithm in the runtime.

This flag is intended for debugging use only.  I wanted to remove it in a previous patch set, but Hiroshi convinced me that it was useful to keep it for now; we can removed later, when read barrier support is complete.

File: compiler/optimizing/code_generator.cc

159:27-159:79
Tue Nov 03 11:20:59 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 167c2956_65b8e0ac
Bytes: 81
Move that one up (otherwise it feels like being applied GetGraph()->GetBlocks()).

159:27-159:79
Tue Nov 03 17:34:09 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 167c2956_65b8e0ac
UUID: 968f39ad_e1cf80e4
Bytes: 68
Right; I introduced a local constant to improve readability in PS13.

File: compiler/optimizing/code_generator.h

215:37-215:68
Tue Nov 03 11:20:59 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 568142c7_567034e7
Bytes: 109
I think we should drop this for now. It will make the implementation much simpler and the review much easier.

215:37-215:68
Tue Nov 03 17:34:09 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 568142c7_567034e7
UUID: 768ac5a0_a0cf3417
Bytes: 147
We should discuss this with Hiroshi and Mathieu.  I would like to make sure we are not violating GC assumptions by not emitting some read barriers.

588
Tue Nov 03 11:20:59 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 167c2956_0510f462
Bytes: 35
What is this? Please add a comment.

588
Tue Nov 03 17:34:09 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 167c2956_0510f462
UUID: f675d6b9_73030026
Bytes: 4
Done

File: compiler/optimizing/code_generator_x86.h

414:18-414:26
Tue Nov 03 11:20:59 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 569941f8_dfc5ff97
Bytes: 12
is provided.

414:18-414:26
Tue Nov 03 17:34:09 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 569941f8_dfc5ff97
UUID: 568142c7_9651ece3
Bytes: 4
Done

414:1-416:65
Tue Nov 03 11:20:59 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3694cdc0_a1173ae6
Bytes: 39
Maybe just say " for array accesses..."

414:1-416:65
Tue Nov 03 17:34:09 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3694cdc0_a1173ae6
UUID: 569941f8_02c9ce40
Bytes: 4
Done

