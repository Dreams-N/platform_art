Revision: 67ee863a8fb13cb6b98131e956421625d3795165
Patch-set: 3
File: Android.mk

367:4-367:8
Wed Jul 02 07:44:48 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 041cbd1d_763a30ba
Bytes: 142
Why this change? I haven't seen any changes in the art script that would require this executable. Maybe you meant to add it to build-art-host?

367:4-367:8
Wed Jul 02 16:50:48 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 041cbd1d_763a30ba
UUID: a4a77122_5f559b2a
Bytes: 182
I thought about delaying this but the goal is that the next CL will enabled patching pregenerated .oat files automatically in ANDROID_DATA, so it doesn't hurt to start building this.

File: compiler/compilers.cc

96:37-96:58
Wed Jul 02 01:20:35 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 84d6ed80_adfc69da
Bytes: 194
can we just add this as a CompilerOptions that is in CompilerDriver so we don't have to pass it through all the layers explicitly? clearly we have it here at this point and even one layer below.

96
Wed Jul 02 18:35:13 2014 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 84d6ed80_adfc69da
UUID: 440235bc_bea3018d
Bytes: 165
I did it like this because I think we should have the patch information regardless of how we compile it. ISTM that the option is only whether or not to write it out.

File: compiler/elf_writer_quick.cc

832:32-832:42
Wed Jul 02 01:20:35 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a4a77122_2e3067da
Bytes: 89
if this is the same as include_patches, I'd call it the same name consistently thoughout.

832
Wed Jul 02 18:35:13 2014 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a4a77122_2e3067da
UUID: 640d79e9_ff91f7cd
Bytes: 4
Done

File: compiler/image_test.cc

73:8-73:32
Wed Jul 02 01:20:35 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a4a77122_4e0213d8
Bytes: 175
i'd probably add the comment explaining that it is unsupported for now. its obvious why this is here now, because i just saw the mclinker change, but it won't be obvious later

73
Wed Jul 02 18:35:13 2014 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a4a77122_4e0213d8
UUID: 640d79e9_1f994bf1
Bytes: 4
Done

File: compiler/image_writer.cc

144:0-146:75
Wed Jul 02 01:20:35 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 04f3dd1b_25118d25
Bytes: 162
i agree that we should have this comment, but is this the right place? somewhere where we are actually calculating the size of the patches makes more sense to me.

146
Wed Jul 02 18:35:13 2014 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 04f3dd1b_25118d25
UUID: 440235bc_3eb891b1
Bytes: 4
Done

147:25-147:39
Wed Jul 02 01:20:35 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 04f3dd1b_85e981cf
Bytes: 58
we don't need the argument here right? it is in oat_file_?

147
Wed Jul 02 18:35:13 2014 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 04f3dd1b_85e981cf
UUID: c4fc65ef_65d8bcfb
Bytes: 128
Yes we need it. This is the File* that the elf_file is in. We need it to fully map in the elf file and add patching information.

802:0-804:65
Wed Jul 02 01:20:35 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 84d6ed80_2d2999f0
Bytes: 58
this seems like a better place for the comment from above.

804
Wed Jul 02 18:35:13 2014 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 84d6ed80_2d2999f0
UUID: 440235bc_becca148
Bytes: 4
Done

851:4-851:14
Wed Jul 02 01:20:35 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a4a77122_2e37c71c
Bytes: 433
while clever, I assumed this would be in SetPatchLocation. i see this way that the patch information is scoped to this function. but that could be done with an out argument. I thought you might be doing this because there were a lot of cases in SetPatchLocation, but there aren't, there is just one. plus you have kind of a hacky return value now where 0 implies relative vs absolute, which is just for the convenience of maybe_push.

851
Wed Jul 02 18:35:13 2014 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a4a77122_2e37c71c
UUID: 04cafddd_46ef9221
Bytes: 29
Rewrote using out parameters.

874:25-874:39
Wed Jul 02 01:20:35 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 04f3dd1b_a5d63df7
Bytes: 88
I don't think we should be reserving our own section type, I'd just use a named section.

874
Wed Jul 02 18:35:13 2014 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 04f3dd1b_a5d63df7
UUID: 440235bc_9ed1dde0
Bytes: 30
Changed It to search for name.

887:29-887:30
Wed Jul 02 01:20:35 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 84d6ed80_4d204d02
Bytes: 14
space around *

887
Wed Jul 02 18:35:13 2014 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 84d6ed80_4d204d02
UUID: 440235bc_fec61926
Bytes: 4
Done

File: compiler/image_writer.h

40:61-40:78
Wed Jul 02 01:20:35 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 04f3dd1b_e5ede5e0
Bytes: 57
again in this case, it can be found via compiler options.

40
Wed Jul 02 18:35:13 2014 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 04f3dd1b_e5ede5e0
UUID: 640d79e9_7fa68738
Bytes: 135
Again. It seems like this is more an option controlling whether it gets written out and doesn't seem to belong in the compiler_options.

File: compiler/oat_test.cc

122:0-122:78
Wed Jul 02 01:20:35 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 84d6ed80_0d9935f1
Bytes: 113
i wondered why you didn't do this in the other test where you set to true but then set back to false if portable.

122
Wed Jul 02 18:35:13 2014 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 84d6ed80_0d9935f1
UUID: 640d79e9_3f29aff0
Bytes: 118
In the other test we just use the default compiler and it is not possible to determine the kind from a given compiler.

File: patchoat/Android.mk

33:78-33:106
Wed Jul 02 01:20:35 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 04f3dd1b_05729164
Bytes: 98
do you depend on the compiler parts? if not, you can leave these out if you just need the runtime.

33
Wed Jul 02 18:35:13 2014 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 04f3dd1b_05729164
UUID: 440235bc_1eb2edea
Bytes: 4
Done

File: patchoat/patchoat.cc

52:27-52:40
Wed Jul 02 18:52:21 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c4fc65ef_e504ccaf
Bytes: 127
rather than bake another copy of these strings here, I'd make this return InstructionSet, and then use GetInstructionSetString.

72:2-72:18
Wed Jul 02 18:52:21 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 440235bc_9efa7d54
Bytes: 176
i think we always call this error_msg. should we make it an argument and use it in place of the LOG(ERROR) and have the caller log? if not move to point of first use from here.

80:9-80:13
Wed Jul 02 18:52:21 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c4fc65ef_a523e443
Bytes: 82
art_location -> image_location for consistency. also in the text part "image file"

110:4-110:89
Wed Jul 02 18:52:21 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 440235bc_feff3942
Bytes: 24
return false; after this

174:31-174:36
Wed Jul 02 18:52:21 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 440235bc_be1e61f4
Bytes: 42
WriteFully to deal with signal interrupts.

189:31-189:36
Wed Jul 02 18:52:21 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 440235bc_9e239d44
Bytes: 10
WriteFully

208:19-208:29
Wed Jul 02 18:52:21 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 640d79e9_1f4b0b95
Bytes: 10
relocation

231:2-231:94
Wed Jul 02 18:52:21 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 440235bc_3e1371ed
Bytes: 226
I think I'd just move this into InHeap and rename it "CheckHeapReference" so it can be reused with the below call. it can deal with the null case as well. it is a pretty common pattern for us to have CheckFoo helper functions.

286:2-286:38
Wed Jul 02 18:52:21 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 440235bc_5e0aa5ae
Bytes: 23
all the values of what?

374:0-389:1
Wed Jul 02 18:52:21 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c4fc65ef_a52da420
Bytes: 344
I think we have this knowledge elsewhere. ah yes, in ElfFixup::FixupDynamic. can you move this to a shared helper in elf_utils.h?

there are other cases you are missing because of this such as 

              case DT_MIPS_BASE_ADDRESS:
              case DT_MIPS_CONFLICT:
              case DT_MIPS_LIBLIST:
              case DT_MIPS_RLD_MAP:

444:0-446:1
Wed Jul 02 18:52:21 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 640d79e9_df41936f
Bytes: 33
just use "ELF32_ST_TYPE(st_info)"

477:2-477:67
Wed Jul 02 18:52:21 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c4fc65ef_85698838
Bytes: 69
we look all these sections up in CheckOatFile, can we just save them?

537:24-537:27
Wed Jul 02 18:52:21 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c4fc65ef_c5eb905b
Bytes: 50
again, we always call these image (here and below)

671:1-686:7
Wed Jul 02 18:52:21 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c4fc65ef_459ca0e1
Bytes: 89
we should consider moving to a non-fatal form of GetInstructionSetFromString. add a TODO?

688:0-688:27
Wed Jul 02 18:52:21 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c4fc65ef_85a6a835
Bytes: 81
I think it's clearer to do the parsing checks here, but the semantic checks later

877:20-877:25
Wed Jul 02 18:52:21 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 640d79e9_226a34bc
Bytes: 6
supply

File: runtime/elf_utils.h

65:0-66:39
Wed Jul 02 01:20:35 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 84d6ed80_ed630122
Bytes: 89
I'd rather avoid using these I think some ABIs might have effectively used some of these.

66
Wed Jul 02 18:35:13 2014 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 84d6ed80_ed630122
UUID: c4fc65ef_85d6a8f7
Bytes: 421
It shouldn't. Sections for specific processor ABI's should be between SHT_LOPROC and SHT_HIPROC. OS & associated tools sections (i.e. for BSD/GNU tools we use) are kept between SHT_LOOS and SHT_HIOS.

Between LOUSER and HIUSER is reserved for application use. This means that since niether linux nor our loader uses it we should be free to do so.

Anyway if it becomes a problem it would be easy to change the value then.

File: runtime/image.h

159:2-159:23
Wed Jul 02 01:20:35 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a4a77122_f1480074
Bytes: 48
don't we want to assume unsigned for simplicity?

159
Wed Jul 02 18:35:13 2014 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a4a77122_f1480074
UUID: 640d79e9_5f8d83db
Bytes: 88
We can have negative patch deltas and I think that the header should not hide that fact.

File: runtime/oat_file.h

65:40-65:55
Wed Jul 02 01:20:35 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a4a77122_11402c47
Bytes: 67
replace 'this oatfile." with << GetLocation() so we know which one.

65
Wed Jul 02 18:35:13 2014 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a4a77122_11402c47
UUID: c4fc65ef_05f8d89a
Bytes: 4
Done

