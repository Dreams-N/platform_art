Revision: 390b6b6e3a0fb3af0fa40e73df77702b2b344bdf
Patch-set: 3
File: runtime/base/scoped_arena_containers.h

64:0-73:68
Tue Oct 20 11:26:38 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 39f75ee3_e6e120b1
Bytes: 203
Looks like something that should be in stl_util.h.
Rename deleter to DestroyOnlyDelete, for naming precedent see std::default_delete, art::FreeDelete.
Maybe rename ArenaUniquePtr to DestroyOnlyUniquePtr?

64:0-73:68
Tue Oct 20 18:00:47 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 39f75ee3_e6e120b1
UUID: 79fd56bf_64507ff1
Bytes: 4
Done

File: runtime/dex_file.cc

422:0-425:3
Tue Oct 20 11:26:38 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d91642dc_d8adcd0d
Bytes: 169
Should the AOT compiler explicitly request CreateFindClassDefIndex()? I don't like adding another dependency on Runtime. DexFile should not know that there is a Runtime.

422:0-425:3
Tue Oct 20 18:00:47 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d91642dc_d8adcd0d
UUID: 79d47637_6f2180b2
Bytes: 4
Done

File: runtime/verifier/method_verifier.cc

65
Tue Oct 20 11:26:38 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 19345a65_e57d90a3
Bytes: 320
You're allocating on a scoped arena which doesn't guarantee zero-initialization, so std::uninitialized_fill_n().

You can get away with it because you're using a single ScopedArenaAllocator with the ArenaStack and you never Reset() it. However, this is not something that the ScopedArenaAllocator intentionally supports.

65
Tue Oct 20 18:00:47 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 19345a65_e57d90a3
UUID: b9ec2e3d_54728acf
Bytes: 4
Done

709:0-710:60
Tue Oct 20 11:26:38 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 595172a7_5fb52f04
Bytes: 89
Why the cast? AllocArray<>() returns correctly typed pointer.

std::unitialized_fill_n().

709:0-710:60
Tue Oct 20 18:00:47 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 595172a7_5fb52f04
UUID: 79fd56bf_84e5bb91
Bytes: 4
Done

File: runtime/verifier/method_verifier.h

732:37-732:52
Tue Oct 20 10:21:50 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 59fc12c5_443b4e93
Bytes: 12
insn_flags_?

732:37-732:52
Tue Oct 20 18:00:47 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 59fc12c5_443b4e93
UUID: d90802ae_45345dbf
Bytes: 4
Done

File: runtime/verifier/reg_type.h

283:11-283:17
Tue Oct 20 11:26:38 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 19345a65_c5c96c43
Bytes: 14
::operator new

283:11-283:17
Tue Oct 20 18:00:47 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 19345a65_c5c96c43
UUID: 39de7e5b_6080783b
Bytes: 4
Done

File: runtime/verifier/reg_type_cache.cc

167:2-167:50
Tue Oct 20 11:26:38 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b940aed4_bf831799
Bytes: 55
AllocArray<char>() to avoid the reinterpret_cast below.

167:2-167:50
Tue Oct 20 18:00:47 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b940aed4_bf831799
UUID: f91146d4_a1e78907
Bytes: 4
Done

225
Tue Oct 20 11:26:38 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d91642dc_98f435f5
Bytes: 34
Keep the DCHECK(klass != nullptr).

225
Tue Oct 20 18:00:47 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d91642dc_98f435f5
UUID: f91146d4_0194157f
Bytes: 4
Done

341:23-341:24
Tue Oct 20 11:26:38 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f936a66e_610c1611
Bytes: 101
Nit: Arena allocations are rounded up to 8 bytes, so we may as well start with 64 bits instead of 32.

341:23-341:24
Tue Oct 20 18:00:47 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f936a66e_610c1611
UUID: 39111e0a_b3f218c9
Bytes: 4
Done

581:37-581:43
Tue Oct 20 11:26:38 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 595172a7_9f4e57aa
Bytes: 74
I still prefer c_str() even though C++11 defines the data() just the same.

581:37-581:43
Tue Oct 20 18:00:47 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 595172a7_9f4e57aa
UUID: 39de7e5b_145c55d9
Bytes: 4
Done

File: runtime/verifier/register_line-inl.h

186:44-186:64
Tue Oct 20 11:26:38 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b940aed4_3f9067d6
Bytes: 34
MEMBER_OFFSET(RegisterLine, line_)

186:44-186:64
Tue Oct 20 18:00:47 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b940aed4_3f9067d6
UUID: b9ec2e3d_9407f231
Bytes: 4
Done

194:70-194:79
Tue Oct 20 11:26:38 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 595172a7_3f60630c
Bytes: 40
Can you add a new arena allocation type?

194:70-194:79
Tue Oct 20 18:00:47 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 595172a7_3f60630c
UUID: 39de7e5b_408d7c71
Bytes: 17
What do you mean?

194:70-194:79
Tue Oct 20 18:34:48 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 39de7e5b_408d7c71
UUID: 59fc12c5_44034e90
Bytes: 542
What I meant: Define a new value in the ArenaAllocKind enumeration and pass it to Adapter() here instead of the default kArenaAllocSTL, define it's description in ArenaAllocatorStatsImpl<kCount>::kAllocNames. Also use the new kind in other places where you use the arena in verifier.

On a second thought, it's actually pretty useless because the verifier has its own ArenaStack, so its allocations will not be mixed with anything else. (Unless you want to distinguish between different verifier allocations by actually using multiple kinds.)

194:70-194:79
Tue Oct 20 18:56:01 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 59fc12c5_44034e90
UUID: 99f3ea1a_98344dc1
Bytes: 28
I added kArenaAllocVerifier.

196:2-196:30
Tue Oct 20 11:26:38 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 595892e5_44d1ee54
Bytes: 106
This is not guaranteed by the ScopedArenaAllocator. Reinstate the memset() or std::uninitialized_fill_n().

196:2-196:30
Tue Oct 20 18:00:47 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 595892e5_44d1ee54
UUID: d90802ae_e527d181
Bytes: 4
Done

File: runtime/verifier/register_line.h

396:2-396:20
Tue Oct 20 11:26:38 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 595892e5_e4c1fa8b
Bytes: 32
Please, change this to line_[1].

396:2-396:20
Tue Oct 20 18:00:47 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 595892e5_e4c1fa8b
UUID: f91146d4_61f191bf
Bytes: 4
Done

