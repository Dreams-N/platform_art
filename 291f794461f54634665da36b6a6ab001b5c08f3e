Revision: 291f794461f54634665da36b6a6ab001b5c08f3e
Patch-set: 2
File: compiler/optimizing/code_generator_arm.cc

6786:35-6786:58
Tue Jun 14 20:52:40 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 94c10d6f_5d8c2f98
Bytes: 6
Weird.

File: compiler/optimizing/code_generator_arm64.cc

3525:6-3525:32
Tue Jun 14 20:52:40 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 94c10d6f_1dad97fe
Bytes: 14
Not necessary.

5156:35-5156:58
Tue Jun 14 20:52:40 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 94c10d6f_bd746b73
Bytes: 6
Weird.

File: compiler/optimizing/code_generator_mips.cc

3723:6-3723:32
Tue Jun 14 20:52:40 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 94c10d6f_1d58f70b
Bytes: 14
Not necessary.

5172:35-5172:58
Tue Jun 14 20:52:40 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 94c10d6f_3db05b5a
Bytes: 6
Weird.

File: compiler/optimizing/code_generator_mips64.cc

2957:6-2957:32
Tue Jun 14 20:52:40 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 94c10d6f_5d5e6ffc
Bytes: 14
Not necessary.

File: compiler/optimizing/code_generator_x86.cc

2046:6-2046:32
Tue Jun 14 20:52:40 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 94c10d6f_7d3813c4
Bytes: 14
Not necessary.

4071:35-4071:58
Tue Jun 14 20:52:40 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 94c10d6f_9d6be79f
Bytes: 14
Weirds me out.

File: compiler/optimizing/code_generator_x86_64.cc

2261:6-2261:32
Tue Jun 14 20:52:40 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 94c10d6f_bd18eb6a
Bytes: 14
Not necessary.

3989:35-3989:58
Tue Jun 14 20:52:40 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 94c10d6f_5d30afe3
Bytes: 56
I'm weirded out by this. Can you trace this and explain?

File: compiler/optimizing/inliner.cc

660:10-660:36
Tue Jun 14 20:52:40 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 94c10d6f_bd1a2b71
Bytes: 55
No longer necessary, the right value is already stored.

File: compiler/optimizing/nodes.h

4137:46-4137:58
Tue Jun 14 20:52:40 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 94c10d6f_dd3cbfdc
Bytes: 107
How about passing in the method instead? Or letting the caller of HInvokeInterface do the GetIMTIndex call?

File: runtime/entrypoints/entrypoint_utils-inl.h

562:69-562:90
Tue Jun 14 20:52:40 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 94c10d6f_3db3bbb1
Bytes: 7
Remove.

File: runtime/entrypoints/quick/quick_trampoline_entrypoints.cc

2178:69-2178:81
Tue Jun 14 20:52:40 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 94c10d6f_3d885bcb
Bytes: 21
Use interface_method.

2230:67-2230:79
Tue Jun 14 20:52:40 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 94c10d6f_fd69c3e2
Bytes: 6
Ditto.

2241:15-2241:55
Tue Jun 14 20:52:40 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 94c10d6f_ddc95f16
Bytes: 65
Cache result from line 2230 in a local (instead of method_index)?

