Revision: f86b8fce3a18fe7d774aceb58edb048845f7133d
Patch-set: 1
File: compiler/optimizing/nodes.h

1418:7-1418:22
Fri Jul 01 09:23:40 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c0abc3ee_ec9f8bcc
Bytes: 27
High level comments please.

1418:7-1418:22
Fri Jul 01 09:43:15 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: c0abc3ee_ec9f8bcc
UUID: 00a23b11_ee2adf1f
Bytes: 4
Done

1419:27-1419:53
Fri Jul 01 09:23:40 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 001ddb1a_9913bfb4
Bytes: 30
this can still be const right?

1419:27-1419:53
Fri Jul 01 09:43:15 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 001ddb1a_9913bfb4
UUID: 20d49f7c_07ef56ee
Bytes: 138
Yes, it could be, but I prefer it this way. Going from const HUserRecord<> to non-const HInstruction* subverts the constness of the graph.

1420:0-1420:6
Fri Jul 01 09:23:40 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 00a23b11_6e06efc6
Bytes: 14
2 spaces less.

1420:0-1420:6
Fri Jul 01 09:43:15 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 00a23b11_6e06efc6
UUID: 20d49f7c_27f25ada
Bytes: 4
Done

1423:0-1423:6
Fri Jul 01 09:23:40 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a0116f0b_93355c86
Bytes: 5
ditto

1423:0-1423:6
Fri Jul 01 09:43:15 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a0116f0b_93355c86
UUID: a0116f0b_d32fd42d
Bytes: 4
Done

1819:0-1821:3
Fri Jul 01 09:23:40 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a0f88ffb_9bd1eb66
Bytes: 85
Now that const/non const is more obvious, what is the use case for the non-const one?

1819:0-1821:3
Fri Jul 01 09:43:15 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a0f88ffb_9bd1eb66
UUID: fdaeb264_a93fd913
Bytes: 117
If you want to modify those inputs in any way, you need non-const HInstruction*. For example, in UpdateInputsUsers().

1819:0-1821:3
Fri Jul 01 09:46:32 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: fdaeb264_a93fd913
UUID: 20d49f7c_a7c64a79
Bytes: 161
OK. Could we make this one GetInputsForModification? Looks to me the users will mostly use GetInputs, and some specific methods doing replacement use the former.

