Revision: 57a793e6cc695aff3d00caa2ae007c986ed3ac99
Patch-set: 1
File: /COMMIT_MSG

9:0-15:42
Wed Sep 23 04:48:47 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 891c6b20_d924174a
Bytes: 31
equals is missing from the list

9:0-15:42
Mon Sep 28 18:40:20 2015 +0000
Author: Chris Larsen <1071873@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 891c6b20_d924174a
UUID: a905afc4_dd24fb49
Bytes: 4
Done

9:0-15:42
Thu Oct 01 05:53:39 2015 +0000
Author: Chris Larsen <1071873@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a905afc4_dd24fb49
UUID: 9555663b_3acc9df9
Bytes: 81
equals is being removed from this patch and will submitted in a subsequent patch.

File: compiler/optimizing/intrinsics_mips64.cc

58:4-58:10
Tue Sep 29 23:18:47 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f86a1765_10832c3e
Bytes: 14
Use DCHECK_EQ.

58:4-58:10
Thu Oct 01 05:53:39 2015 +0000
Author: Chris Larsen <1071873@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f86a1765_10832c3e
UUID: b5526a4f_bb99d341
Bytes: 4
Done

901:20-901:22
Wed Sep 23 04:48:12 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 699c97d8_ed62e54c
Bytes: 156
Why T9?

For newer contributions it's now also "required" to put such things into a nicely named constant, kXXX, when it's local to the file like this is...

901:20-901:22
Mon Sep 28 18:40:20 2015 +0000
Author: Chris Larsen <1071873@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 699c97d8_ed62e54c
UUID: 2e2e2591_ed785c8b
Bytes: 102
I can change this to TMP which was added to the enumeration in runtime/arch/mips64/registers_mips64.h.

951:10-951:18
Wed Sep 23 21:07:16 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 4916f301_088c77fa
Bytes: 110
It actually happens that str == arg, which triggers a check. We'll have to implement a compile-time fast-path.

951:10-951:18
Mon Sep 28 18:40:20 2015 +0000
Author: Chris Larsen <1071873@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 4916f301_088c77fa
UUID: 4e4c398b_d0fc09a7
Bytes: 407
I pulled the logic directly from the ARM64 code (compiler/optimizing/intrinsics_arm64.cc, lines 1224-1226):
  // Reference equality check, return true if same reference.
  __ Cmp(str, arg);
  __ B(&return_true, eq);
Is that code wrong too, or did I misunderstand what the ARM code is doing?
So if this triggers a check I should revert to "slow path" code here and let the slow path do the work in this case?

951:10-951:18
Mon Sep 28 18:52:14 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 4e4c398b_d0fc09a7
UUID: ee616dea_77d0b388
Bytes: 350
It means we're generating more code than we need to in the other architectures. We simply sometimes get the case where receiver and argument are the same (guess for inlining or so).

The other architectures allow to compare two registers that are the same. Your assembler rejects that.

This simply needs a pre-check and fast-bail (with result true).

951:10-951:18
Thu Oct 01 05:53:39 2015 +0000
Author: Chris Larsen <1071873@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ee616dea_77d0b388
UUID: 8e52b121_8349b1aa
Bytes: 470
I understand now. I was focusing on comparing the contents of the two registers to see if "this", and "anObject" were the same object. You were focusing on the register str being the same register as arg, which would be another case of str and anObject pointer to the same object.  I've added a check at the top of the inserted code to short-circuit to "true" in a single instruction in this case.

"equals" is removed from this patch and will be part of a future patch.

1011:8-1012:44
Tue Sep 29 23:18:47 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f86a1765_53e68e1b
Bytes: 78
Replace with

  IsUint<16>(invoke->InputAt(1)->AsIntConstant()->GetValue())

?

1011:8-1012:44
Thu Oct 01 05:53:39 2015 +0000
Author: Chris Larsen <1071873@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f86a1765_53e68e1b
UUID: 9555663b_baa8adee
Bytes: 4
Done

1063:2-1063:52
Tue Sep 29 23:18:47 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f86a1765_d3359e0c
Bytes: 208
Replace with

  Location outLocation = calling_convention.GetReturnLocation(Primitive::kPrimInt);
  locations->SetOut(Location::RegisterLocation(outLocation.AsRegister<GpuRegister>()));

(as in other places).

1063:2-1063:52
Thu Oct 01 05:53:39 2015 +0000
Author: Chris Larsen <1071873@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f86a1765_d3359e0c
UUID: 9555663b_1a1719e2
Bytes: 4
Done

1084:2-1084:52
Tue Sep 29 23:18:47 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2e2e2591_c33a0caf
Bytes: 6
Ditto.

1084:2-1084:52
Thu Oct 01 05:53:39 2015 +0000
Author: Chris Larsen <1071873@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2e2e2591_c33a0caf
UUID: b5526a4f_3b3dc3a4
Bytes: 4
Done

File: runtime/arch/mips64/quick_entrypoints_mips64.S

1641:26-1641:37
Tue Sep 29 23:18:47 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0e5fa128_a7def2f5
Bytes: 135
Two suggestions about this part of the comment:

1. replace it with

  if this[i] != anotherString[i]

2. move it on the previous line.

1641:26-1641:37
Thu Oct 01 05:53:39 2015 +0000
Author: Chris Larsen <1071873@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0e5fa128_a7def2f5
UUID: b5526a4f_5b3cf7a4
Bytes: 4
Done

1642:35-1642:44
Tue Sep 29 23:18:47 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ae5bf53d_d6ff539e
Bytes: 18
this.charAt(i++) ?

1642:35-1642:44
Thu Oct 01 05:53:39 2015 +0000
Author: Chris Larsen <1071873@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ae5bf53d_d6ff539e
UUID: b5526a4f_bb30b3c9
Bytes: 4
Done

1646:35-1646:53
Tue Sep 29 23:18:47 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ee86cdd4_2f774714
Bytes: 27
anotherString.charAt(i++) ?

1646:35-1646:53
Thu Oct 01 05:53:39 2015 +0000
Author: Chris Larsen <1071873@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ee86cdd4_2f774714
UUID: 15a33681_6617d0e1
Bytes: 4
Done

1664:26-1664:40
Tue Sep 29 23:18:47 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2e2e2591_c3568cce
Bytes: 40
Nit: move this comment on the next line?

1664:26-1664:40
Thu Oct 01 05:53:39 2015 +0000
Author: Chris Larsen <1071873@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2e2e2591_c3568cce
UUID: b5398a03_c344a819
Bytes: 78
The comment is really for both lines. Amended comment to make this more clear.

1671:26-1671:35
Tue Sep 29 23:18:47 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 8e52b121_74530a55
Bytes: 18
this.charAt(i++) ?

1671:26-1671:35
Thu Oct 01 05:53:39 2015 +0000
Author: Chris Larsen <1071873@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 8e52b121_74530a55
UUID: 9555663b_3a3bfd61
Bytes: 4
Done

