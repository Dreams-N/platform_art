Revision: b410b2720408b5ef3c0fb51cdeae3c4f041dac53
Patch-set: 12
File: runtime/stack.h

104
Fri Oct 09 01:34:13 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 451b415b_061bbc3c
Bytes: 47
return true = all ok, return false = exception?

104
Fri Oct 09 03:49:03 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 451b415b_061bbc3c
UUID: 054dc959_14e91a71
Bytes: 4
Done

106:7-106:31
Fri Oct 09 01:34:13 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a526bd9a_a9bd5917
Bytes: 9
OrThrow ?

106:7-106:31
Fri Oct 09 03:49:03 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a526bd9a_a9bd5917
UUID: 451b415b_267c38ed
Bytes: 198
I think that is a double indication. Check already states that it does work.

Normally I wouldn't even have done the bool return, that is just to be able to optimize away dead code at the call-site.

106:7-106:31
Fri Oct 09 18:03:34 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 451b415b_267c38ed
UUID: e55355fb_79d17bd6
Bytes: 238
Not sure if it's used terminology like that elsewhere, but to me "Check" sounds like it will either CHECK or DCHECK fail out instead of doing a throw.

If the 'Check' in the name is a sticking point, perhaps "AllMonitorsReleasedOrThrow" ?

106:7-106:31
Fri Oct 09 18:16:53 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e55355fb_79d17bd6
UUID: 8538d9b1_b67e8ea0
Bytes: 113
Usually functions have verbs in their name for what they're doing. AllMonitorsReleasedOrThrow sounds weird to me.

106:7-106:31
Fri Oct 09 19:58:12 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 8538d9b1_b67e8ea0
UUID: 054dc959_971c2c08
Bytes: 32
ThrowUnlessAllMonitorsReleased ?

106:7-106:31
Fri Oct 09 23:32:42 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 054dc959_971c2c08
UUID: 0536a9c7_32639649
Bytes: 52
Can we just go with CheckAllMonitorsReleasedOrThrow?

106:7-106:31
Mon Oct 12 08:35:10 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0536a9c7_32639649
UUID: 9f290a88_8ed43b1e
Bytes: 36
CheckAllMonitorsReleasedOrThrow sgtm

130:30-130:45
Fri Oct 09 01:34:13 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 8521b987_283fa383
Bytes: 39
Can this be

  const mirror::Object*

?

130:30-130:45
Fri Oct 09 03:49:03 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 8521b987_283fa383
UUID: 0536a9c7_8cbee7a1
Bytes: 151
No. The entries could be changed by the visitor, so the visitors take non-const pointers. I prefer to be non-const here instead of having a const-cast.

