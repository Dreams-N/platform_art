Revision: f0b361e172ce6d03adfbf0a04bfd87381a1bbe64
Patch-set: 4
File: compiler/optimizing/bounds_check_elimination.cc

18:0-18:32
Sun Apr 26 14:14:37 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5034ce65_62b736c7
Bytes: 32
I think you can remove this now.

18:0-18:32
Sun Apr 26 18:09:15 2015 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5034ce65_62b736c7
UUID: f00b02a7_67ee5237
Bytes: 4
Done

299:12-299:72
Sun Apr 26 14:14:37 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 70f712e2_430c66ef
Bytes: 45
-> if (loop_info->Contains(array->GetBlock())

299:12-299:72
Sun Apr 26 18:09:15 2015 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 70f712e2_430c66ef
UUID: d0027e8c_ec5c5f5c
Bytes: 4
Done

311:21-311:22
Sun Apr 26 14:14:37 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 90fc86c6_24c1722e
Bytes: 12
" *" -> "* "

311:21-311:22
Sun Apr 26 18:09:15 2015 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 90fc86c6_24c1722e
UUID: b0fd0ac2_e5beb646
Bytes: 4
Done

315:13-315:14
Sun Apr 26 14:14:37 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 90fc86c6_04be76a0
Bytes: 11
extra space

315:13-315:14
Sun Apr 26 18:09:15 2015 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 90fc86c6_04be76a0
UUID: b0fd0ac2_a59f9edc
Bytes: 4
Done

450:0-450:48
Sun Apr 26 14:14:37 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 90fc86c6_64de4a09
Bytes: 110
It would be nice to get rid of this. It's only used to backtrack right? See my comments below for suggestions.

450:0-450:48
Sun Apr 26 18:09:15 2015 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 90fc86c6_64de4a09
UUID: b0fd0ac2_85a4a22d
Bytes: 4
Done

459:28-459:29
Sun Apr 26 14:14:37 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 70f712e2_23196a2d
Bytes: 5
const

459:28-459:29
Sun Apr 26 18:09:15 2015 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 70f712e2_23196a2d
UUID: f00b02a7_673c1243
Bytes: 4
Done

567:0-578:5
Sun Apr 26 14:14:37 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 90fc86c6_84e826ab
Bytes: 161
Could we refactor this to:

bool CanAddDeoptimizationConstant(HInstruction* value, int32_t constant, bool* is_proven)

Where is_proven is the result of line 572?

567:0-578:5
Sun Apr 26 18:09:15 2015 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 90fc86c6_84e826ab
UUID: b0fd0ac2_659ac6ed
Bytes: 4
Done

601:0-603:53
Sun Apr 26 14:14:37 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 70f712e2_a33b1a7d
Bytes: 90
Ditto:

bool CanAddDeoptimizationArrayLength(value, array_length, offset, bool* is_proven)

601:0-603:53
Sun Apr 26 18:09:15 2015 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 70f712e2_a33b1a7d
UUID: f00b02a7_47eb4e25
Bytes: 4
Done

716:0-719:7
Sun Apr 26 14:14:37 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 70f712e2_63364294
Bytes: 252
Change this to:

if (AddDeoptimizationConstant(..., &is_constant_proven) && AddDeoptimizationArrayLength(..., &is_array_length_proven) {
  if (!is_constant_proven) AddDeoptimizationConstant()
  if (!is_length_proven) AddDeoptimizationArrayLength()
}

?

716:0-719:7
Sun Apr 26 18:09:15 2015 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 70f712e2_63364294
UUID: b0fd0ac2_45b0ea6c
Bytes: 22
Good suggestion! Done.

721:0-726:7
Sun Apr 26 14:14:37 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 90fc86c6_44db4e17
Bytes: 5
ditto

721:0-726:7
Sun Apr 26 18:09:15 2015 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 90fc86c6_44db4e17
UUID: d0027e8c_6c586f5b
Bytes: 4
Done

730:0-730:39
Sun Apr 26 14:14:37 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5034ce65_42beb2a1
Bytes: 29
Then you shouldn't need this.

730:0-730:39
Sun Apr 26 18:09:15 2015 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5034ce65_42beb2a1
UUID: d0027e8c_8c428b6c
Bytes: 4
Done

748:15-748:47
Sun Apr 26 14:14:37 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5034ce65_e2e906b2
Bytes: 42
Maybe add a finder.HasFoundArray() helper?

748:15-748:47
Sun Apr 26 18:09:15 2015 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5034ce65_e2e906b2
UUID: f00b02a7_071c36ea
Bytes: 4
Done

945:21-945:25
Sun Apr 26 14:14:37 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 90fc86c6_24d85218
Bytes: 18
not -> not defined

945:21-945:25
Sun Apr 26 18:09:15 2015 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 90fc86c6_24d85218
UUID: f00b02a7_e727e232
Bytes: 4
Done

1194:0-1199:11
Sun Apr 26 14:14:37 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5034ce65_02ef4ab5
Bytes: 126
I don't understand why you need this. We know where the loop body is, why do we need to be conservative on what DEX generates?

1194:0-1199:11
Sun Apr 26 18:09:15 2015 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5034ce65_02ef4ab5
UUID: d0027e8c_0c1d7b8f
Bytes: 133
I'm picking IfFalseSuccessor() at line 1201 below. I'll remove this part and change  IfFalseSuccessor below to a loop_body_successor.

