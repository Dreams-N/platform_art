Revision: 9d76cef20d308ce1d54ffb7013984faef542c46f
Patch-set: 2
File: test/442-checker-constant-folding/src/Main.java

318:20-318:29
Fri Jul 24 11:54:17 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: cda66ad5_3d160f7f
Bytes: 138
why is this happening in constant folding and not in instruction simplifier? same as with the other ops which don't really fold constants?

318:20-318:29
Fri Jul 24 11:59:19 2015 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: cda66ad5_3d160f7f
UUID: edab2e9c_9e8abd23
Bytes: 255
This is to handle cases like `(var | -1) + 1`.
I think at the time I immplemented this constant folding was only ran before simplification. Now we have multiple occurrences of both, so having that in the simplifier would probably yield equivalent results.

318:20-318:29
Mon Jul 27 10:51:56 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: edab2e9c_9e8abd23
UUID: adb5b6f9_9cbd2524
Bytes: 317
I think the rationale was: "graph simplifications producing a constant should be implemented in the constant folding pass; graph simplifications not producing constants should be implemented in the instruction simplifier".  I'll add a word on this in a comment (maybe in another CL, as it seems a bit off-topic here.)

318:20-318:29
Mon Jul 27 10:58:00 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: adb5b6f9_9cbd2524
UUID: 0da5e2c6_5f430bc6
Bytes: 18
Yea, please do so.

