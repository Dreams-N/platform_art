Revision: b4518e1a0dc0a97241225ddea04301f9f1c67063
Patch-set: 15
File: compiler/optimizing/register_allocator_graph_color.cc

105
Wed Aug 10 18:17:19 2016 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b927f349_14b9c990
Bytes: 85
can you add some comment that is either already coalesced or not allowed to coalesce.

105
Wed Aug 10 21:03:16 2016 +0000
Author: Matthew Gharrity <1108540@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b927f349_14b9c990
UUID: b927f349_f421adbd
Bytes: 4
Done

357
Wed Aug 10 18:29:29 2016 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b927f349_74491d6b
Bytes: 68
same feedback, if possible describe field before giving intended use

357
Wed Aug 10 21:03:16 2016 +0000
Author: Matthew Gharrity <1108540@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b927f349_74491d6b
UUID: b927f349_8f7aa6c9
Bytes: 4
Done

362:11-362:15
Wed Aug 10 18:29:29 2016 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b927f349_3443a54d
Bytes: 8
and here

362:11-362:15
Wed Aug 10 21:03:16 2016 +0000
Author: Matthew Gharrity <1108540@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b927f349_3443a54d
UUID: b927f349_2fb4b280
Bytes: 4
Done

505
Wed Aug 10 18:17:19 2016 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b927f349_b48fb5d1
Bytes: 227
I'm a little worried about coalescing may prevent forward progress (if we get some heuristics wrong). Does it make sense to set this to false once some attempt threshold is reached? Then we only do splitting from that point on.

505
Wed Aug 10 21:03:16 2016 +0000
Author: Matthew Gharrity <1108540@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b927f349_b48fb5d1
UUID: b927f349_aa1d1066
Bytes: 51
Good idea, just to be extra safe. I'll update this.

1036:40-1036:54
Wed Aug 10 18:17:19 2016 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b927f349_fbae8033
Bytes: 29
input_interval->GetParent() ?

1036:40-1036:54
Wed Aug 10 21:03:16 2016 +0000
Author: Matthew Gharrity <1108540@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b927f349_fbae8033
UUID: b927f349_8564c521
Bytes: 124
Right, good catch.
I've updated "inputs[i]->GetLiveInterval()"
to "inputs[i]->GetLiveInterval()->GetSiblingAt(def_position)"

1394:6-1394:12
Thu Aug 11 00:09:12 2016 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7ee9e168_e2152654
Bytes: 9
DCHECK_EQ

1394:6-1394:12
Thu Aug 11 01:46:33 2016 +0000
Author: Matthew Gharrity <1108540@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7ee9e168_e2152654
UUID: 7ee9e168_889c3b6e
Bytes: 4
Done

1450:2-1450:8
Thu Aug 11 00:09:12 2016 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7ee9e168_02000a08
Bytes: 9
DCHECK_NE

1450:2-1450:8
Thu Aug 11 01:46:33 2016 +0000
Author: Matthew Gharrity <1108540@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7ee9e168_02000a08
UUID: 7ee9e168_a8afff8b
Bytes: 4
Done

1458:4-1458:10
Thu Aug 11 00:09:12 2016 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7ee9e168_a2f6fe27
Bytes: 9
DCHECK_NE

1458:4-1458:10
Thu Aug 11 01:46:33 2016 +0000
Author: Matthew Gharrity <1108540@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7ee9e168_a2f6fe27
UUID: 7ee9e168_087eeb45
Bytes: 4
Done

1464:29-1464:60
Thu Aug 11 00:09:12 2016 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7ee9e168_82e41a37
Bytes: 85
A helper (like IsTriviallyColorable()) should be nice. Easy to make mistakes of >/>=.

1464:29-1464:60
Thu Aug 11 01:46:33 2016 +0000
Author: Matthew Gharrity <1108540@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7ee9e168_82e41a37
UUID: 7ee9e168_c8b243f6
Bytes: 16
Good idea; done.

1472
Thu Aug 11 00:09:12 2016 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7ee9e168_e27086a0
Bytes: 9
Why this?

1472
Thu Aug 11 01:46:33 2016 +0000
Author: Matthew Gharrity <1108540@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7ee9e168_e27086a0
UUID: 7ee9e168_4b9ced5a
Bytes: 234
The coalescing heuristics count the number of high-degree neighbors of a node. So, if `adj` is no longer high-degree, then coalesce attempts for its *neighbors* may now succeed, as their high-degree neighbor count just went down by 1.

1476:8-1476:14
Thu Aug 11 00:09:12 2016 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7ee9e168_2268aebe
Bytes: 9
DCHECK_EQ

1476:8-1476:14
Thu Aug 11 01:46:33 2016 +0000
Author: Matthew Gharrity <1108540@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7ee9e168_2268aebe
UUID: 7ee9e168_4864f3b3
Bytes: 4
Done

1500:25-1502:42
Thu Aug 11 00:09:12 2016 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7ee9e168_62d35634
Bytes: 58
Can we just call CheckTransitionFromFreezeWorklist() here?

1500:25-1502:42
Thu Aug 11 01:46:33 2016 +0000
Author: Matthew Gharrity <1108540@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7ee9e168_62d35634
UUID: 7ee9e168_8b7b1521
Bytes: 4
Done

1608
Thu Aug 11 00:09:12 2016 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7ee9e168_a5c3a832
Bytes: 55
Can we skip the opportunity between from and into here?

1608
Thu Aug 11 01:46:33 2016 +0000
Author: Matthew Gharrity <1108540@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7ee9e168_a5c3a832
UUID: 7ee9e168_a85dbff3
Bytes: 119
We could, but I think it's cheaper/simpler to let its stage transition naturally to kDefunct next time it's considered.

1617:4-1617:10
Thu Aug 11 00:09:12 2016 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7ee9e168_851f84c9
Bytes: 9
DCHECK_EQ

1617:4-1617:10
Thu Aug 11 01:46:33 2016 +0000
Author: Matthew Gharrity <1108540@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7ee9e168_851f84c9
UUID: 7ee9e168_886afb81
Bytes: 4
Done

1623:4-1623:10
Thu Aug 11 00:09:12 2016 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7ee9e168_650b6083
Bytes: 9
DCHECK_EQ

1623:4-1623:10
Thu Aug 11 01:46:33 2016 +0000
Author: Matthew Gharrity <1108540@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7ee9e168_650b6083
UUID: 7ee9e168_686fb793
Bytes: 4
Done

1749
Wed Aug 10 18:29:29 2016 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b927f349_f4868d78
Bytes: 27
helper function to do that?

1749
Wed Aug 10 21:03:16 2016 +0000
Author: Matthew Gharrity <1108540@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b927f349_f4868d78
UUID: b927f349_ef30fa05
Bytes: 4
Done

File: compiler/optimizing/register_allocator_graph_color.h

143
Wed Aug 10 18:29:29 2016 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b927f349_744d9d96
Bytes: 45
probably also say what true/false means here.

143
Wed Aug 10 21:03:16 2016 +0000
Author: Matthew Gharrity <1108540@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b927f349_744d9d96
UUID: b927f349_efa31a99
Bytes: 4
Done

200
Wed Aug 10 18:29:29 2016 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b927f349_541d0171
Bytes: 120
one comment for two functions is dangerous. Either state that this is given for both heuristics, or give each their own!

200
Wed Aug 10 21:03:16 2016 +0000
Author: Matthew Gharrity <1108540@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b927f349_541d0171
UUID: b927f349_afb682d4
Bytes: 4
Done

273:25-273:26
Wed Aug 10 18:29:29 2016 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b927f349_74ffdd02
Bytes: 89
First describe the field, that give some background information like this (noun vs. verb)

273:25-273:26
Wed Aug 10 21:03:16 2016 +0000
Author: Matthew Gharrity <1108540@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b927f349_74ffdd02
UUID: b927f349_6f3e2a0d
Bytes: 4
Done

291
Wed Aug 10 18:29:29 2016 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b927f349_94fcf90d
Bytes: 22
Queue that contains...

291
Wed Aug 10 21:03:16 2016 +0000
Author: Matthew Gharrity <1108540@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b927f349_94fcf90d
UUID: b927f349_6fcf0a26
Bytes: 4
Done

296
Wed Aug 10 18:29:29 2016 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b927f349_34f9651c
Bytes: 4
same

296
Wed Aug 10 21:03:16 2016 +0000
Author: Matthew Gharrity <1108540@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b927f349_34f9651c
UUID: b927f349_0fdd36d9
Bytes: 4
Done

File: compiler/optimizing/ssa_liveness_analysis.h

521:16-522:5
Wed Aug 10 18:29:29 2016 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b927f349_54c3c1a2
Bytes: 62
How about
!HasRegister() && FirstRegisterUse() != kNoLifetime;

521:16-522:5
Wed Aug 10 21:03:16 2016 +0000
Author: Matthew Gharrity <1108540@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b927f349_54c3c1a2
UUID: b927f349_6a8138a1
Bytes: 4
Done

