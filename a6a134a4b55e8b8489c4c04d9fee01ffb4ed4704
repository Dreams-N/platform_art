Revision: a6a134a4b55e8b8489c4c04d9fee01ffb4ed4704
Patch-set: 11
File: compiler/optimizing/builder.cc

262:20-262:41
Thu Jun 25 13:46:47 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: fe8e767f_d2fda280
Bytes: 61
Would it read better if it was the opposite IsBlockInPcRange?

262:20-262:41
Thu Jun 25 15:44:17 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: fe8e767f_d2fda280
UUID: 3e0c8eed_b992ffab
Bytes: 152
Not sure, it's always used to test for being outside, so the function itself might look a bit nicer but the code that uses it will be full of negations.

285:4-285:31
Thu Jun 25 14:15:29 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3e856e59_f166a8a1
Bytes: 101
nit:
this should be CreateIfDoesntExist or just Create. `Find` doesn't make sense here. 

same below.

285:4-285:31
Thu Jun 25 15:44:17 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3e856e59_f166a8a1
UUID: 3e0c8eed_599e43b2
Bytes: 101
I named it after use on line 302. CreateBlockStartingAtIfDoesntExist sounds a little verbose to me...

309:20-309:43
Thu Jun 25 14:15:29 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3e6e4e7b_8c34e70b
Bytes: 135
if only there was a way to easily embed images into text files... this function could be so easily documented with a few flow images...

323:62-323:70
Thu Jun 25 14:15:29 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3e856e59_916b9c68
Bytes: 71
you can make this more efficient and 'jump' to the block end_pc, right?

323:62-323:70
Thu Jun 25 15:44:17 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3e856e59_916b9c68
UUID: 3e856e59_f408d662
Bytes: 40
Yep, too bad blocks don't keep that info

324:19-324:24
Thu Jun 25 14:15:29 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3e856e59_b4dd6e52
Bytes: 103
this is the block corresponding to the try code, right? Not the handler. Could you name it accordingly?

324:19-324:24
Thu Jun 25 15:44:17 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3e856e59_b4dd6e52
UUID: fe8e767f_b281fed5
Bytes: 4
Done

329:6-329:68
Thu Jun 25 13:46:47 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3e6e4e7b_8c0dc771
Bytes: 49
Please put a high-level comment before this loop.

329:6-329:68
Thu Jun 25 15:44:17 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3e6e4e7b_8c0dc771
UUID: 3e0c8eed_d9b89337
Bytes: 4
Done

371:0-371:66
Thu Jun 25 13:46:47 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3e6e4e7b_ac120b91
Bytes: 5
ditto

371:0-371:66
Thu Jun 25 15:44:17 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3e6e4e7b_ac120b91
UUID: 3e856e59_94262af0
Bytes: 4
Done

472:0-472:37
Thu Jun 25 13:46:47 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3e856e59_1176ccff
Bytes: 47
Explain why you are doing this at the very end.

472:0-472:37
Thu Jun 25 15:44:17 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3e856e59_1176ccff
UUID: 3e0c8eed_5cff51a1
Bytes: 4
Done

File: compiler/optimizing/graph_checker.cc

84:10-84:29
Thu Jun 25 13:46:47 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3e6e4e7b_0c02373e
Bytes: 19
I can't parse this.

84:10-84:29
Thu Jun 25 15:44:17 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3e6e4e7b_0c02373e
UUID: 3e6e4e7b_4c7d8f92
Bytes: 10
Simplified

File: compiler/optimizing/nodes.cc

467:9-467:51
Thu Jun 25 13:46:47 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3e856e59_7152b862
Bytes: 42
Add a comment why you need the null check.

467:9-467:51
Thu Jun 25 15:44:17 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3e856e59_7152b862
UUID: 3e0c8eed_3cf37deb
Bytes: 121
Functions used before SSA is built have to do this because a block might not have any. Plus we do it in other places too.

1093:9-1093:43
Thu Jun 25 13:46:47 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3e0c8eed_59292312
Bytes: 22
Ditto: why this check?

File: compiler/optimizing/nodes.h

729:52-729:69
Thu Jun 25 13:46:47 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: fe8e767f_d22602c3
Bytes: 37
Would CatchHandler be less confusing?

729:52-729:69
Thu Jun 25 15:44:17 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: fe8e767f_d22602c3
UUID: 3e0c8eed_b9603f30
Bytes: 140
The grammar nazi in me struggles with that. It's either an "exception handler" or a "catch block". "Catch handler" doesn't make sense to me.

1940:50-1940:52
Thu Jun 25 13:46:47 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3e0c8eed_d91c13f7
Bytes: 8
and/or ?

1940:50-1940:52
Thu Jun 25 15:44:17 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3e0c8eed_d91c13f7
UUID: 3e6e4e7b_0c7797b4
Bytes: 16
Done. good point

1986:7-1986:20
Thu Jun 25 14:15:29 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3e6e4e7b_09878996
Bytes: 60
Add a comment that only the Builder should use Set* methods.

1986:7-1986:20
Thu Jun 25 15:44:17 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3e6e4e7b_09878996
UUID: fe8e767f_323c2e9c
Bytes: 4
Done

1991:9-1991:32
Thu Jun 25 14:15:29 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3e856e59_51769452
Bytes: 76
This only needs Is* methods. Remove from friends and make Is methods public.

1991:9-1991:32
Thu Jun 25 15:44:17 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3e856e59_51769452
UUID: 3e6e4e7b_ec024312
Bytes: 4
Done

