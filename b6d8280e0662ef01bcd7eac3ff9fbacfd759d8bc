Revision: b6d8280e0662ef01bcd7eac3ff9fbacfd759d8bc
Patch-set: 12
File: compiler/optimizing/code_generator.cc

357:60-358:13
Mon Nov 02 23:28:09 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 161fca56_7453fdbf
Bytes: 68
'this method' -> 'in the HInvokeVirtual and HInvokeInterface calls'?

File: compiler/optimizing/code_generator_x86.cc

5825:4-5825:5
Mon Nov 02 23:28:09 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 562a227b_b52cdfd4
Bytes: 44
Do we want to have "default: UNREACHABLE()"?

File: compiler/optimizing/code_generator_x86_64.cc

4512:31-4512:61
Mon Nov 02 23:28:09 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7643a650_8ccb1676
Bytes: 51
This is CanCall() in the x86 code gen. As intended?

5210:0-5212:3
Mon Nov 02 23:28:09 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 161fca56_8f90c6c3
Bytes: 57
We don't have this code in the x86 code gen. As intended?

File: compiler/optimizing/nodes.h

1370:0-1371:24
Mon Nov 02 23:28:09 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 765c8636_7cf53def
Bytes: 142
Is this true? I didn't think this was the case. Calling the read barrier slow path won't trigger a GC or a read barrier isn't a suspend point.

1380:0-1381:45
Mon Nov 02 23:28:09 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 760e462a_d1f2e401
Bytes: 5
Same.

4497:0-4498:51
Mon Nov 02 23:28:09 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 765c8636_3cffc5d1
Bytes: 5
Same.

5181:0-5181:69
Mon Nov 02 23:28:09 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d63612de_2dd78642
Bytes: 5
Same.

File: runtime/runtime_options.def

83:74-83:79
Mon Nov 02 23:28:09 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 161fca56_d423f182
Bytes: 206
The reason we don't need to set this to true for arm/arm64 is that we now disable the optimizing compiler for non-x86, non-x86-64 cases and the optimizing run-tests still work as if -Xint is given. Correct?

