Revision: 8422edd7af342a955f17639ab827cf062ef8965e
Base-for-patch-set: 1
File: runtime/interpreter/mterp/arm/op_iget_object_quick.S

7:12-7:36
Thu Jan 14 15:04:41 2016 +0000
Author: Serguei I Katkov <1040038@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e798c691_6224f689
Bytes: 124
It is strange but when I did similar in x86 patch, I've got NPE unit test failure in host mode. Will re-check it tomorrow...

7:12-7:36
Thu Jan 14 19:17:47 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e798c691_6224f689
UUID: e759a674_e87c11c5
Bytes: 184
The artIGetObjectFromMterp code has checks and throws the exception, and the code in lines 9,12f does the propagation. So a failure on your side would be a bit strange and interesting.

7:12-7:36
Thu Jan 14 21:28:33 2016 +0000
Author: Bill Buzbee <1001578@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e759a674_e87c11c5
UUID: 676db610_e2870b3a
Bytes: 97
It is strange and interesting.  Removing the check causes 122-npe to fail.  Looking into why now.

7:12-7:36
Thu Jan 14 23:17:20 2016 +0000
Author: Bill Buzbee <1001578@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 676db610_e2870b3a
UUID: 676db610_e4327897
Bytes: 509
Oh, this is a good one - something anyone working on mterp should keep in mind.  To save cycles, mterp keeps Dalvik PC in a register.  However, any runtime support routine which might throw needs to know the current Dalvik PC.  So, prior to calling out to the runtime it is a requirement that the EXPORT_PC macro be used.  If not, the runtime will attempt to pin the exception at whatever Dalvik PC was last stashed.

When I changed this routine to use runtime support, I failed to use EXPORT_PC.

Fix coming.

