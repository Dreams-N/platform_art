Revision: a004b988809c9dae38c33f9a5bbb86cd177d2076
Patch-set: 1
File: runtime/arch/instruction_set_features.h

47:0-47:42
Wed Feb 10 19:26:05 2016 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9dc4c07e_421208e8
Bytes: 500
I think the name of this function is now meaningless. It is supposed to return the InstructionSetFeatures for the C++ program that's running. For example, if it's running on a x86 it'll tell me the level of SSE support. Doing this for anything other than the runtime ISA doesn't make sense. Why would a x86 have __ARM #defines? I believe you are just after a way to fake up a InstructionSetFeatures, why not use the FromVariant/FromBitmap routines that are used for this purpose in cross-compilation?

47:0-47:42
Thu Feb 11 17:03:39 2016 +0000
Author: Scott Wakeling <1076052@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 9dc4c07e_421208e8
UUID: 9d9be08c_04be58dd
Bytes: 52
Agreed. FromVariant("default", ..) makes more sense.

