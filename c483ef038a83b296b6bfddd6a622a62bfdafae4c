Revision: c483ef038a83b296b6bfddd6a622a62bfdafae4c
Patch-set: 2
File: compiler/Android.mk

206:0-213:50
Wed May 06 10:48:30 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2d62a1ee_0929693c
Bytes: 69
This should probably be host only. At least not in production builds.

File: compiler/optimizing/code_generator.cc

155:0-155:22
Fri May 01 13:45:30 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 70bf1233_6352823a
Bytes: 10
Very nice!

174:9-174:22
Fri May 01 13:45:30 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 507cce56_e2b866db
Bytes: 46
Maybe initialize this member to a dummy value?

212:2-213:65
Fri May 01 13:45:30 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 70bf1233_23052a14
Bytes: 35
Please place this on a single line.

541:0-541:52
Wed May 06 10:48:30 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: cd290587_6e6c6f88
Bytes: 37
Move that to the codegen contructors.

File: compiler/optimizing/code_generator.h

102:2-102:68
Wed May 06 13:07:21 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: cd290587_ee9a9fe9
Bytes: 77
how about we use the same pattern as with HOptimization? It will be less code

141:36-141:54
Fri May 01 13:45:30 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 507cce56_8206ba4b
Bytes: 63
Nit: `enable_visualizer' (to match `is_leaf' or `is_baseline')?

164:10-164:26
Fri May 01 13:45:30 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 90c486d3_c416de46
Bytes: 33
Maybe return a reference instead?

484:32-484:57
Fri May 01 13:45:30 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 70bf1233_03558e20
Bytes: 111
I think it would be better to introduce a data structure to record the start and end offsets (OffsetInterval?).

484:0-484:85
Wed May 06 10:48:30 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2d62a1ee_c90a31d3
Bytes: 176
Most, if not all, instructions should have that info right? Better to create an array with indices the lifetime of the instruction.

Also it probably belongs to the visualizer.

485:29-485:34
Wed May 06 13:07:21 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: cd290587_d1c8a6a4
Bytes: 13
move to ctor.

File: compiler/optimizing/code_generator_x86.cc

305:56-305:71
Fri May 01 13:45:30 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 90c486d3_242c1294
Bytes: 20
TypeCheckSlowPathX86

File: compiler/optimizing/graph_visualizer.cc

51:4-51:94
Fri May 01 13:45:30 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 507cce56_e2cce66c
Bytes: 78
Why not initializing `disassembler_' in the constructor's initialization list?

55:11-55:24
Wed May 06 13:07:21 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2d62a1ee_c97c7133
Bytes: 32
you could use an unique pointer.

277:30-277:56
Fri May 01 13:45:30 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 507cce56_42b4b2c0
Bytes: 27
Maybe drop the parentheses?

280:6-281:63
Fri May 01 13:45:30 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 507cce56_62c1b62d
Bytes: 56
Group theses lines together to initialize `it' directly.

376:32-376:39
Wed May 06 13:07:21 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: cd290587_ee13bfdd
Bytes: 36
no need, you initialize this in ctor

378:28-378:33
Wed May 06 13:07:21 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2d62a1ee_097ba93c
Bytes: 13
move in ctor.

412:4-412:39
Fri May 01 13:45:30 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 70bf1233_a3c2ba36
Bytes: 56
Maybe remove, as `printer' dies at the end of the block?

File: compiler/optimizing/nodes.h

829:2-829:29
Fri May 01 13:45:30 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 90c486d3_24b7f2c7
Bytes: 164
Why is this part of FOR_EACH_INSTRUCTION and not FOR_EACH_CONCRETE_INSTRUCTION?  Is this to avoid writing visit methods for HDisassembly in code generator visitors?

829:2-829:29
Wed May 06 13:07:21 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 90c486d3_24b7f2c7
UUID: 2d62a1ee_898679ad
Bytes: 38
because we don't generate code for it?

829:2-829:29
Wed May 06 13:55:45 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2d62a1ee_898679ad
UUID: cd290587_71ae929a
Bytes: 270
We don't generate code for other instruction types too (such as art::HPhi, art::HParallelMove or art::HBoundType) and they are still part of FOR_EACH_CONCRETE_INSTRUCTION (here concrete means non-abstract, i.e., not being a leaf class within the HInstruction hierarchy).

3795:3-3795:79
Fri May 01 13:45:30 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 70bf1233_83c7be46
Bytes: 98
What about:

  Dummy instruction used to emit disassembled code in the graph visualizer output.

?

File: disassembler/disassembler.h

53:34-54:17
Fri May 01 13:45:30 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 507cce56_02e9caad
Bytes: 136
Please update the documentation.  BTW, we might want to ensure that `options' is not null at the beginning of art::Disassembler::Create.

File: oatdump/oatdump.cc

357:36-357:52
Wed May 06 13:07:21 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2d62a1ee_a9625d85
Bytes: 53
could you also update fix this to "can_read_literals"

357:36-357:52
Wed May 06 13:55:45 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2d62a1ee_a9625d85
UUID: ad24d1ad_901d7a91
Bytes: 78
FYI, it is also done in https://android-review.googlesource.com/#/c/132663/ :)

