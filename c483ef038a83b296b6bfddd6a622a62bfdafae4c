Revision: c483ef038a83b296b6bfddd6a622a62bfdafae4c
Patch-set: 2
File: compiler/Android.mk

206:0-213:50
Wed May 06 10:48:30 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2d62a1ee_0929693c
Bytes: 69
This should probably be host only. At least not in production builds.

206:0-213:50
Tue May 19 14:02:10 2015 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2d62a1ee_0929693c
UUID: 0d179dd9_3b05e341
Bytes: 4
Done

File: compiler/optimizing/code_generator.cc

155:0-155:22
Fri May 01 13:45:30 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 70bf1233_6352823a
Bytes: 10
Very nice!

174:9-174:22
Fri May 01 13:45:30 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 507cce56_e2b866db
Bytes: 46
Maybe initialize this member to a dummy value?

174:9-174:22
Tue May 19 14:02:10 2015 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 507cce56_e2b866db
UUID: add4d137_cdabe9fe
Bytes: 4
Done

212:2-213:65
Fri May 01 13:45:30 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 70bf1233_23052a14
Bytes: 35
Please place this on a single line.

212:2-213:65
Tue May 19 14:02:10 2015 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 70bf1233_23052a14
UUID: add4d137_ada09d1b
Bytes: 4
Done

541:0-541:52
Wed May 06 10:48:30 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: cd290587_6e6c6f88
Bytes: 37
Move that to the codegen contructors.

541:0-541:52
Tue May 19 14:02:10 2015 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: cd290587_6e6c6f88
UUID: add4d137_4dc379b9
Bytes: 4
Done

File: compiler/optimizing/code_generator.h

102:2-102:68
Wed May 06 13:07:21 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: cd290587_ee9a9fe9
Bytes: 77
how about we use the same pattern as with HOptimization? It will be less code

102:2-102:68
Tue May 19 14:02:10 2015 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: cd290587_ee9a9fe9
UUID: add4d137_0de6915a
Bytes: 4
Done

141:36-141:54
Fri May 01 13:45:30 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 507cce56_8206ba4b
Bytes: 63
Nit: `enable_visualizer' (to match `is_leaf' or `is_baseline')?

141:36-141:54
Tue May 19 14:02:10 2015 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 507cce56_8206ba4b
UUID: cdd4a530_79802395
Bytes: 145
To me 'visualizer_enabled' matches better with 'is_leaf', in that it indicates a status. 'enable_visualizer' uses a verb, so indicates an action.

164:10-164:26
Fri May 01 13:45:30 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 90c486d3_c416de46
Bytes: 33
Maybe return a reference instead?

164:10-164:26
Tue May 19 14:02:10 2015 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 90c486d3_c416de46
UUID: ed19690f_37d658ed
Bytes: 4
Done

484:32-484:57
Fri May 01 13:45:30 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 70bf1233_03558e20
Bytes: 111
I think it would be better to introduce a data structure to record the start and end offsets (OffsetInterval?).

484:0-484:85
Wed May 06 10:48:30 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2d62a1ee_c90a31d3
Bytes: 176
Most, if not all, instructions should have that info right? Better to create an array with indices the lifetime of the instruction.

Also it probably belongs to the visualizer.

484:0-484:85
Tue May 19 14:02:10 2015 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2d62a1ee_c90a31d3
UUID: ed19690f_57142cc6
Bytes: 594
Using lifetime positions for the indices does not work well with the dummy HDisassemblyinstructions (without a lifetime position)  that are added in the graph later.

I have extracted that data structure into the visualizer.
It requires quite a bit of refactoring. In particular the codegen now has a HGraphVisualizer member, whereas it used to be locally allocated. To do that more info needs to be passed through the codegen constructor.
I think the code that passes information around to print the graph would benefit from a look to see if it can be simplified. I added that to my TODO list.

484:32-484:57
Tue May 19 14:02:10 2015 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 70bf1233_03558e20
UUID: 0d179dd9_585a1d0c
Bytes: 4
Done

485:29-485:34
Wed May 06 13:07:21 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: cd290587_d1c8a6a4
Bytes: 13
move to ctor.

485:29-485:34
Tue May 19 14:02:10 2015 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: cd290587_d1c8a6a4
UUID: cdd4a530_b9759b4a
Bytes: 4
Done

File: compiler/optimizing/code_generator_x86.cc

305:56-305:71
Fri May 01 13:45:30 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 90c486d3_242c1294
Bytes: 20
TypeCheckSlowPathX86

305:56-305:71
Tue May 19 14:02:10 2015 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 90c486d3_242c1294
UUID: adcf719d_d847310f
Bytes: 4
Done

File: compiler/optimizing/graph_visualizer.cc

51:4-51:94
Fri May 01 13:45:30 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 507cce56_e2cce66c
Bytes: 78
Why not initializing `disassembler_' in the constructor's initialization list?

51:4-51:94
Tue May 19 14:02:10 2015 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 507cce56_e2cce66c
UUID: add4d137_0d9211d1
Bytes: 66
Done.
In a previous step, there was more logic in the ctor's body.

55:11-55:24
Wed May 06 13:07:21 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2d62a1ee_c97c7133
Bytes: 32
you could use an unique pointer.

277:30-277:56
Fri May 01 13:45:30 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 507cce56_42b4b2c0
Bytes: 27
Maybe drop the parentheses?

277:30-277:56
Tue May 19 14:02:10 2015 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 507cce56_42b4b2c0
UUID: add4d137_cdd6497a
Bytes: 4
Done

280:6-281:63
Fri May 01 13:45:30 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 507cce56_62c1b62d
Bytes: 56
Group theses lines together to initialize `it' directly.

280:6-281:63
Tue May 19 14:02:10 2015 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 507cce56_62c1b62d
UUID: cdd4a530_b93c7b74
Bytes: 4
Done

376:32-376:39
Wed May 06 13:07:21 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: cd290587_ee13bfdd
Bytes: 36
no need, you initialize this in ctor

376:32-376:39
Tue May 19 14:02:10 2015 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: cd290587_ee13bfdd
UUID: adcf719d_18b92957
Bytes: 4
Done

378:28-378:33
Wed May 06 13:07:21 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2d62a1ee_097ba93c
Bytes: 13
move in ctor.

378:28-378:33
Tue May 19 14:02:10 2015 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2d62a1ee_097ba93c
UUID: cdd4a530_59344789
Bytes: 4
Done

412:4-412:39
Fri May 01 13:45:30 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 70bf1233_a3c2ba36
Bytes: 56
Maybe remove, as `printer' dies at the end of the block?

412:4-412:39
Tue May 19 14:02:10 2015 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 70bf1233_a3c2ba36
UUID: add4d137_8de0414b
Bytes: 4
Done

File: compiler/optimizing/nodes.h

829:2-829:29
Fri May 01 13:45:30 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 90c486d3_24b7f2c7
Bytes: 164
Why is this part of FOR_EACH_INSTRUCTION and not FOR_EACH_CONCRETE_INSTRUCTION?  Is this to avoid writing visit methods for HDisassembly in code generator visitors?

829:2-829:29
Wed May 06 13:07:21 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 90c486d3_24b7f2c7
UUID: 2d62a1ee_898679ad
Bytes: 38
because we don't generate code for it?

829:2-829:29
Wed May 06 13:55:45 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2d62a1ee_898679ad
UUID: cd290587_71ae929a
Bytes: 270
We don't generate code for other instruction types too (such as art::HPhi, art::HParallelMove or art::HBoundType) and they are still part of FOR_EACH_CONCRETE_INSTRUCTION (here concrete means non-abstract, i.e., not being a leaf class within the HInstruction hierarchy).

829:2-829:29
Tue May 19 14:02:10 2015 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: cd290587_71ae929a
UUID: adcf719d_f8a66d38
Bytes: 461
The goal wasn't to avoid additional visitors; I find this does not belong in the concrete instructions.
More than whether the IR generates code or not, I saw concrete instructions as 'instructions that can appear in the graph'. This new 'Disassembly' IR does not appear in the graph during the normal compilation. We onlyadd it after everything else (codegen in particular) is done with the graph.

Let me know if you prefer having it as a concrete instruction.

3795:3-3795:79
Fri May 01 13:45:30 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 70bf1233_83c7be46
Bytes: 98
What about:

  Dummy instruction used to emit disassembled code in the graph visualizer output.

?

3795:3-3795:79
Tue May 19 14:02:10 2015 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 70bf1233_83c7be46
UUID: cdd4a530_192ecf39
Bytes: 4
Done

File: disassembler/disassembler.h

53:34-54:17
Fri May 01 13:45:30 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 507cce56_02e9caad
Bytes: 136
Please update the documentation.  BTW, we might want to ensure that `options' is not null at the beginning of art::Disassembler::Create.

53:34-54:17
Tue May 19 14:02:10 2015 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 507cce56_02e9caad
UUID: adcf719d_182ec939
Bytes: 35
Updated the doc and added a DCHECK.

File: oatdump/oatdump.cc

357:36-357:52
Wed May 06 13:07:21 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2d62a1ee_a9625d85
Bytes: 53
could you also update fix this to "can_read_literals"

357:36-357:52
Wed May 06 13:55:45 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2d62a1ee_a9625d85
UUID: ad24d1ad_901d7a91
Bytes: 78
FYI, it is also done in https://android-review.googlesource.com/#/c/132663/ :)

357:36-357:52
Tue May 19 14:02:10 2015 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2d62a1ee_a9625d85
UUID: cdd4a530_79dca3e5
Bytes: 4
Done

