Revision: 774a96e65290a65550276b80ab7e3582fa1db250
Patch-set: 3
File: compiler/optimizing/nodes.h

83:0-83:30
Thu Mar 06 19:33:55 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: fca73d88_c128e5af
Bytes: 118
Could you comment on what the id means? ie do we expect ids within a block to be ascending? what do negative ids mean?

83:0-83:30
Fri Mar 07 10:51:13 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: fca73d88_c128e5af
UUID: 1cc2511e_a14126c7
Bytes: 4
Done

204:14-204:16
Thu Mar 06 19:33:55 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dca43989_acf602ff
Bytes: 7
* const

204:14-204:16
Fri Mar 07 10:51:13 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dca43989_acf602ff
UUID: fcce5d4a_2091b237
Bytes: 4
Done

205:14-205:15
Thu Mar 06 19:33:55 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: fca73d88_64d9ff99
Bytes: 7
* const

205:14-205:15
Fri Mar 07 10:51:13 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: fca73d88_64d9ff99
UUID: fcce5d4a_40963e31
Bytes: 4
Done

277:2-277:9
Thu Mar 06 19:33:55 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: fca73d88_e4ec0f37
Bytes: 346
Avoid inline when possible due to its overloaded meaning and that we expect compilers to be smart. The overloaded meaning is its both a linker directive (ie something inline in two .cc files won't conflict) and a hint that this code should be inlined. If the compiler is doing the wrong thing and performance matters we use HOT and ALWAYS_INLINE.

277:2-277:9
Fri Mar 07 10:51:13 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: fca73d88_e4ec0f37
UUID: 1cc2511e_619fbe08
Bytes: 4
Done

296:2-296:9
Thu Mar 06 19:33:55 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9c348108_e4a614a1
Bytes: 88
could you remove these inlines too. Sorry, should have caught this in an earlier review.

296:2-296:9
Fri Mar 07 10:51:13 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 9c348108_e4a614a1
UUID: dccb593b_1f5e532a
Bytes: 4
Done

449:2-449:10
Thu Mar 06 19:33:55 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dca43989_0c1cf67c
Bytes: 54
const uint16_t. Iirc we only support 64k of registers.

449:2-449:10
Fri Mar 07 10:51:13 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dca43989_0c1cf67c
UUID: 1cc2511e_81a42a58
Bytes: 4
Done

491:2-491:5
Thu Mar 06 19:33:55 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dca43989_2c3532f0
Bytes: 115
const int32_t
I'd prefer int32_t here as this is something specified in the dex file and int is a little ambiguous.

491:2-491:5
Fri Mar 07 10:51:13 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dca43989_2c3532f0
UUID: 1cc2511e_21a9b62e
Bytes: 4
Done

