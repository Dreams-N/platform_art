Revision: 91a6d281d2d738d5f0ec89a7cd9d1dd82200530d
Patch-set: 4
File: /COMMIT_MSG

15:0-15:74
Tue Jul 14 12:57:33 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b8a6d6d3_1d17d34d
Bytes: 15
Nit: long line.

18:0-18:73
Tue Jul 14 12:57:33 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f8a4cecc_9f0ab328
Bytes: 6
Ditto.

23:0-23:74
Tue Jul 14 12:57:33 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b8a6d6d3_fd2427be
Bytes: 6
Ditto.

25:15-25:23
Tue Jul 14 12:57:33 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 18a282bf_60bf52aa
Bytes: 8
parallel

48:33-48:38
Tue Jul 14 12:57:33 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f8a4cecc_3f1a8775
Bytes: 5
field

53
Tue Jul 14 12:57:33 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 389bc68e_016aca98
Bytes: 116
Maybe also mention that you split TypeCheckSlowPathARM64 into CheckCastSlowPathARM64 and InstanceCheckSlowPathARM64?

60:0-60:4
Tue Jul 14 12:57:33 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 389bc68e_0181aad8
Bytes: 4
from

62:0-62:73
Tue Jul 14 12:57:33 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 389bc68e_41b692c6
Bytes: 6
Ditto.

65:0-65:20
Tue Jul 14 12:57:33 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d88d4a46_6ec12fc5
Bytes: 20
has happened or not?

88:0-88:73
Tue Jul 14 12:57:33 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d88d4a46_ce56a3a1
Bytes: 6
Ditto.

File: compiler/optimizing/code_generator.cc

565:26-565:51
Tue Jul 14 12:57:33 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f8a4cecc_1f6583c1
Bytes: 42
Please put on its own line and add braces.

1038:17-1038:28
Tue Jul 14 12:57:33 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b8a6d6d3_1d30f3ee
Bytes: 22
instruction != nullptr

1056:0-1056:101
Tue Jul 14 12:57:33 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d88d4a46_2ea00727
Bytes: 15
Nit: long line.

1084:2-1084:6
Tue Jul 14 12:57:33 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d88d4a46_4e9553c0
Bytes: 28
Use a two-space indentation.

File: compiler/optimizing/code_generator.h

81:16-81:24
Tue Jul 14 12:57:33 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 389bc68e_a17f9e5a
Bytes: 9
SHAREABLE

598:7-598:31
Tue Jul 14 12:57:33 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b8a6d6d3_3d33afff
Bytes: 27
Please document this field.

File: compiler/optimizing/code_generator_arm64.cc

157:0-157:101
Tue Jul 14 12:57:33 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d88d4a46_6e9a0ff1
Bytes: 15
Nit: long line.

192:0-192:101
Tue Jul 14 12:57:33 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 18a282bf_c0f05e8f
Bytes: 6
Ditto.

1256:0-1256:107
Tue Jul 14 12:57:33 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 18a282bf_80eb76a0
Bytes: 15
Nit: long line.

1692:0-1692:105
Tue Jul 14 12:57:33 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 18a282bf_60e872a3
Bytes: 15
Nit: long line.

1714:0-1714:101
Tue Jul 14 12:57:33 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d88d4a46_ce8863a8
Bytes: 6
Ditto.

2085:0-2085:101
Tue Jul 14 12:57:33 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d88d4a46_0e0c2bc7
Bytes: 6
Ditto.

2296:0-2296:102
Tue Jul 14 12:57:33 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b8a6d6d3_9ddc030c
Bytes: 6
Ditto.

2302:0-2302:110
Tue Jul 14 12:57:33 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 18a282bf_40e56ec9
Bytes: 6
Ditto.

2366:0-2366:102
Tue Jul 14 12:57:33 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d88d4a46_2e11e7dd
Bytes: 6
Ditto.

2576:0-2576:56
Tue Jul 14 12:57:33 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 389bc68e_615bd602
Bytes: 24
Nit: indentation is off.

3091:0-3091:101
Tue Jul 14 12:57:33 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b8a6d6d3_3dcccf58
Bytes: 6
Ditto.

File: compiler/optimizing/locations.h

431:12-432:39
Tue Jul 14 12:57:33 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 18a282bf_60a99266
Bytes: 65
Maybe reify this pattern as a routine in runtime/art/bit_utils.h?

File: compiler/optimizing/nodes.h

539:40-539:41
Tue Jul 14 12:57:33 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d88d4a46_6e1beffb
Bytes: 32
Why this choice (instead of -1)?

1657:2-1657:60
Tue Jul 14 12:57:33 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b8a6d6d3_9d51a3de
Bytes: 160
I think we should also extend the GraphChecker to ensure that HasSlowPath() is only true for relevant instructions (HDivZeroCheck and HNullCheck at the moment).

File: compiler/optimizing/register_allocator.cc

587:5-587:52
Tue Jul 14 12:57:33 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f8a4cecc_5fbf8ba9
Bytes: 23
Please also add a TODO.

603:5-603:80
Tue Jul 14 12:57:33 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b8a6d6d3_1dc91349
Bytes: 6
Ditto.

File: compiler/optimizing/stack_map_test.cc

244:74-244:75
Tue Jul 14 12:57:33 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 389bc68e_4141f209
Bytes: 63
We should use a consistent convention regarding these suffixes.

File: oatdump/oatdump.cc

1366:6-1366:11
Tue Jul 14 12:57:33 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b8a6d6d3_bdf0df8d
Bytes: 29
Maybe turn into a `for' loop?

2396:0-2397:30
Tue Jul 14 12:57:33 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 18a282bf_e06ec2aa
Bytes: 116
Note that we also have a CL in the works about size statistics (https://android-review.googlesource.com/#/c/132663).

File: runtime/stack_map.h

886:42-886:43
Tue Jul 14 12:57:33 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f8a4cecc_bff0d78d
Bytes: 32
Why this choice (instead of -1)?

1158:60-1158:78
Tue Jul 14 12:57:33 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d88d4a46_2e3ac755
Bytes: 33
`current_stack_map'? or `cursor'?

1164
Tue Jul 14 12:57:33 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f8a4cecc_df6efbaa
Bytes: 103
Maybe add:

  // TODO: stack maps are sorted by native pc, we can do a binary search.

before the loop?

File: test/499-sharing-slowpaths-fatal/info.txt

1:57-1:62
Tue Jul 14 12:57:33 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 18a282bf_00164607
Bytes: 49
Why "still"?  (Did we share them before this CL?)

