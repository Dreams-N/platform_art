Revision: 14f3873e63698fcafcf58f10d1023a2560f3e644
Patch-set: 7
File: compiler/optimizing/code_generator_arm64.h

420:0-423:3
Fri Apr 15 11:08:41 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0b732e96_b7ddc2ff
Bytes: 328
I don't like this one at all, it's once again taking ownership of something passed as a raw pointer. What about

    JumpTableARM64* CreateJumpTable(HPackedSwitch* switch_instr) {
      jump_tables_.emplace_back(
          new (GetGraph()->GetArena()) JumpTableARM64(switch_instr));
      return jump_tables_.back().get();
    }

420:0-423:3
Fri Apr 15 11:14:58 2016 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0b732e96_b7ddc2ff
UUID: cb4af641_f541f219
Bytes: 72
+ returning a `unique_ptr<>&` to explicitly indicate ownership to users.

420:0-423:3
Fri Apr 15 11:27:42 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: cb4af641_f541f219
UUID: 0b732e96_b704e23b
Bytes: 68
I'm not extra keen on returning "unique_ptr<>&" but it's acceptable.

420:0-423:3
Fri Apr 15 11:32:44 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0b732e96_b704e23b
UUID: 0b732e96_1714b664
Bytes: 131
What about using std::move in InstructionCodeGeneratorARM64::VisitPackedSwitch instead of this odd reference on an std::unique_ptr?

420:0-423:3
Fri Apr 15 11:34:37 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0b732e96_1714b664
UUID: 0b732e96_570e2e58
Bytes: 75
(This feels like a more standard way to indicate ownership transfer to me.)

