Revision: f96dff9a03a03703a349fa035508dd189c1bf3a9
Patch-set: 2
File: /COMMIT_MSG

9:51-9:69
Fri Dec 12 12:15:58 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e497b25c_0530948a
Bytes: 81
Easier and more beneficial to list them here instead of cross-referring the test.

9:51-9:69
Fri Dec 12 14:19:36 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e497b25c_0530948a
UUID: 44731e24_48461fa2
Bytes: 70
Let's say I was lazy and expecting you to find more tests to write :-)

File: compiler/optimizing/builder.cc

957:7-957:16
Fri Dec 12 12:15:58 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 44731e24_0846e7f2
Bytes: 66
Is it not_used or don't use? If it's really the later explain why.

957:7-957:16
Fri Dec 12 14:19:36 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 44731e24_0846e7f2
UUID: 84f436d2_32640eff
Bytes: 33
It's the latter, added a comment.

File: compiler/optimizing/builder.h

255:33-255:43
Fri Dec 12 12:15:58 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 84f436d2_af453995
Bytes: 77
most outer?

Also it might be good to explain what outer means via an example

255:33-255:43
Fri Dec 12 14:19:36 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 84f436d2_af453995
UUID: 84f436d2_12610aef
Bytes: 4
Done

File: compiler/optimizing/nodes.cc

685:19-685:29
Fri Dec 12 12:15:58 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e497b25c_a54448e7
Bytes: 100
Could you add an explicit comment for this method:
"Move this instruction before cursor instruction"

685:19-685:29
Fri Dec 12 14:19:36 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e497b25c_a54448e7
UUID: e497b25c_c5a06c02
Bytes: 96
Done. Also renamed the instruction `InsertBefore` to notify the instruction is not in the graph.

693:0-693:0
Fri Dec 12 12:15:58 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 84f436d2_f2ca06af
Bytes: 15
double new line

693:0-693:0
Fri Dec 12 14:19:36 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 84f436d2_f2ca06af
UUID: 84f436d2_72b17603
Bytes: 4
Done

695:22-695:35
Fri Dec 12 12:15:58 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 44731e24_88a0172f
Bytes: 9
previous_

695:22-695:35
Fri Dec 12 14:19:36 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 44731e24_88a0172f
UUID: 84f436d2_52ae72a3
Bytes: 4
Done

701:19-701:29
Fri Dec 12 12:15:58 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e497b25c_85738454
Bytes: 6
block_

701:19-701:29
Fri Dec 12 14:19:36 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e497b25c_85738454
UUID: 84f436d2_32bbeee5
Bytes: 4
Done

761:3-761:31
Fri Dec 12 12:15:58 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e497b25c_85a14434
Bytes: 124
moving the DCHECK that last is a return right after declaration will make things clearer (on why it needs special treatment)

761:3-761:31
Fri Dec 12 14:19:36 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e497b25c_85a14434
UUID: 44731e24_a83cf304
Bytes: 97
Why do you think it will make things clearer? Note that in follow-up CLs last can also be an HIf.

761:3-761:31
Fri Dec 12 15:23:39 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 44731e24_a83cf304
UUID: e497b25c_880ddb5c
Bytes: 207
Because I read from top to bottom and before reaching this line and realizing that the last instruction is a return I wasn't sure why it gets special treatment.

Hmm, what's the case when this can be an HIf?

761:3-761:31
Fri Dec 12 15:33:56 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e497b25c_880ddb5c
UUID: e497b25c_6831770a
Bytes: 152
So today we only inline graphs of three blocks, so you'll only get a return. As soon as we do more, we'll have to handle an HIf in the first body block.

File: test/437-inline/src/Main.java

18:21-18:25
Fri Dec 12 12:15:58 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e497b25c_6557609c
Bytes: 49
add tests for:
- wide/object returns 
- no return

18:21-18:25
Fri Dec 12 14:19:36 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e497b25c_6557609c
UUID: 84f436d2_d2a82294
Bytes: 149
Done (but not that I cannot just have a $opt$inline$ReturnObject() method, as it would require a call or field access, and we don't inline those yet.

