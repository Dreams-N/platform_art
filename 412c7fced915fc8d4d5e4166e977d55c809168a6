Revision: 412c7fced915fc8d4d5e4166e977d55c809168a6
Patch-set: 2
File: runtime/gc/heap.cc

1089:29-1089:37
Mon Feb 10 09:09:26 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: efa05d5c_9ca265bc
Bytes: 47
Can't the std::vector be a std::vector of Sirt?

1094:2-1094:14
Mon Feb 10 19:37:00 2014 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: cf48f97a_ec1bbf86
Bytes: 143
Is this function making sure GC not happening by not having a thread suspension point (which is asserted by Start/EndAssertNoThreadSuspension)?

1126:29-1126:37
Mon Feb 10 09:09:26 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: cf7639c5_f3bcf0ec
Bytes: 6
Ditto.

1172:49-1172:52
Mon Feb 10 09:09:26 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: cf7639c5_b3c67883
Bytes: 87
What classes? Is it the "o" parameter that is the problem? Shouldn't it be a Sirt then?

File: runtime/jdwp/object_registry.cc

63:35-63:36
Mon Feb 10 19:37:00 2014 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6f8d4df2_e061826b
Bytes: 343
() after the struct type name?

object_to_entry_ takes a value of ObjectRegistryEntry (it copies) but id_to_entry_ needs a heap-allocated ObjectRegistryEntry. I think it'd be clearer if we declare separate ObjectRegistryEntry for the two cases, as opposed to reusing the heap allocated ObjectRegistryEntry in terms of stack- vs heap-allocated.

File: runtime/native/dalvik_system_VMDebug.cc

238:18-238:67
Mon Feb 10 19:37:00 2014 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: af83c5c3_e8788709
Bytes: 83
We now use VisitObjects() instead of the live bitmap, right? Is this comment stale?

