Revision: 83c73e47b8a51a97133b1ce4a3de5aff46f5351f
Patch-set: 3
File: compiler/optimizing/code_generator.h

680:0-681:56
Fri Jan 08 11:55:05 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: cae3c748_c749d214
Bytes: 292
As the type parameters `I` and `T` are constrained (`I` should be an instruction type, while `T` should be a slow path code type), I would give them more explicit names, e.g `InstructionType` and `SlowPathCodeType` respectively.

It would make some lines below (e.g. line 704) easier to read.

683:0-683:20
Fri Jan 08 11:55:05 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0a54ffaf_697e41be
Bytes: 26
Nit: template <typename I>

684
Fri Jan 08 11:55:05 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6aa2db12_718b7206
Bytes: 155
What about adding this check:

  static_assert(std::is_base_of<HInstruction, I>::value,
                "I is not a subclass of art::HInstruction");

here?

686:0-686:17
Fri Jan 08 11:55:05 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ca6e677a_0fb9c9ea
Bytes: 5
Drop?

693:2-693:22
Fri Jan 08 11:55:05 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 8a68ef71_aaff4fc9
Bytes: 21
template <typename T>

694
Fri Jan 08 11:55:05 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: cae3c748_27e23e2e
Bytes: 269
What about adding these checks:

    static_assert(std::is_base_of<SlowPathCode, T>::value,
                  "T is not a subclass of art::SlowPathCode");
    static_assert(std::is_constructible<T, I*>::value,
                  "T is not constructible from I*");

here?

702:11-702:69
Fri Jan 08 10:42:43 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2a2b8319_77860a3f
Bytes: 29
const auto& it : candidates
?

704:29-704:40
Fri Jan 08 11:55:05 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6a31fb81_dca06564
Bytes: 9
down_cast

719:4-719:67
Fri Jan 08 11:55:05 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 4a2c372e_9bf2f3c1
Bytes: 73
Could we use

  iter->second.emplace_back(instruction, slow_path);

here?

726:40-726:49
Fri Jan 08 11:55:05 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6aa2db12_71625216
Bytes: 28
preamble? (or prerequisite?)

727:7-727:12
Fri Jan 08 10:42:43 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0a54ffaf_89961d31
Bytes: 9
HaveSame?

727:33-727:35
Fri Jan 08 11:55:05 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6aa2db12_b1d2faf6
Bytes: 8
const I*

727:39-727:40
Fri Jan 08 11:55:05 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 8a68ef71_0a069ba4
Bytes: 5
const

727:26-727:28
Fri Jan 08 11:55:05 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0a54ffaf_49e7c5ce
Bytes: 8
const I*

740:7-740:20
Fri Jan 08 10:42:43 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6a31fb81_1c625d15
Bytes: 17
HaveSameStackMap?

740:34-740:35
Fri Jan 08 11:55:05 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6aa2db12_f1dc820c
Bytes: 5
const

740:21-740:23
Fri Jan 08 11:55:05 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6a31fb81_9cc18d0a
Bytes: 8
const I*

740:28-740:30
Fri Jan 08 11:55:05 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: eae08b3e_45893c4e
Bytes: 8
const I*

776:71-776:76
Fri Jan 08 10:42:43 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 4a2c372e_1bd02321
Bytes: 11
missing "."

File: test/561-shared-slowpaths/src/Main.java

20:0-20:19
Fri Jan 08 10:42:43 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2a2b8319_f799baa4
Bytes: 57
Please add checker tests that we only have one slow path.

39:4-39:12
Fri Jan 08 11:55:05 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 8a68ef71_2a035f95
Bytes: 11
Nit: int z;

69:13-69:16
Fri Jan 08 11:55:05 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: cae3c748_c71712d7
Bytes: 26
OOB? (And likewise below.)

