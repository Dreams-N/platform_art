Revision: cf097b037755b7cff2d7e82b9ef97cf05a8d38ca
Patch-set: 1
File: compiler/optimizing/intrinsics_mips.cc

852
Wed Feb 17 10:02:21 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7daf0c90_32d4e0bf
Bytes: 164
That's an insane amount of instructions.... I guess the argument is that bitcount is so little used that taking the bloat for the small number of invocations is ok?

852
Wed Feb 17 10:14:44 2016 +0000
Author: Alexey Frunze <1056098@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7daf0c90_32d4e0bf
UUID: 5d8fa87c_5bfa2664
Bytes: 653
I'm going to look at the alternatives (btw, we have the same problem with bit reversal). I'll look up Hackers Delight and fxtbook. Perhaps the optimal solution would be to use a 256-entry LUT. But then the question is where to put it (ensuring it's not going to be duplicated if there's more than one method using it) and how to access it (our assembler does not implement literals or anything like that at the moment, there's just support for branches to labels, we'll get to this at some point). Another option is probably to make a regular asm implementation using just a few registers (which we'll request from the compiler for "temps") and call it.

852
Wed Feb 17 19:00:33 2016 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5d8fa87c_5bfa2664
UUID: bd82644f_26fb8ed9
Bytes: 132
Thanks for implementing this. Make sure you benchmark any impl against the reference implementation, which does the HD bit fiddling.

