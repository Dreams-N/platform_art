Revision: 602ec295908eb56c60dce742f31c46b1b4d92a90
Patch-set: 2
File: compiler/optimizing/code_generator_arm.h

305:26-305:40
Sun Aug 30 16:34:22 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 845371c9_ec0c7fcc
Bytes: 39
Should that really be requires_pc_info?

305:41-305:47
Tue Sep 01 11:12:13 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 84c53226_0e1e2ba0
Bytes: 155
I would drop the default value (here and in other back ends), as the choice of the default behavior (recording pc info vs not recording it) is not obvious.

305:26-305:40
Tue Sep 01 11:12:13 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 845371c9_ec0c7fcc
UUID: e4d42ed5_b1650029
Bytes: 26
Maybe `do_record_pc_info`?

305:26-305:40
Mon Sep 28 13:48:53 2015 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e4d42ed5_b1650029
UUID: 2ebd45ca_566232df
Bytes: 584
Before this patch `InvokeRuntime()` was unconditionally recording the pc info, which is why I opted for a default argument.

From what I understand we only need the pc info when the runtime may try to map dex_pc to native pc. But when is that exactly? It looks to me as if some existing code records the pc info when it doesn't need it.

Maybe for now we can keep a default to true and override it only in places where the pc info was not recorded. Then in a later patch we can try to remove the default and reduce the number of places where we do record the info.

What do you think?

305:26-305:40
Mon Sep 28 18:58:55 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2ebd45ca_566232df
UUID: ae5bf53d_1f418972
Bytes: 935
Sounds good to me.

Yeah, sometimes we call RecordPcInfo even when we do not really need to, e.g. for type conversions or compare operations. The intent was to be future-proof; see this comment at the beginning of the method in compiler/optimizing/code_generator.cc:

    // The code generated for some type conversions and comparisons
    // may call the runtime, thus normally requiring a subsequent
    // call to this method. However, the method verifier does not
    // produce PC information for certain instructions, which are
    // considered "atomic" (they cannot join a GC).
    // Therefore we do not currently record PC information for such
    // instructions.  As this may change later, we added this special
    // case so that code generators may nevertheless call
    // CodeGenerator::RecordPcInfo without triggering an error in
    // CodeGenerator::BuildNativeGCMap ("Missing ref for dex pc 0x")
    // thereafter.

File: compiler/optimizing/intrinsics_arm.cc

921:26-921:53
Tue Sep 01 11:12:13 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 64c03e16_0d1e31a0
Bytes: 84
/* record_pc_info */  (To be consistent with similar uses, here and in other calls.)

921:60-921:61
Tue Sep 01 11:12:13 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 04d222e7_524b749f
Bytes: 67
Maybe also add a call to CheckEntrypointTypes (here and elsewhere)?

