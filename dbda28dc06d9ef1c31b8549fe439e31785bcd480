Revision: dbda28dc06d9ef1c31b8549fe439e31785bcd480
Patch-set: 5
File: compiler/jit/jit_compiler.cc

155:39-155:90
Tue Oct 20 10:23:14 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f936a66e_a1da1ed4
Bytes: 35
Nit: Move the TODO to its own line.

155:39-155:90
Tue Oct 20 15:39:44 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f936a66e_a1da1ed4
UUID: f936a66e_41c232bb
Bytes: 4
Done

243:47-247:86
Tue Oct 20 10:23:14 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 39f75ee3_869b8c40
Bytes: 70
Wouldn't it be simpler (and faster) to pass `compiled_method` instead?

243:47-247:86
Tue Oct 20 15:39:44 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 39f75ee3_869b8c40
UUID: 595892e5_07f1b8bf
Bytes: 123
Yes, but no :-) It's a compiler thing (ie libart-compiler.so). You can't pass it to the code cache (which is in libart.so).

File: runtime/gc/heap.cc

364:40-364:45
Tue Oct 20 10:23:14 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 19345a65_05151454
Bytes: 27
/* can_move_object */ false

364:34-364:38
Tue Oct 20 10:23:14 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 595892e5_44548e8d
Bytes: 24
/* create_bitmap */ true

584:58-584:62
Tue Oct 20 10:23:14 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 39f75ee3_469eb42f
Bytes: 25
/* create_bitmaps */ true

File: runtime/gc/space/dlmalloc_space.cc

106:66-106:70
Tue Oct 20 10:23:14 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b940aed4_3f1e272d
Bytes: 25
/* create_bitmaps */ true

162:82-162:86
Tue Oct 20 10:23:14 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 595172a7_7fe4ab02
Bytes: 6
Ditto.

166:43-166:47
Tue Oct 20 10:23:14 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d93d624e_a0a77a29
Bytes: 6
Ditto.

File: runtime/gc/space/malloc_space.cc

59:10-59:14
Mon Oct 19 15:21:51 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 99f3ea1a_de488528
Bytes: 11
Nice catch.

File: runtime/jit/jit_code_cache.cc

34:0-34:105
Tue Oct 20 10:23:14 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f936a66e_81e27a86
Bytes: 15
Nit: long line.

34:0-34:105
Tue Oct 20 15:39:44 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f936a66e_81e27a86
UUID: 595172a7_ff63dbcd
Bytes: 4
Done

47:37-47:62
Tue Oct 20 10:23:14 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 595172a7_1ff1e7bf
Bytes: 31
Nit: move TODO on its own line.

47:37-47:62
Tue Oct 20 15:39:44 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 595172a7_1ff1e7bf
UUID: 59fc12c5_a4220241
Bytes: 4
Done

52:26-52:34
Mon Oct 19 18:37:48 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b90b4ea8_29eee4e2
Bytes: 42
Is it cleaner to use MemMap::RemapAtEnd()?

52:26-52:34
Mon Oct 19 20:01:54 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b90b4ea8_29eee4e2
UUID: 595892e5_a45a22db
Bytes: 76
Don't know it's the first time I use this API. What would be the difference?

52:26-52:34
Mon Oct 19 21:04:59 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 595892e5_a45a22db
UUID: b90b4ea8_e42593e2
Bytes: 223
RemapAtEnd() would let us split an existing MemMap for this sort of situation. It is currently used to split a mem map into the zygote space and the non-moving space at the zygote fork time. It's worth considering using it?

52:26-52:34
Mon Oct 19 21:10:42 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b90b4ea8_e42593e2
UUID: 19345a65_45d31c34
Bytes: 27
Is MapDummy sort of a hack?

52:26-52:34
Mon Oct 19 21:28:05 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 19345a65_45d31c34
UUID: 79d47637_e24eac33
Bytes: 94
Sort of. It was invented to represent a region indirectly mapped by dlopen within an ELF file.

52:26-52:34
Tue Oct 20 15:39:44 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 79d47637_e24eac33
UUID: 595892e5_27ee34e3
Bytes: 4
Done

56:2-56:61
Tue Oct 20 10:23:14 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f936a66e_21efee70
Bytes: 93
Shouldn't we DCHECK that the return value of the call to `mprotect` is zero (here and below)?

56:2-56:61
Tue Oct 20 15:39:44 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f936a66e_21efee70
UUID: d93d624e_8067d64e
Bytes: 4
Done

