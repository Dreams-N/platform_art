Revision: 8e46e2e3a44482bc8af2f107a46445a31e13e181
Patch-set: 3
File: /COMMIT_MSG

7:10-7:30
Tue Jan 26 16:24:14 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 34c3ee5c_6e0cb38b
Bytes: 86
?

Usually polymorphic inline (caching) isn't limited to the exact same target method.

7:10-7:30
Tue Jan 26 16:27:32 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 34c3ee5c_6e0cb38b
UUID: 74ac86b5_3eb4c936
Bytes: 86
Yes, you can drop the usually. This is just the simplest implementation. More to come.

9:0-10:52
Tue Jan 26 16:30:21 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 14beeac6_a721928d
Bytes: 147
Then please make this more expressive. "the only method the profiling saw" isn't very descriptive, and it doesn't state that support is partial :-)

9:0-10:52
Tue Jan 26 16:39:13 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 14beeac6_a721928d
UUID: d4c4527f_999bfbe8
Bytes: 4
Done

File: compiler/optimizing/code_generator_arm.cc

6612:2-6612:4
Tue Jan 26 16:52:05 2016 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 34520eae_7caa7992
Bytes: 104
i think a switch is clearer. you don't need to wonder what the else branch value is.

same for the rest.

6612:2-6612:4
Tue Jan 26 18:06:43 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 34520eae_7caa7992
UUID: f4c1566d_9a49ad4c
Bytes: 138
As discussed, I'd agree with you if we did not have to have a default case: UNREACHABLE (which IIRC is required for sone of the compiler).

6612:2-6612:4
Tue Jan 26 18:11:44 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f4c1566d_9a49ad4c
UUID: 14beeac6_47835e2b
Bytes: 287
If you cover all enum cases, you don't have to add a default case. Switch warnings are only enabled for covering all known values, not "incorrect" ones.

Now whether you want the LOG(FATAL) in the "other" cases or not is up to you. I could argue you made the choice against it already...

6612:2-6612:4
Tue Jan 26 18:12:54 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 14beeac6_47835e2b
UUID: 54a782d1_dde3ab56
Bytes: 71
When did the cover all cases was enough? gcc or clang used to complain.

File: compiler/optimizing/inliner.cc

457:58-457:73
Tue Jan 26 16:52:05 2016 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d49b728b_6185167a
Bytes: 143
It's not clear that this new Instruction evaluates to the dex pc of the methods. Either add a comment in nodes.h or consider changing the name.

457:58-457:73
Tue Jan 26 16:55:05 2016 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d49b728b_6185167a
UUID: f4c1566d_5a1f954a
Bytes: 62
sorry, supposed to be the "method address" instead of "dex pc"

457:58-457:73
Tue Jan 26 18:06:43 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f4c1566d_5a1f954a
UUID: b4bb5ef1_582c3d6b
Bytes: 4
Done

File: test/566-polymorphic-inlining/src/Main.java

50:4-50:16
Tue Jan 26 16:52:05 2016 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 54a782d1_fd3ae7a2
Bytes: 136
fairly weak test, right? i.e. hard to tell that you actually inlined those from this tests. 

Maybe a $jit$inlined$ tag could help here.

50:4-50:16
Tue Jan 26 18:06:43 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 54a782d1_fd3ae7a2
UUID: 94a57ac9_ff209f45
Bytes: 188
Pb is that this will be flaky again for debug builds which usually don't have a ProfilingInfo full when compiling.

So yes, it's weak, but we will hit it (as I'm hitting it on my machine).

