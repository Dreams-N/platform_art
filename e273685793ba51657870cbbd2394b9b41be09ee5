Revision: e273685793ba51657870cbbd2394b9b41be09ee5
Patch-set: 1
File: compiler/dex/mir_dataflow.cc

1162
Tue Jan 14 01:17:19 2014 +0000
Author: Razvan A Lupusoru <1013855@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 4d1b3107_a008e0f2
Bytes: 95
Makes sense to move this to MIRGraph constructor since we always create this special temporary.

1162
Tue Jan 14 02:21:09 2014 +0000
Author: Bill Buzbee <1001578@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 4d1b3107_a008e0f2
UUID: 2d30bd7d_fc3f61eb
Bytes: 3
+1.

File: compiler/dex/mir_graph.h

580:9-580:28
Tue Jan 14 09:13:54 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: cd7ba135_2b103963
Bytes: 24
GetNumUsedCompilerTemps?

580:9-580:28
Tue Jan 14 19:08:58 2014 +0000
Author: Razvan A Lupusoru <1013855@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: cd7ba135_2b103963
UUID: 4d1b3107_d1b12411
Bytes: 34
Sure, I will fix it in next patch.

File: compiler/dex/mir_optimization.cc

247
Tue Jan 14 02:21:09 2014 +0000
Author: Bill Buzbee <1001578@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6d1635de_ac369bc7
Bytes: 253
And, this "negative value" for compiler temps makes life a bit ugly elsewhere in the code.  I've probably flushed out the bulk of the issues by getting the method pointer special working - but beware of code that expects to index an array based on vreg.

247
Tue Jan 14 19:08:58 2014 +0000
Author: Razvan A Lupusoru <1013855@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6d1635de_ac369bc7
UUID: 4d1b3107_519e7478
Bytes: 82
Agreed. I will seek out if there are any other instances of this possible problem.

File: compiler/dex/quick/codegen_util.cc

1072:31-1072:50
Tue Jan 14 19:08:58 2014 +0000
Author: Razvan A Lupusoru <1013855@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6d1635de_8d4e3152
Bytes: 339
Instead of assuming that we need as much space as there are temps, this should instead call a Mir2Lir method named GetNeededSpillSpaceForTemps where initially it will return space for each temp. But as it evolves, quick BE should only return space if it needs to spill and also for non-overlapping ranges it should use same spill location.

File: runtime/stack.h

525:10-525:24
Tue Jan 14 01:17:19 2014 +0000
Author: Razvan A Lupusoru <1013855@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6d1635de_61516cf2
Bytes: 138
I moved the register information to stack.h since stack layout is dependent on this. Let me know if there is a better place to move these.

527:10-527:27
Tue Jan 14 01:36:13 2014 +0000
Author: Razvan A Lupusoru <1013855@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 4d1b3107_00daec01
Bytes: 65
Instead of defines we can add static methods to get these fields.

536:32-536:33
Tue Jan 14 02:21:09 2014 +0000
Author: Bill Buzbee <1001578@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6d1635de_6c03a3d6
Bytes: 235
Off the top of my head, I don't remember for sure why I started with -2 for Method* - but I might be using -1 as the code for an invalid or unknown Dalvik vreg.  When I'm at work tomorrow, I'll take a look at the code to jog my memory.

536:32-536:33
Tue Jan 14 19:08:58 2014 +0000
Author: Razvan A Lupusoru <1013855@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6d1635de_6c03a3d6
UUID: 6d1635de_2da125bf
Bytes: 28
That would be great! Thanks!

536
Tue Jan 14 21:06:17 2014 +0000
Author: Bill Buzbee <1001578@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6d1635de_2da125bf
UUID: 6de9d52a_e0ba02a3
Bytes: 104
Memory refreshed,  -1 (or specifically the 16-bit pattern 0xffff) is reserved to represent INVALID_VREG.

536
Tue Jan 14 21:12:48 2014 +0000
Author: Razvan A Lupusoru <1013855@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6de9d52a_e0ba02a3
UUID: addf4d7e_428e52d5
Bytes: 62
Thank you. I will change it back so temporaries start with -2.

