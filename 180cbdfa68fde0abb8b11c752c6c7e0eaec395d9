Revision: 180cbdfa68fde0abb8b11c752c6c7e0eaec395d9
Patch-set: 3
File: /COMMIT_MSG

9:21-9:26
Wed Sep 02 11:55:45 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c4dbaa04_d35e865d
Bytes: 18
Quick entry point?

File: compiler/optimizing/code_generator_arm.cc

62:0-63:60
Wed Sep 02 11:55:45 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 84c53226_ce8ee3b3
Bytes: 329
This kind of macro is error-prone.  With this change, it is no longer obvious to match the effective arguments of a call to InvokeRuntime with the formal argument of InvokeRuntime's declaration.

I would prefer a structure encapsulating the (offset, can_trigger_gc) information instead, passed as first argument to InvokeRuntime.

205:33-205:51
Tue Sep 01 15:25:45 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 447a5aab_941b247b
Bytes: 17
Nit: one per line

File: compiler/optimizing/code_generator_arm64.cc

216:4-216:75
Wed Sep 02 11:55:45 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a4deb6f4_ef272148
Bytes: 102
I think we should also augment CheckEntrypointType to verify the "can_trigger_gc" information as well.

1116:44-1116:58
Tue Sep 01 15:25:45 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 64c03e16_8dc9c13a
Bytes: 61
With "entry_point_can_trigger_gc", this flag looks redundant.

2762:14-2762:27
Tue Sep 01 15:25:45 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 447a5aab_b418a07e
Bytes: 11
No gc flag?

File: runtime/entrypoints/quick/quick_entrypoints_list.h

20
Wed Sep 02 11:55:45 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 84c53226_2e8a07a1
Bytes: 2
is

