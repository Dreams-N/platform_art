Revision: 0804062eff64ac6868f8ada58817da3e29bb5020
Patch-set: 4
File: runtime/fault_handler.cc

150:2-153:3
Wed Jan 20 21:54:18 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 47efd232_201ea44f
Bytes: 360
The name is bad. If the check is inline (which I can see for performance reasons, then call it Try...

I also originally meant to move the other_handlers_ code out, not everything. This is still a large function with two separate concerns. Would prefer moving the whole stuff after "// We hit" into its own function, to have this look clean and maintainable...

150:2-153:3
Thu Jan 21 02:08:42 2016 +0000
Author: Jinghui Gu <1051763@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 47efd232_201ea44f
UUID: 07123a0e_9c156992
Bytes: 94
This check is too big to make it inline.
Agree. Will only move out the part of other handlers.

247:17-247:21
Wed Jan 20 21:54:18 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 87062ace_fd7f3f88
Bytes: 196
Why "true"? This is still a failure case that should terminate, so should be propagated along the chain.

(And no, we will not accept other_handlers_ that fix up internal state in managed code...)

247:17-247:21
Thu Jan 21 02:08:42 2016 +0000
Author: Jinghui Gu <1051763@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 87062ace_fd7f3f88
UUID: d439b2d1_71c0d857
Bytes: 270
Just follow the original code, which will return directly.
I'm not sure about the motivation of other_handlers_.
So far, only the JavaStackTraceHandler is added in other_handlers_, which always return false in its Action.
Will any new handler be added into it in future?

247:17-247:21
Tue Jan 26 00:15:48 2016 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d439b2d1_71c0d857
UUID: 14b18a0d_dbc4d36c
Bytes: 401
I think that was a bug and that's what Andreas tried to highlight.

If we got a fault at this point we should just propagate along the chain and not marked it resolved hopping that another handler will fix the state. There's no handler yet which will do that, and as Andreas mentioned I doubt we have good reasons to accept one.

The other_handlers could provide more info on the fault but not fix it.

247:17-247:21
Tue Jan 26 01:31:11 2016 +0000
Author: Jinghui Gu <1051763@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 14b18a0d_dbc4d36c
UUID: f49a3677_3894d128
Bytes: 688
The patch set 6 has been uploaded. We'd better comment on the latest set.

----

Yes. I totally agree with you.
But please confirm the motivation of other_handlers_ here.
So far, other_handlers_ only has the JavaStackTraceHandler, which always returns FALSE in its Action and pass down the signal to the chain. So, this code will not reach, actually. If the other_handlers_ will contain new handlers in future which will handle the signal well, we have to leave these code here.
I think the design of other_handlers_ is ambiguous and confused here.
If you ensured there should be no handler in other_handlers_ which can FIX the signal, we'd better remove or re-design the other_handlers_.

247:17-247:21
Tue Jan 26 12:31:06 2016 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f49a3677_3894d128
UUID: f4c1566d_5a679527
Bytes: 482
I think other_handlers_ were just a quick way to make things more generic when adding the stack trace handler and we didn't actually expect to recover from the signal here. 

However I do not have the entire historical context here :). Mathieu might know more. 

I think it's fine to leave this as it is in the current CL (PS6) and just add a comment that this should be clarified and possibly removed. Am happy to do this in a subsequent CL since it seems like an orthogonal issue.

File: runtime/fault_handler.h

64:7-64:33
Wed Jan 20 21:47:16 2016 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 07f95afe_1e294959
Bytes: 25
this can be made private.

