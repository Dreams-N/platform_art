Revision: c984725d0035e1925371757c38fed339b409e525
Base-for-patch-set: 1
File: cmdline/cmdline_parser_test.cc

102
Mon Aug 08 18:24:22 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b977f3bf_ac6da9a1
Bytes: 111
These test helpers are useful even if they aren't being used [currently], they aren't exactly trivial to write.

102
Tue Aug 09 12:47:35 2016 +0000
Author: Narayan Kamath <1014443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b977f3bf_ac6da9a1
UUID: 39b223c6_4bce5962
Bytes: 273
I'd rather not keep unused code lying around in the codebase. Note that there were no new usages outside of the lambda code in the year since they were introduced.

That said, this is back now, because I brought back support for ExperimentalFlags (and the associated test).

File: runtime/parsed_options.cc

286
Mon Aug 08 18:24:22 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b977f3bf_6c4eb140
Bytes: 127
Why? You're adding new experimental features right now, and Nicolas wanted them to be guarded behind a flag in the first place.

286
Tue Aug 09 12:47:35 2016 +0000
Author: Narayan Kamath <1014443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b977f3bf_6c4eb140
UUID: 39b223c6_6bd31d07
Bytes: 264
Well, I wouldn't call them experimental since we've committed to shipping them (though the design might change over time).

I did intend on guarding them with their own flag until work was complete, but It's probably better to reuse what you've done.

Resurrected.

286
Tue Aug 09 17:37:48 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 39b223c6_6bd31d07
UUID: 399f837b_43b338e6
Bytes: 379
Nicolas can fill in with more details here since it was his original rationale.

The problem AFAIK is not whether or not we've committed to shipping them (we did it with default methods, and they were "Experimental" up until feature complete). It's that if any vendors ever ship out of AOSP master then they'd have some weird partially complete implementation of extra bytecodes.

286
Tue Aug 09 17:39:36 2016 +0000
Author: Narayan Kamath <1014443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 399f837b_43b338e6
UUID: 79c2db72_fa7b0921
Bytes: 262
SGTM. I'm generally on board with hiding *any* feature behind a flag before it's complete and blessed, but I was generally gravitating towards (the google3 style of) having separate flags for each feature rather than a single -Xexperimental flag to rule 'em all.

File: runtime/verifier/method_verifier.cc

417
Mon Aug 08 18:24:22 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b977f3bf_2cdd1936
Bytes: 448
You may not want to remove this, it was put in here for a reason, and that's to make development a lot simpler because you can implement the new bytecodes into the interpreter without also implementing full verifier support for it.

At the same time the instructions would be completely usable from run-test, dalvikvm etc.

Depending on how complicated it is to correctly verify the new bytecodes, it may not be trivial to do it within the same CL.

417
Tue Aug 09 12:47:35 2016 +0000
Author: Narayan Kamath <1014443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b977f3bf_2cdd1936
UUID: 39b223c6_0bbe2179
Bytes: 27
Sure - might come in handy.

