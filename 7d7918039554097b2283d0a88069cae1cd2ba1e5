Revision: 7d7918039554097b2283d0a88069cae1cd2ba1e5
Patch-set: 1
File: compiler/dex/quick/gen_invoke.cc

659:35-659:39
Fri Jun 13 22:08:51 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7fd6e483_9ef1cd4b
Bytes: 21
Why not on all archs?

728:35-728:39
Fri Jun 13 22:08:51 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7fd6e483_fef6093f
Bytes: 6
Ditto.

File: compiler/image_writer.cc

648:70-648:74
Fri Jun 13 22:08:51 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1fd5e878_bb8adf0b
Bytes: 107
Nit: I think this is confusing, I find that byte**  and *quick_entry_point = ... conveys better the intent.

648:70-648:74
Mon Jun 16 16:20:06 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1fd5e878_bb8adf0b
UUID: 9f439833_6b4fe146
Bytes: 126
Out arguments should be pointers and not references, per the style guide. Why is this an out argument and not just the result?

654:16-654:20
Mon Jun 16 16:20:06 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7f3264d4_8a15eb13
Bytes: 22
prefer nullptr to NULL

File: compiler/image_writer.h

147:0-147:100
Mon Jun 16 16:20:06 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9f439833_2be079e2
Bytes: 88
document the arguments as the comment above doesn't explain why we have an out argument.

File: runtime/class_linker.cc

3486:36-3486:41
Fri Jun 13 22:08:51 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7fd6e483_defb4527
Bytes: 15
mirror::Class**

3519
Sat Jun 14 01:05:16 2014 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5f4e8057_fa69dd02
Bytes: 4
self

4024:70-4024:71
Fri Jun 13 22:08:51 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1fd5e878_9b8f1b1c
Bytes: 7
size_t*

4057:74-4057:80
Fri Jun 13 22:08:51 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5f6920a1_62d7ecf4
Bytes: 7
size_t*

File: runtime/class_linker_test.cc

589:67-589:94
Fri Jun 13 22:08:51 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1fd5e878_db999365
Bytes: 128
There are more fixed VTableLength then kJavaLangClassVTableLength and kJavaLangStringVTableLength. Where are they being checked?

File: runtime/mirror/class.cc

838
Sat Jun 14 01:05:16 2014 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: df74307d_d226bcdb
Bytes: 30
Call WriteBarrierEveryFieldOf?

File: runtime/mirror/class.h

302:15-302:16
Mon Jun 16 16:20:06 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7f3264d4_eafae7db
Bytes: 5
const

310:15-310:16
Mon Jun 16 16:20:06 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7f3264d4_0a101b6d
Bytes: 5
const

1084:41-1084:42
Mon Jun 16 16:20:06 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7f3264d4_0ae9fb20
Bytes: 6
s/;/./

1085:0-1085:16
Mon Jun 16 16:20:06 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7f3264d4_6a07d735
Bytes: 90
This feels redundant, we can just see if the ClassLinker/class_table_ contains this class.

1087:5-1087:10
Mon Jun 16 16:20:06 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7f3264d4_2ae6bf4f
Bytes: 71
Starting offset for static fields, used with reference_static_offsets_.

1092:0-1095:16
Mon Jun 16 16:20:06 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9f439833_4b25c5c8
Bytes: 40
Can this be folded into the ClassStatus?

File: runtime/mirror/proxy.h

32:0-41:3
Mon Jun 16 16:20:06 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9f439833_2b2eb980
Bytes: 103
Add DCHECKs that the first and second fields are named interfaces and throws, have expected types, etc.

44:0-45:57
Mon Jun 16 16:20:06 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: bf469c40_4c523fee
Bytes: 16
unused so remove

File: runtime/mirror/string.h

161:0-169:2
Mon Jun 16 16:20:06 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7f3264d4_eafd878c
Bytes: 163
ugh.. this just exists so that sizeof operations on StringClass are successful during boot strapping in the class linker. Given the new structure can we remove it?

