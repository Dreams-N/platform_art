Revision: 7b37f89c17c60db0360d64f1e809fd22e23e9a4a
Patch-set: 4
File: /COMMIT_MSG

9:26-9:34
Thu Aug 13 13:23:20 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 8400d1f0_bb8ce7be
Bytes: 7
maximum

9:26-9:34
Thu Aug 13 16:03:04 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 8400d1f0_bb8ce7be
UUID: c4f6494b_f7472023
Bytes: 4
Done

9:55-11:17
Thu Aug 13 13:23:20 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a405d5ff_9c7ec51e
Bytes: 131
With this change, is the `fold2` pass in the `optimizations2` array from compiler/optimizing/optimizing_compiler.cc still relevant?

9:55-11:17
Thu Aug 13 16:03:04 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a405d5ff_9c7ec51e
UUID: 44141933_ceb91fb1
Bytes: 71
Yes, the return value of inlined methods might help constant fold more.

13
Thu Aug 13 13:23:20 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 446259ef_4cde4f53
Bytes: 124
Maybe also mention that this CL removes the kAccDontInline flag (and that Optimizing's inliner no longer sets or honors it)?

13
Thu Aug 13 16:03:04 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 446259ef_4cde4f53
UUID: 64367de0_e18f50b2
Bytes: 4
Done

File: compiler/optimizing/inliner.cc

359:99-359:101
Thu Aug 13 10:28:04 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2459e545_a8f6db4f
Bytes: 13
line too long

359:99-359:101
Thu Aug 13 16:03:04 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2459e545_a8f6db4f
UUID: a41eb557_91f34b97
Bytes: 4
Done

