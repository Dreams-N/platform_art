Revision: 6fac447555dc94a935b78198479cce645c837b89
Patch-set: 3
File: runtime/class_linker.cc

1228:53-1228:61
Thu Feb 27 02:12:34 2014 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1c26d1b5_9370e41b
Bytes: 35
Why change from size_t to uint32_t?

1228:53-1228:61
Thu Feb 27 08:37:09 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1c26d1b5_9370e41b
UUID: 1c26d1b5_7c34255e
Bytes: 152
Before 64bit, size_t and uint32_t were effectively the same. In 64bit not and we have 32bit of storage in Class. I wanted the type here to reflect that.

File: runtime/gc/heap-inl.h

77:23-77:39
Thu Feb 27 02:12:34 2014 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1c26d1b5_b39c000e
Bytes: 23
When can klass be null?

77:23-77:39
Thu Feb 27 08:37:09 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1c26d1b5_b39c000e
UUID: 1cf89137_8db8b6a8
Bytes: 62
It was a unit test thing but IsStarted subsumes it so removed.

File: runtime/gc/space/rosalloc_space.cc

76:0-76:34
Thu Feb 27 02:12:34 2014 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1cf89137_77bd3d96
Bytes: 42
Is the indentation off in lines 76 and 77?

76:0-76:34
Thu Feb 27 08:37:09 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1cf89137_77bd3d96
UUID: 1c26d1b5_fc47f5da
Bytes: 4
Done

File: runtime/mirror/array-inl.h

104:11-104:20
Thu Feb 27 04:20:50 2014 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1c26d1b5_61aebe6a
Bytes: 237
I think rosalloc only zeroes out memory for the requested portion only, not the whole usable size. So, as is, one may get non-zero, garbage initial values near the end of the array. This code assumes the whole usable size is zero, right?

104:11-104:20
Thu Feb 27 04:49:44 2014 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1c26d1b5_61aebe6a
UUID: 1cf89137_8a077c75
Bytes: 38
dlmalloc/dlmalloc_space does the same.

104:11-104:20
Thu Feb 27 08:37:09 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1cf89137_8a077c75
UUID: 3c29d585_4302a467
Bytes: 86
thanks, we switched from calloc to memset to reduce the period we held the lock. Done.

118:2-118:8
Thu Feb 27 02:12:34 2014 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1cf89137_374215cb
Bytes: 190
How about adding DCHECK_EQ(array_class->GetComponentSize(), component_size) since component_size is given as opposed to computed here? Alternatively, get rid of the component_size parameter?

118:2-118:8
Thu Feb 27 08:37:09 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1cf89137_374215cb
UUID: 3c29d585_23079877
Bytes: 4
Done

125:6-125:18
Thu Feb 27 02:12:34 2014 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3c29d585_7d4d4308
Bytes: 124
1. Could fill_usable be a template parameter? If so, this if statement could be compiled away.
2. Surround with an UNLIKELY?

125:6-125:18
Thu Feb 27 08:37:09 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3c29d585_7d4d4308
UUID: 1c26d1b5_3ca9fd2e
Bytes: 82
All the relevant code should be inlined so I'd rather not use template parameters.

