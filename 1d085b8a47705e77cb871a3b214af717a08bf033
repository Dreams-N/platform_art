Revision: 1d085b8a47705e77cb871a3b214af717a08bf033
Patch-set: 1
File: runtime/class_linker.cc

134:8-134:38
Tue Nov 03 08:51:43 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 569941f8_a2c81a89
Bytes: 144
There's a lot of these checks, wouldn't it be cleaner to have two different methods? One where the VerifyError is not null, and one where it is?

134:8-134:38
Tue Nov 03 17:12:26 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 569941f8_a2c81a89
UUID: 562a227b_0eeba0a0
Bytes: 159
Would mean a lot of duplication for the surrounding code. Are you sure that's better?

I'd rather put the error != null code in static functions, if that's OK?

134:8-134:38
Wed Nov 04 20:08:54 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 562a227b_0eeba0a0
UUID: 1698aa84_4f0e317f
Bytes: 61
I have moved the code below (151ff) into a separate function.

165:63-165:70
Tue Nov 03 08:51:43 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d685318b_c3152857
Bytes: 34
Maybe mention again spec v2 5.4.1?

165:63-165:70
Tue Nov 03 17:12:26 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d685318b_c3152857
UUID: f6195673_4b4ce053
Bytes: 38
As we don't follow *that* spec, can't.

165:63-165:70
Tue Nov 03 17:17:04 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f6195673_4b4ce053
UUID: d685318b_e3cf8ce4
Bytes: 57
I don't understand, you're mentioning that spec line 129.

173:0-173:65
Tue Nov 03 08:51:43 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 568142c7_16f71cb8
Bytes: 49
Add a comment how you ended up in this situation.

173:0-173:65
Wed Nov 04 20:08:54 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 568142c7_16f71cb8
UUID: 76a726c0_129fea76
Bytes: 35
This will be in a follow-up CL now.

173:0-173:65
Wed Nov 04 20:44:38 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 76a726c0_129fea76
UUID: 56af8261_86676af8
Bytes: 4
Why?

177:6-177:35
Tue Nov 03 08:51:43 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f66795cb_dc95010e
Bytes: 186
Why does this branch use a StackHandleScope but not the one line 151? I'd make ut consistent and create the stack handle scope at the beginning of the method and use it in both branches.

177:6-177:35
Tue Nov 03 17:12:26 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f66795cb_dc95010e
UUID: 36204e91_4813c2a5
Bytes: 445
Because in 151 the exception instance/class doesn't need to survive - we only get its name. It's also still stored in the heap and we could recover it from the class. (And that's the way it was before.)

Down here we wont to wrap the cause in a NoClassDefFoundError. As we can't do NewWrappedException (NoClassDefFoundError doesn't have the constructor for it, and we're not sure cause is OK), we need to store it. Thus this branch needs an SHS.

177:6-177:35
Tue Nov 03 17:17:04 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 36204e91_4813c2a5
UUID: 167b4aaf_b4b660a4
Bytes: 237
That's the kind of things I personally don't want to think about when reviewing/writing code, especially when this is about throwing an exception. To me, it looks like this is favoring a micro-optimization, in the expense of readability.

177:6-177:35
Wed Nov 04 20:08:54 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 167b4aaf_b4b660a4
UUID: 96a49abb_f0626056
Bytes: 35
This will be in a follow-up CL now.

177:6-177:35
Wed Nov 04 20:44:38 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 96a49abb_f0626056
UUID: 76b806a7_e75422d5
Bytes: 140
That's ok, but you don't need to do it if you prefer. I wish we were consistent in our use of handles, but I know we're not in other places.

