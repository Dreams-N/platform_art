Revision: d0c655fcb60f28b199d0c3084c5032bcb8793e1a
Patch-set: 2
File: compiler/optimizing/code_generator_x86_64.cc

270:4-279:67
Thu Nov 06 16:57:07 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 950702cb_9a4729ea
Bytes: 127
Why adding them back to the graph instead of just generating the code with a common function that you share with HParallelMove?

270:4-279:67
Thu Nov 06 17:10:47 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 950702cb_9a4729ea
UUID: 950702cb_fa8aa5a7
Bytes: 168
This is not adding them to the graph. It's building the data needed for the parallel move resolver to operate: one parallel move instruction with multiple MoveOperands.

2525:0-2549:17
Thu Nov 06 16:57:07 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 35165601_77f50a62
Bytes: 128
from the readability perspective this will benefit of some in between comments explaining each step.

(same in the other places)

2525:0-2549:17
Thu Nov 06 17:10:47 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 35165601_77f50a62
UUID: 950702cb_1a079987
Bytes: 4
Done

File: test/422-instanceof/src/Main.java

17:13-17:17
Thu Nov 06 16:57:07 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 950702cb_5a20f137
Bytes: 38
worth adding tests against interfaces.

17:13-17:17
Thu Nov 06 17:10:47 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 950702cb_5a20f137
UUID: d5697aa3_b9d21f63
Bytes: 70
True, but this falls into the slow path, which is already implemented.

