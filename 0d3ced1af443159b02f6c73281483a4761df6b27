Revision: 0d3ced1af443159b02f6c73281483a4761df6b27
Patch-set: 5
File: runtime/jit/jit_code_cache.cc

393:2-401:3
Mon Oct 26 17:15:36 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b6b19df3_f7c0a0b3
Bytes: 183
If I'm reading the marking right, we clear everything that is not currently executing. Isn't it too drastic? I expect that we'll re-jit (at least the last used one) pretty soon again.

File: runtime/jit/jit_code_cache.h

57:9-57:22
Mon Oct 26 17:15:36 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7671e51a_4568caa9
Bytes: 110
If you are at this, can you append the unit a the end (KB, MB, Bytes ...)? Or at least mention it in the docs.

60:9-60:22
Mon Oct 26 17:15:36 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f69a3588_41c452c6
Bytes: 6
ditto.

62:2-62:47
Mon Oct 26 17:15:36 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 56b5c1f6_1c1c7579
Bytes: 126
Just for clarity, I'll add a note mentioning that this is not the total number of compiled methods during lifetime (due to gc)

118:11-118:29
Mon Oct 26 17:15:36 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 36b04d09_7bfc9f69
Bytes: 59
Document that this returns null only if we're out of space.

138:0-138:2
Mon Oct 26 17:15:36 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 16c1896c_7aa01969
Bytes: 15
trailing space.

139:2-139:23
Mon Oct 26 17:15:36 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b6b19df3_f767c09c
Bytes: 147
Unrelated to this change, but could you be more precise what this guards in the comments? (especially since now it's getting used in anatoanalisys)

