Revision: 8927d05dc0f8d9c2a2c7df2874c03a1143ff508a
Patch-set: 2
File: compiler/optimizing/live_interval_test.cc

25:19-25:27
Fri May 23 11:09:09 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2a58a819_3887e888
Bytes: 28
Why not testing GetEnd too ?

File: compiler/optimizing/nodes.h

1016:2-1016:26
Fri May 23 11:09:09 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 4a531cfd_dac092c4
Bytes: 112
I preferred the previous version with the ending ';'. Could you modify DECLARE_INSTRUCTION so the ';' is needed?

File: compiler/optimizing/register_allocator.cc

53:18-53:60
Fri May 23 11:09:09 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 4a531cfd_ba72eef7
Bytes: 114
Would be nice to have a utility function doing this for us. What about <typename T> T* AllocArray(size_t number) ?

83:26-83:27
Fri May 23 11:09:09 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2a58a819_bb4cb286
Bytes: 30
Start arguments here and wrap.

158:67-158:75
Fri May 23 11:09:09 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2a58a819_5b83c642
Bytes: 14
Full stop here

159:11-159:81
Fri May 23 11:09:09 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2a58a819_9b8d2e6d
Bytes: 116
I don't understand the comment: is a word missing? ... Ooh, sounds like "covers" is missing somewhere in the middle?

173:69-173:77
Fri May 23 11:09:09 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 4a531cfd_6d2292c3
Bytes: 14
Full stop here

192:4-192:19
Fri May 23 11:09:09 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9f7638c4_13f64cf9
Bytes: 75
Use an if-else and move comment (5) in the if and comment (6) in the else ?

229:4-230:60
Fri May 23 11:09:09 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2a58a819_0e4c9e81
Bytes: 147
IMO, it's easier to read without the continue: "if (next_intersection != kNoLifetime) { free_until[inactive->GetRegister()] = next_intersection; }"

261:11-261:45
Fri May 23 11:09:09 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9f7638c4_f36870c5
Bytes: 84
What happens for float registers? Should we add a CHECK reg is not a float register?

288:4-288:37
Fri May 23 11:09:09 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2a58a819_4e2f8679
Bytes: 28
Same comment about continue.

300:4-300:37
Fri May 23 11:09:09 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0a3da49e_b8783609
Bytes: 28
Same comment about continue.

File: compiler/optimizing/register_allocator_test.cc

45:68-45:72
Fri May 23 11:09:09 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0a3da49e_d81b42d6
Bytes: 66
What about other targets? Are we only testing on the host for now?

55:28-55:45
Fri May 23 11:09:09 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2a58a819_4e06a6eb
Bytes: 20
ValidateIntervals1 ?

118:28-118:46
Fri May 23 11:09:09 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0a3da49e_f810feb4
Bytes: 20
ValidateIntervals2 ?

158:6-158:9
Fri May 23 11:09:09 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9f7638c4_93881c10
Bytes: 5
int ?

File: compiler/optimizing/ssa_builder.cc

53:11-53:18
Fri May 23 11:09:09 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9f7638c4_d365349d
Bytes: 165
For my understanding, could please give an example of a case where union is required? I was thinking about boolean, byte, char and short implicit conversions to int.

File: compiler/optimizing/ssa_liveness_analysis.cc

132:51-132:55
Fri May 23 11:09:09 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9f7638c4_53a5a48e
Bytes: 4
than

136:25-136:26
Fri May 23 11:09:09 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0a3da49e_98b7fa71
Bytes: 58
Maybe add in the comment above why '2' is the right value.

File: compiler/optimizing/ssa_liveness_analysis.h

107:2-107:15
Fri May 23 11:09:09 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0a3da49e_b8e4b673
Bytes: 19
HInstruction* const

108:2-108:8
Fri May 23 11:09:09 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2a58a819_2ecec262
Bytes: 12
const size_t

109:2-109:14
Fri May 23 11:09:09 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9f7638c4_93c25c15
Bytes: 18
UsePosition* const

127:18-127:20
Fri May 23 11:09:09 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0a3da49e_d8e9824a
Bytes: 87
Add a kNoRegister constant ? Be careful, I think one already exists for Quick compiler.

