Revision: 7cd829c2ccc3af313d540b29dcefd31b53678821
Patch-set: 10
File: compiler/optimizing/reference_type_propagation.cc

287:31-287:42
Mon Jun 01 16:54:15 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7919c071_cd8fedfc
Bytes: 96
this should probably be renamed to HandleInvoke, as it's not called directly by an HInstruction.

File: test/450-checker-types/src/Main.java

367:19-367:30
Mon Jun 01 16:57:52 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7919c071_0d5de5f8
Bytes: 82
Nicolas, this should be inlined now, right? Guillaume is telling me that is not...

367:19-367:30
Tue Jun 02 10:44:49 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7919c071_0d5de5f8
UUID: 99a8345d_a4c5c29c
Bytes: 112
Either way, we should add something like $noinline$, otherwise writing tests will become increasingly difficult.

367:19-367:30
Tue Jun 02 11:08:48 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 99a8345d_a4c5c29c
UUID: b9a97860_c8f1efe0
Bytes: 135
Yeah, let's start by adding this $noinline$ as a marker with no effect for now.

We can then think about how to make it have an effect.

367:19-367:30
Tue Jun 02 11:08:48 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7919c071_0d5de5f8
UUID: d9ae2c65_a916f977
Bytes: 216
No for two reasons:

1) The getSubclass call site is virtual, and the receiver is not statically known.
2) The method always throws, so won't be inlined thanks to our heuristics, and should probably never be inlined.

367:19-367:30
Tue Jun 02 11:36:16 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d9ae2c65_a916f977
UUID: b9a97860_082627f1
Bytes: 317
for 2). I think we should try inline in this case. It will enable more dead code elimination. Alternatively it should not be hard to figure out that a function always throw and mark everything after the call dead. Anyway, I don't think that's not a common case so it probably doesn't worth thinking about it too much.

