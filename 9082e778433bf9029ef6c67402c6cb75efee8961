Revision: 9082e778433bf9029ef6c67402c6cb75efee8961
Patch-set: 10
File: compiler/optimizing/builder.cc

1821:0-1822:75
Tue Jan 05 12:15:29 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 4a2c372e_95964431
Bytes: 36
Add a comment why you're doing this.

1821:0-1822:75
Tue Jan 05 14:27:48 2016 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 4a2c372e_95964431
UUID: 4a2c372e_75e4c8c8
Bytes: 4
Done

2979:34-2979:43
Tue Jan 05 12:15:29 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 4a2c372e_b59b405a
Bytes: 68
why? BuildTypeCheck could just use "reference", and not destination.

2979:34-2979:43
Tue Jan 05 14:27:48 2016 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 4a2c372e_b59b405a
UUID: ca6e677a_c9f97172
Bytes: 162
Sure, I just felt like using `destination` for "destination" made it more readable. Changed it back to make it clear in the added comment that it's the same vreg.

File: compiler/optimizing/nodes.cc

2089:17-2089:30
Tue Jan 05 12:37:35 2016 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ca6e677a_697e45be
Bytes: 165
This should be set only once so I think we should dcheck that. If you think of an example when is safe to narrow the upper bound then add a test and mention it here.

2089:17-2089:30
Tue Jan 05 14:27:48 2016 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ca6e677a_697e45be
UUID: 0a54ffaf_e37b329f
Bytes: 160
Sure, no problem. I actually did have a DCHECK in RTP that verified that if it's overwritten the bound is equal, but makes sense to make it more explicit. Done.

File: compiler/optimizing/reference_type_propagation.cc

603:1-625:52
Tue Jan 05 12:15:29 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ca6e677a_09346918
Bytes: 95
Why do you still need to do something on the check cast? Won't the HBoundType do what you need?

603:1-625:52
Tue Jan 05 14:27:48 2016 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ca6e677a_09346918
UUID: ca6e677a_0908e93f
Bytes: 393
It prevents code duplication.

VisitCheckCast sets the upper bound on the BoundType generated by GraphBuilder after it. But BoundType is also generated by BoundTypeForIfNotNull and BoundTypeForIfInstanceOf. All three set upper_bound and upper_can_be_null and then VisitBoundType sets the actual RTI of the BoundType instruction by comparing the RTI of the input object against the upper bound.

File: test/554-checker-rtp-checkcast/src/Main.java

51:2-51:3
Tue Jan 05 12:15:29 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ca6e677a_29312d29
Bytes: 21
Add a catch phi test?

51:2-51:3
Tue Jan 05 14:27:48 2016 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ca6e677a_29312d29
UUID: 8a68ef71_078bf606
Bytes: 4
Done

