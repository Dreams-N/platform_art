Revision: 4f0245e360830e320142bdbb96701d55316b7ad8
Patch-set: 1
File: compiler/optimizing/code_generator_arm.cc

58:0-58:38
Wed Feb 11 10:38:23 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d6834dc3_452e3c3b
Bytes: 37
don't you need to block the register?

58:0-58:38
Fri Feb 13 02:45:56 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d6834dc3_452e3c3b
UUID: cb5e442b_30bff0dd
Bytes: 106
No, it's not in the list of S registers, which are the registers we are using for the register allocators.

58:0-58:38
Fri Feb 13 10:42:27 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: cb5e442b_30bff0dd
UUID: 6b6b98dd_57c34c92
Bytes: 63
ok, maybe just me being lazy, but I will add a note for this :)

58:0-58:38
Fri Feb 13 15:30:43 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6b6b98dd_57c34c92
UUID: 0b4cdc89_e7d63c50
Bytes: 4
Done

File: compiler/utils/arm/assembler_arm.h

541:8-543:32
Fri Feb 13 10:42:27 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 56267d9d_462a127c
Bytes: 68
interesting trick but I don't understand it :), we can talk offline.

541:8-543:32
Fri Feb 13 15:30:43 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 56267d9d_462a127c
UUID: 2b9440fe_bdc95f4d
Bytes: 176
This is taken from Quick. Since 0.0 cannot be encoded in a load S immediate, we load something we know can be encoded (2.0) and substract it (2.0 - 2.0 = 0.0) to get 0.0 in sd.

