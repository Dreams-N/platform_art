Revision: 4273b5fa3fe544a312dd9678735f3565bf5b3bf3
Patch-set: 2
File: /COMMIT_MSG

15:21-15:28
Tue Jul 19 16:15:38 2016 +0000
Author: Narayan Kamath <1014443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0a697be4_77977094
Bytes: 102
the term you're looking for is "wankery" but 612-nondelegating-classloader is probably a better name ?

File: compiler/optimizing/inliner.cc

222:4-227:5
Tue Jul 19 16:25:24 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0a5b3b40_96633243
Bytes: 404
You could do a simple classloader analysis here. I'd at least try to see if the classloaders are the same, which will do multidex correctly (maybe put that as an || to IsSameDexFile).

In general, the oat_file_manager has code that knows what a complete chain is PathClassLoader, and you could do "sub-string" analysis on that to ensure correctness for default loaders. I guess that is probably overkill.

File: test/612-classloader-wonkery/src/Main.java

55:29-55:30
Tue Jul 19 16:31:31 2016 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0a697be4_370818f7
Bytes: 19
you can drop a 0 :)

56:21-56:28
Tue Jul 19 16:25:24 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0a5b3b40_d612caae
Bytes: 34
Maybe don't stress the GC so much?

File: test/common/runtime_state.cc

123:44-123:59
Tue Jul 19 16:25:24 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0a5b3b40_3673661c
Bytes: 60
That isn't an intuitive name considering it forces JITing...

