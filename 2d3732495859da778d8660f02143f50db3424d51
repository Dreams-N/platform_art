Revision: 2d3732495859da778d8660f02143f50db3424d51
Patch-set: 1
File: /COMMIT_MSG

21:0-21:48
Wed Dec 16 19:37:22 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c56e5a7a_2c7cdb49
Bytes: 175
I think this can use a fake dependency of this sequence:

    ldr  r1, [obj, #monitor_offset]
    eor  r2, r1, r1   // r2 == zero
    add  src, src, r2
    ldr  ref, [src, #0]

21:0-21:48
Thu Dec 17 10:17:06 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: c56e5a7a_2c7cdb49
UUID: 45398ab3_ed15a588
Bytes: 13
Yes, will do.

21:0-21:48
Fri Dec 18 10:32:42 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 45398ab3_ed15a588
UUID: cad587d0_7115588e
Bytes: 281
I eventually chose a strategy similar to the one used in art::ReadBarrier::Barrier in PS4:

  // `temp_reg` contains the value of rb_state.
  and  ip, temp_reg, ~LockWord::kReadBarrierStateMask
  add  obj, obj, ip
  // Actual reference load from `obj`.
  // ...

What do you think?

