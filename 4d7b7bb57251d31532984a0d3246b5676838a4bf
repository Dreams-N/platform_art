Revision: 4d7b7bb57251d31532984a0d3246b5676838a4bf
Patch-set: 2
File: compiler/optimizing/instruction_simplifier.cc

517:4-517:6
Fri Sep 25 18:55:09 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ce582944_0f8de6b8
Bytes: 225
i didn't read the commit message and it was a bit hard to understand this in the beginning.

Could you add the same comment?

"Eliminate And from UShr+And if the And-mask contains all the
bits that can be non-zero after UShr"

521:10-521:71
Fri Sep 25 18:55:09 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6e4d7d85_5134a7bf
Bytes: 56
3 different operators (>=,-,&&), please use parentheses.

521:6-521:8
Fri Sep 25 18:55:09 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0e5fa128_11acebd7
Bytes: 101
same as above:
"Transform Shr+And to UShr if the And-mask precisely clears the shifted-in sign bits."

527:18-528:52
Fri Sep 25 18:55:09 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 8e52b121_c0ca0287
Bytes: 5
ditto

File: test/458-checker-instruction-simplification/src/Main.java

170:28-170:29
Fri Sep 25 18:22:57 2015 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ee86cdd4_1b79738d
Bytes: 83
perhaps also a negative test case (i.e. one where the optimization cannot kick in)?

170:28-170:29
Fri Sep 25 18:55:09 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ee86cdd4_1b79738d
UUID: 2e470569_3b0342d7
Bytes: 31
yes, please add negative tests.

1197:35-1197:37
Fri Sep 25 18:22:57 2015 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0e5fa128_716567a6
Bytes: 46
don't you want to verify the new methods here?

1197:35-1197:37
Fri Sep 25 18:55:09 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0e5fa128_716567a6
UUID: ae5bf53d_c9e46850
Bytes: 5
ditto

