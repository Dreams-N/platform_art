Revision: 282c6180d40d0a93dcd531e50a05a9a4098bf1c8
Patch-set: 15
File: runtime/arch/mips64/quick_entrypoints_mips64.S

644:39-644:40
Thu May 28 13:10:22 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 8d470d3e_2f7de52c
Bytes: 1
8

644:39-644:40
Thu May 28 17:06:08 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 8d470d3e_2f7de52c
UUID: 6d1bb95b_9b88d6f2
Bytes: 4
Done

747:39-747:40
Thu May 28 13:10:22 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6d42d931_6ebfef0b
Bytes: 1
8

747:39-747:40
Thu May 28 17:06:08 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6d42d931_6ebfef0b
UUID: 0d54fde2_ad5b9a61
Bytes: 4
Done

File: runtime/art_method.h

530:0-531:77
Thu May 28 13:10:22 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 8d470d3e_92b7dc1a
Bytes: 112
Why not just call PtrSizedFieldsOffset()? I think MEMBER_OFFSET is more correct than the difference in sizeof().

530:0-531:77
Thu May 28 17:06:08 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 8d470d3e_92b7dc1a
UUID: ed56c9ec_3d0512cd
Bytes: 4
Done

File: runtime/mirror/class.cc

829:57-829:58
Thu May 28 13:10:22 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6d42d931_51e9f428
Bytes: 5
const

829:57-829:58
Thu May 28 17:06:08 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6d42d931_51e9f428
UUID: 6d1bb95b_3b1442c6
Bytes: 4
Done

850:12-850:13
Thu May 28 13:10:22 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6d42d931_d1ade4ea
Bytes: 5
const

850:12-850:13
Thu May 28 17:06:08 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6d42d931_d1ade4ea
UUID: ed56c9ec_1dcdae04
Bytes: 4
Done

855:65-855:66
Thu May 28 13:10:22 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ad3851b1_d3ea4c72
Bytes: 5
const

855:65-855:66
Thu May 28 17:06:08 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ad3851b1_d3ea4c72
UUID: 6d1bb95b_5b11fed4
Bytes: 4
Done

File: runtime/mirror/class.h

1088:60-1088:61
Thu May 28 13:10:22 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 8d470d3e_522734af
Bytes: 5
const

1088:60-1088:61
Thu May 28 17:06:08 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 8d470d3e_522734af
UUID: ed56c9ec_9dfc3e38
Bytes: 4
Done

File: runtime/stack.cc

893:6-893:15
Thu May 28 13:10:22 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ad3851b1_733a7895
Bytes: 32
CHECK (guarded by kIsDebugBuild)

893:6-893:15
Thu May 28 17:06:08 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ad3851b1_733a7895
UUID: ed56c9ec_1d0f6eb6
Bytes: 4
Done

