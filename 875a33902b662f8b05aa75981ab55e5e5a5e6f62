Revision: 875a33902b662f8b05aa75981ab55e5e5a5e6f62
Patch-set: 5
File: compiler/optimizing/nodes.h

2394:18-2394:37
Fri May 29 15:32:19 2015 +0000
Author: Guillaume Sanchez <1068522@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d9fb8c32_472624f2
Bytes: 16
Any better name?

2394:18-2394:37
Mon Jun 01 09:24:53 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d9fb8c32_472624f2
UUID: 6d42d931_c8960e4b
Bytes: 27
how about GetMethodDexFile?

2394:18-2394:37
Mon Jun 01 10:55:58 2015 +0000
Author: Guillaume Sanchez <1068522@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6d42d931_c8960e4b
UUID: 6d42d931_83c0692c
Bytes: 4
Done

2394:18-2394:37
Mon Jun 01 11:03:39 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6d42d931_c8960e4b
UUID: 6d42d931_63dc5d0d
Bytes: 28
Why isn't that GetDexFile()?

2394:18-2394:37
Mon Jun 01 11:06:09 2015 +0000
Author: Guillaume Sanchez <1068522@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6d42d931_63dc5d0d
UUID: 7919c071_87ab16e3
Bytes: 125
As far as I understood:
GetDexFile() returns the inliner's dex file
GetMethodDexFile() instead returns the inlinee's dex file

2394:18-2394:37
Mon Jun 01 12:43:23 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7919c071_87ab16e3
UUID: 7919c071_a2ff20a2
Bytes: 257
it's not just about inliner

GetDexFile returns the invoke's get dex file which might not be same as the dex file where the method is defined.

We could possible use GetDexFile but that will lower the precision so I'm good having the defining dex file here.

2394:18-2394:37
Mon Jun 01 12:49:29 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7919c071_a2ff20a2
UUID: 7919c071_42260cf2
Bytes: 107
Oki, my understanding about this was not quite right. Using  the GetDexFile should get us the same results.

File: compiler/optimizing/reference_type_propagation.cc

54:4-55:37
Fri May 29 15:32:19 2015 +0000
Author: Guillaume Sanchez <1068522@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6d42d931_c07a6ce9
Bytes: 37
Will make a visitor in an upcoming CL

File: test/450-checker-types/src/Main.java

367:19-367:30
Mon Jun 01 09:24:53 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6d42d931_6888ba23
Bytes: 144
note that we now inline this, so I doubt that the test will pass after rebase. please try it. 

to defeat inlining you can add an infinite loop.

367:19-367:30
Mon Jun 01 10:55:58 2015 +0000
Author: Guillaume Sanchez <1068522@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6d42d931_6888ba23
UUID: 7919c071_87043687
Bytes: 21
The test still passes

