Revision: 0edbf6f12cee43a9a186c86e86d4687598955884
Patch-set: 7
File: compiler/optimizing/code_generator_arm.cc

4238:7-4238:33
Tue Aug 25 01:20:51 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 248c8586_eb878365
Bytes: 210
I think we don't need unpoisoning any more as the resolved type array is no longer an object array.

Do you mind leaving a comment that we will need a read barrier there?

Similarly for the other architectures.

4238:7-4238:33
Tue Aug 25 09:51:49 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 248c8586_eb878365
UUID: 0468616f_8a012b15
Bytes: 4
Done

4238:7-4238:33
Tue Aug 25 18:09:22 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0468616f_8a012b15
UUID: 4485f957_ee39d68b
Bytes: 7
Thanks.

4299:5-4299:31
Tue Aug 25 01:20:51 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e430ad80_e28c8b8a
Bytes: 145
Similarly, this should be removed.

Do you mind leaving a comment that we will need a read barrier there?

Similarly for the other architectures.

4299:5-4299:31
Tue Aug 25 09:51:49 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e430ad80_e28c8b8a
UUID: 845371c9_c63ac482
Bytes: 4
Done

File: compiler/optimizing/code_generator_arm64.cc

2627:20-2627:46
Tue Aug 25 01:20:51 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 048f817d_27170508
Bytes: 25
No unpoisoning necessary?

2627:20-2627:46
Tue Aug 25 09:51:49 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 048f817d_27170508
UUID: 847a9131_aed8b71b
Bytes: 4
Done

2688:18-2688:44
Tue Aug 25 01:20:51 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 4485f957_d0ba7527
Bytes: 25
No unpoisoning necessary?

2688:18-2688:44
Tue Aug 25 09:51:49 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 4485f957_d0ba7527
UUID: 24656596_ebb0ed4b
Bytes: 4
Done

File: compiler/optimizing/code_generator_x86.cc

4725:7-4725:33
Tue Aug 25 01:20:51 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 4485f957_90bdcd1e
Bytes: 7
Remove?

4725:7-4725:33
Tue Aug 25 09:51:49 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 4485f957_90bdcd1e
UUID: a45875e6_a71f8462
Bytes: 4
Done

4784:5-4784:31
Tue Aug 25 01:20:51 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a47f9520_9d75e43f
Bytes: 7
Remove?

4784:5-4784:31
Tue Aug 25 09:51:49 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a47f9520_9d75e43f
UUID: 24656596_8bb5b13a
Bytes: 4
Done

File: compiler/optimizing/code_generator_x86_64.cc

4557:7-4557:33
Tue Aug 25 01:20:51 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e4750d3f_dc2a8f02
Bytes: 7
Remove?

4557:7-4557:33
Tue Aug 25 09:51:49 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e4750d3f_dc2a8f02
UUID: 44e3394a_e78336e1
Bytes: 4
Done

4607:5-4607:31
Tue Aug 25 01:20:51 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 248c8586_16d9ca69
Bytes: 7
Remove?

4607:5-4607:31
Tue Aug 25 09:51:49 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 248c8586_16d9ca69
UUID: 44e3394a_4799424d
Bytes: 4
Done

File: runtime/art_method-inl.h

100:2-100:36
Tue Aug 25 01:20:51 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 4485f957_70f70900
Bytes: 7
Remove?

100:2-100:36
Tue Aug 25 09:51:49 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 4485f957_70f70900
UUID: 446ed97b_4cfd8f2c
Bytes: 4
Done

152:2-152:36
Tue Aug 25 01:20:51 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 248c8586_cbf4fffb
Bytes: 7
Remove?

152:2-152:36
Tue Aug 25 09:51:49 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 248c8586_cbf4fffb
UUID: 24656596_abbaf525
Bytes: 4
Done

532:5-532:26
Tue Aug 25 01:20:51 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e4750d3f_3c08739e
Bytes: 309
Should this visit the roots in the (now native) dex cache resolved types array pointed to by this method?

If there can be a case where a DexCache becomes unreachable from GC but an ArtMethod is reachable and points to the resolved types array, GC would need to visit them to update them?

Mathieu, any views?

532:5-532:26
Tue Aug 25 09:51:49 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e4750d3f_3c08739e
UUID: 44e3394a_6790c620
Bytes: 116
For normal methods, the dex cache is reachable through the declaring class. But what should we do for proxy methods?

532:5-532:26
Tue Aug 25 18:09:22 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 44e3394a_6790c620
UUID: c42ba915_4316a556
Bytes: 38
(as a reminder) Mathieu, any comments?

532:5-532:26
Tue Sep 01 12:46:09 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: c42ba915_4316a556
UUID: a4deb6f4_af935948
Bytes: 55
I've implemented something in PS12. Please have a look.

File: runtime/art_method.h

523:39-523:63
Tue Aug 25 01:20:51 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 4485f957_906f0d1f
Bytes: 214
Can this be private? If we need to do card mark when we write to the resolved type array, avoiding exposing the GcRoot* unnecessarily would allow us to minimize the locations we'd need to insert the card mark code.

523:39-523:63
Tue Aug 25 09:51:49 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 4485f957_906f0d1f
UUID: c459e9e9_48457fcb
Bytes: 52
We would need friend class ImageWriter and PatchOat.

523:39-523:63
Tue Aug 25 18:09:22 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: c459e9e9_48457fcb
UUID: 84253145_65cac8b4
Bytes: 182
I guess this depends on whether we need to do a card mark. If so, I think it'd make sense to try to minimize exposing GcRoot to avoid accidental write without card marking.

Mathieu?

File: runtime/class_linker.cc

1065:4-1065:8
Tue Aug 25 01:20:51 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c4700952_4f690498
Bytes: 11
ArtMethod*?

1065:4-1065:8
Tue Aug 25 09:51:49 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: c4700952_4f690498
UUID: 0468616f_aa066f28
Bytes: 4
Done

5392:13-5392:30
Tue Aug 25 01:20:51 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a47f9520_ddd84c1d
Bytes: 61
Does this need a card mark for the mod union tables, Mathieu?

5417:17-5417:32
Tue Aug 25 01:20:51 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a42a3512_804593ce
Bytes: 61
Does this need a card mark for the mod union tables, Mathieu?

File: runtime/mirror/class.h

1088:18-1088:36
Tue Aug 25 01:20:51 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a42a3512_66ce50a8
Bytes: 82
Like DexCache::GetStrings(), can this be private if we add GetDexCacheString(idx)?

1088:18-1088:36
Tue Aug 25 09:51:49 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a42a3512_66ce50a8
UUID: a45875e6_072f788f
Bytes: 52
We would need friend class ImageWriter and PatchOat.

File: runtime/mirror/dex_cache-inl.h

42:22-42:39
Tue Aug 25 01:20:51 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e4750d3f_9c996750
Bytes: 66
Does this need to do a card mark for the mod union table, Mathieu?

42:22-42:39
Tue Sep 01 12:46:09 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e4750d3f_9c996750
UUID: 8480d2c5_76377018
Bytes: 22
Added marking in PS12.

53:22-53:37
Tue Aug 25 01:20:51 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c42ba915_cd1184e2
Bytes: 66
Does this need to do a card mark for the mod union table, Mathieu?

53:22-53:37
Tue Sep 01 12:46:09 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: c42ba915_cd1184e2
UUID: 447a5aab_54802ce9
Bytes: 22
Added marking in PS12.

63:2-63:6
Tue Aug 25 01:20:51 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 4485f957_702f0941
Bytes: 19
auto* -> ArtField*?

63:2-63:6
Tue Aug 25 09:51:49 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 4485f957_702f0941
UUID: 0468616f_6a095736
Bytes: 4
Done

79:2-79:6
Tue Aug 25 01:20:51 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a42a3512_c0462bfb
Bytes: 20
auto* -> ArtMethod*?

79:2-79:6
Tue Aug 25 09:51:49 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a42a3512_c0462bfb
UUID: e45eedce_6932c1f8
Bytes: 4
Done

File: runtime/mirror/dex_cache.h

128:2-128:30
Tue Aug 25 01:20:51 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 84253145_86fdaf2f
Bytes: 204
Can this be private? If we need to do a card mark on a write to the GcRoot array, putting the card mark code in SetResolvedString() as opposed to a caller and hiding GetString() would be cleaner, I think.

128:2-128:30
Tue Aug 25 09:51:49 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 84253145_86fdaf2f
UUID: 64e03d3d_e5ba1027
Bytes: 52
We would need friend class ImageWriter and PatchOat.

132:2-132:35
Tue Aug 25 01:20:51 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e4750d3f_1c6ed7a8
Bytes: 31
Similarly, can this be private?

132:2-132:35
Tue Aug 25 09:51:49 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e4750d3f_1c6ed7a8
UUID: 64e03d3d_45c01c95
Bytes: 52
We would need friend class ImageWriter and PatchOat.

191:35-191:42
Tue Aug 25 18:09:22 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c42ba915_432f858e
Bytes: 65
This is a comment only issue, but this should be GcRoot<String>*?

