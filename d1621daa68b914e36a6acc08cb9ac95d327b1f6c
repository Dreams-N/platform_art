Revision: d1621daa68b914e36a6acc08cb9ac95d327b1f6c
Patch-set: 1
File: /COMMIT_MSG

14:50-14:72
Thu May 22 22:45:37 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7f5ee42c_31cecff7
Bytes: 111
the dalvik-cache locations already use test.jar@classes.dex, so it would make sense to use the same convention.

File: runtime/common_runtime_test.h

161:32-161:35
Thu May 22 22:45:37 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7f6c24f1_9dd34790
Bytes: 9
dex_files

163:0-163:21
Thu May 22 22:45:37 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7f6c24f1_3d98fbee
Bytes: 17
error? see below.

178:4-185:33
Thu May 22 22:45:37 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3f3f0cb7_46cbcb2e
Bytes: 70
use LoadExpectSingleDexFile and move error logging from here to there?

294:32-294:35
Thu May 22 22:45:37 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9f9d5828_044cbcaa
Bytes: 18
why not UniquePtr?

294:32-294:35
Sat May 24 07:13:09 2014 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 9f9d5828_044cbcaa
UUID: 1fb968aa_e10f2a50
Bytes: 318
Is it gonna do move semantics correctly? I had to use std::move() when I wanted to assign it somewhere. I definitely don't want the unique_ptr objects to delete their payload when the local array is destroyed at the end of the scope...

Also, we push all of them into opened_dex_files_, which had been that way before.

301:4-301:21
Thu May 22 22:45:37 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9f9d5828_84752cdf
Bytes: 126
hmm, odd we need to track this separately and not just make it the callers problem? but I assume this is for test convenience.

327:2-327:42
Thu May 22 22:45:37 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: bfa05c5b_3074900f
Bytes: 32
same as LoadExpectSingleDexFile?

327:2-327:42
Sat May 24 07:13:09 2014 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: bfa05c5b_3074900f
UUID: bf65bc2b_f424f8cf
Bytes: 88
Was to replace explicit calls to DexFile::Open when rewriting tests. So, yes, redundant.

File: runtime/dex_file.cc

96:6-96:25
Thu May 22 23:00:19 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1f6b28de_174b94e8
Bytes: 145
We talk here of SyntheticLocations and entries, could we use just one term? Can we make filename a location if its not really a file we can open?

96:6-96:25
Sat May 24 07:13:09 2014 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1f6b28de_174b94e8
UUID: ffad7469_8060aa17
Bytes: 536
I understand your comment. To clarify: Entries are specific to zip files and name a file inside of them. Synthetic locations are filenames or locations extended with an entry.

This seemed the cleanest way to keep old terminology and satisfy the constraints of having different locations for all dex files in an oat file.

The problem now is that functions are overloaded in meaning to make things a black box for the caller. For GetChecksum, the filename input can either be an actual file name for a physical file, or a synthetic one.

237:0-237:49
Thu May 22 22:45:37 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7f6c24f1_fdafe31a
Bytes: 178
odd that this isn't at the top of the file like usually. I was thinking this could become classes%s.dex and made into a helper function to return the right value based on an int.

237:0-237:49
Sat May 24 07:13:09 2014 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7f6c24f1_fdafe31a
UUID: ffad7469_206a1600
Bytes: 246
I had started doing some work with a char* to avoid the std::string allocations in StringPrintF and make the loop a bit faster (e.g., for 2-9, one only has to change one char), but it became too tedious.

So, yeah, that's certainly a cleaner way.

947:22-947:46
Thu May 22 23:00:19 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1f6b28de_b75bc8af
Bytes: 22
shouldn't be necessary

947:22-947:46
Sat May 24 07:13:09 2014 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1f6b28de_b75bc8af
UUID: bf65bc2b_940ca45d
Bytes: 45
Don't know. Didn't compile for me without it.

File: runtime/dex_file.h

355:5-355:20
Thu May 22 22:45:37 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9f9d5828_8f01c528
Bytes: 89
Opens .dex files found in the container, guessing the format based on the file extension.

356:76-356:85
Thu May 22 23:00:19 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9f9d5828_ea8637c4
Bytes: 66
I think I'd prefer the error_msg to remain the right most argument

357:48-357:61
Thu May 22 22:45:37 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: bfa05c5b_10d7147f
Bytes: 123
dex_files (we use the term container here for the .zip/.apk/.jar or even a bare .dex, so reusing for the out var seems bad)

369:75-369:88
Thu May 22 22:45:37 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ff965405_85b9a1dc
Bytes: 9
dex_files

835:55-835:64
Thu May 22 22:45:37 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9f9d5828_2f31910f
Bytes: 9
dex_files

839:0-843:37
Thu May 22 22:45:37 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ff965405_c5d6c9f8
Bytes: 59
so if we are going to add error_code, add an enum for them.

839:0-843:37
Sat May 24 07:13:09 2014 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ff965405_c5d6c9f8
UUID: 1fb968aa_c106a639
Bytes: 188
Technically I could clean this up, as I'm not really using the different levels. The only thing important is whether the entry was found or not, so we can warn when extraction/.../ failed.

File: runtime/dex_file_test.cc

149:30-149:33
Thu May 22 22:45:37 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9f9d5828_ef41694c
Bytes: 69
dex_files... but why cant you use your common_runtime_test.h helpers?

149:30-149:33
Sat May 24 07:13:09 2014 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 9f9d5828_ef41694c
UUID: ffad7469_004cbaaa
Bytes: 11
I should...

File: runtime/dex_method_iterator_test.cc

25:89-25:98
Thu May 22 22:45:37 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ff965405_c5ad698c
Bytes: 5
files

28:5-33:5
Thu May 22 22:45:37 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: bfa05c5b_f04e28a5
Bytes: 41
could this user a helper from the parent?

28:5-33:5
Sat May 24 07:13:09 2014 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: bfa05c5b_f04e28a5
UUID: ffad7469_a0584665
Bytes: 54
If we do not want to extend the test to multidex, yes.

File: runtime/native/dalvik_system_DexFile.cc

95:25-95:32
Thu May 22 23:00:19 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9f9d5828_8ac453d8
Bytes: 205
to be intention revealing this should be DexFiles rather than DexFile. I find this API hard to follow and it seems like there should be more on the Java side. It'd be nice to hide/deprecate most of it too.

143:3-144:10
Thu May 22 22:45:37 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: bfa05c5b_ab7d95c2
Bytes: 88
I'd drop the else, it makes me think there is some other path that can reach the bottom.

145:33-145:36
Thu May 22 22:45:37 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: bfa05c5b_6b5b0d68
Bytes: 9
dex_files

145:4-145:31
Thu May 22 22:45:37 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: bfa05c5b_8b477983
Bytes: 199
unique_ptr? the problem is with these, we don't want to just delete the vector, you would need to close the contents if something else went wrong. maybe we need a little holder class for cleanliness?

145:4-145:31
Thu May 22 23:00:19 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: bfa05c5b_8b477983
UUID: ff965405_c87d80c2
Bytes: 180
unique_ptr is better, but we should be moving these things to the Java side. I think the relationship in this code with the "Dex" referred to by the dex file code is also confused.

152:18-152:31
Thu May 22 22:45:37 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3f3f0cb7_c1068539
Bytes: 14
zip_entry_name

153:6-153:80
Thu May 22 22:45:37 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9f9d5828_8fc465d8
Bytes: 83
I'd move this logic to a helper and unit test it? I'd use it to replace kClassesDex

156:6-167:8
Thu May 22 22:45:37 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3f3f0cb7_41361509
Bytes: 78
do we think we can share the logic with above. it seems a bit duped right now.

156:6-167:8
Sat May 24 07:13:09 2014 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3f3f0cb7_41361509
UUID: ffad7469_c055422c
Bytes: 11
Definitely.

187:36-187:45
Thu May 22 23:00:19 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9f9d5828_aaa6ef34
Bytes: 10
toDexFiles

207:2-214:3
Thu May 22 22:45:37 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7f5ee42c_146619a9
Bytes: 40
another motivation for a DexFiles holder

255:0-283:1
Thu May 22 22:45:37 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7f5ee42c_b45cedd0
Bytes: 149
i was surprised to learn there are callers of this when Ian broke it the other day. 

i wonder what they will say if there are duplicate class names.

File: runtime/utils.cc

1200:4-1200:39
Thu May 22 22:45:37 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7f6c24f1_9d0a6786
Bytes: 90
anywhere that uses kClassesDex (which assumes a single classes.dex) needs to be rethought.

1223:12-1223:23
Thu May 22 22:45:37 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3f3f0cb7_216c31d8
Bytes: 57
this should probably be renamed DexLocationToOdexFilename

1227:0-1230:0
Thu May 22 22:45:37 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3f3f0cb7_41805538
Bytes: 86
is this the right thing here? the odex file is the .oat file, there should only be one

1227:0-1230:0
Thu May 22 23:00:19 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3f3f0cb7_41805538
UUID: 9f9d5828_4a6f2b0f
Bytes: 68
The terms synthetic, location and base filename should be clarified.

1227:0-1230:0
Sat May 24 07:13:09 2014 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3f3f0cb7_41805538
UUID: bf65bc2b_b441e04d
Bytes: 103
Probably currently cruft from me looking at the IsDexOptNeeded stuff in the system_dalvik_DexFile code.

