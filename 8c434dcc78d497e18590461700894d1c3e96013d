Revision: 8c434dcc78d497e18590461700894d1c3e96013d
Patch-set: 12
File: compiler/utils/mips/assembler_mips.cc

1403:0-1407:16
Fri Oct 23 10:10:28 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 56cf8147_acd36333
Bytes: 12
Why not BAL?

1403:0-1407:16
Fri Oct 23 10:34:09 2015 +0000
Author: Alexey Frunze <1056098@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 56cf8147_acd36333
UUID: f66f95e4_283bd365
Bytes: 559
BAL is no more in R6. NAL may get removed as well (at some distant point in the future, I suppose), but hasn't been yet, it's kept for compatibility/transition. The JNI compiler may generate branches, possibly long ones. At the moment of writing, if I'm not mistaken, it didn't have the information to distinguish R2 from R6 (the assembler defaults to R2 if not supplied with instruction set features info). And so I chose to use NAL as the instruction that would work for both. Other than that there shouldn't be any practical difference between BAL and NAL.

1430:6-1430:36
Fri Oct 23 10:10:28 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b6b7ddb4_47f2cecc
Bytes: 163
Can you save RA in TMP instead of stack? Or is TMP reserved for codegen rather than assembler?

Can the codegen tell the assembler whether it's safe to clobber RA?

1430:6-1430:36
Fri Oct 23 10:34:09 2015 +0000
Author: Alexey Frunze <1056098@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b6b7ddb4_47f2cecc
UUID: f66f95e4_484087cd
Bytes: 578
TMP(=T8) is a heavily used scratch register in the code generator, so it's out of question at the moment.

This shouldn't be an issue in practice as you'd need 128KB of code between a label and a branch to it for this long sequence to be generated (AFAIK, at the moment everything in Android, including the existing tests, works with short branches with +/-128KB range; you need some rather unnatural code to go beyond 128KB).

In theory we could also generate jumps to jumps to extend the range (this is the "veneers" in Arm64, right?). Again, I don't think this is needed now.

