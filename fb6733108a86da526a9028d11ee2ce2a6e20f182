Revision: fb6733108a86da526a9028d11ee2ce2a6e20f182
Patch-set: 2
File: compiler/optimizing/register_allocator_graph_color.cc

668:8-668:57
Tue Aug 16 17:28:14 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3bd93b0e_a5b134f4
Bytes: 44
Should this go into ColoringIteration, then?

668:8-668:57
Wed Aug 17 21:42:53 2016 +0000
Author: Matthew Gharrity <1108540@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3bd93b0e_a5b134f4
UUID: fb77a30c_fa94f137
Bytes: 345
I also use iteration.GetPrunableNodes() below to tell the code generator which registers have been allocated, so I think it makes sense to use it here too, rather than moving the work itself into ColoringIteration. (In my mind, ColoringIteration handles work that occurs on *every* iteration; assigning final spill slots only occurs afterwards.)

2018
Tue Aug 16 19:33:46 2016 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3b1e9ba6_ae4863ba
Bytes: 119
Can you use a set in AllocateSpillSlot() so you don't push if it's already in the set? Then you don't need this method.

2018
Wed Aug 17 21:42:53 2016 +0000
Author: Matthew Gharrity <1108540@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3b1e9ba6_ae4863ba
UUID: fb77a30c_faadd17b
Bytes: 21
Yes, good idea. Done.

