Revision: ed15000a5099f5e230c8ded5ac75692bae272650
Patch-set: 2
File: compiler/optimizing/optimizing_compiler.cc

545:2-545:57
Fri Aug 28 20:52:11 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c42ba915_2573635e
Bytes: 53
I think long-term we need to design something better.

545:2-545:57
Sun Aug 30 14:10:07 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: c42ba915_2573635e
UUID: c459e9e9_8e87ff66
Bytes: 85
Don't we have something we can stack allocate to avoid these error prone transitions?

545:48-545:55
Sun Aug 30 14:10:07 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c459e9e9_ee823358
Bytes: 61
What's the implication for GC? Can we still GC in that state?

545:2-545:57
Mon Aug 31 17:44:22 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: c459e9e9_8e87ff66
UUID: a40dd62d_97c6a426
Bytes: 89
Dunno, the issue is that constructors and destructors don't have lock annotation support.

545:48-545:55
Mon Aug 31 17:44:22 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: c459e9e9_ee823358
UUID: 2419e672_737b2056
Bytes: 49
Yes all non-runnable states are suspended wrt GC.

File: runtime/handle_scope-inl.h

31:83-31:84
Sat Aug 29 02:24:23 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 4485f957_6b406af0
Bytes: 88
In addition to the assert, should this have a thread annotation for shared mutator lock?

31:83-31:84
Mon Aug 31 17:44:22 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 4485f957_6b406af0
UUID: a40dd62d_57880ce9
Bytes: 35
I suppose so, not supported though.

