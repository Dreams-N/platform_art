Revision: ce4774ec2c82afecbe5635cb254a2adac9305993
Patch-set: 13
File: /COMMIT_MSG

13:21-13:36
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 048941a8_5fce4ba7
Bytes: 51
Cite the name of the paper, or remove the brackets.

File: compiler/optimizing/induction_var_analysis.cc

26:2-26:25
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 64e03d3d_c8c9e355
Bytes: 46
Handle the case of `other_loop == loop` first?

36:39-36:51
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 845371c9_49ed85fe
Bytes: 178
It would be nice to have a clear reference to this paper (useful if we need to refer to it in the future), maybe at the beginning of compiler/optimizing/induction_var_analysis.h.

65:0-67:28
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 048941a8_bfdd9756
Bytes: 31
Nit: put this on a single line.

72:8-72:24
Wed Aug 26 01:29:04 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 248c8586_c2c05997
Bytes: 102
I think we always pressed for "capitalize and end with period," even for block-end comments like this.

78:10-78:14
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e45eedce_09822da4
Bytes: 36
strongly connected components (SCCc)

81:2-81:7
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 64e03d3d_a8ce1f59
Bytes: 6
DCHECK

84:0-86:27
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 845371c9_69eac1e9
Bytes: 31
Nit: put this on a single line.

88:4-88:9
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 44e3394a_6a16cb7d
Bytes: 6
DCHECK

93:0-95:24
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 24656596_4ee7c7d1
Bytes: 31
Nit: put this on a single line.

101:0-103:24
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 845371c9_e906b15b
Bytes: 6
Ditto.

118:8-118:11
Wed Aug 26 01:29:04 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c42ba915_86ee0a28
Bytes: 14
No plain ints.

123:2-123:5
Wed Aug 26 01:29:04 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a47f9520_9272aa06
Bytes: 14
No plain ints.

128:2-128:24
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e45eedce_297fe91c
Bytes: 32
// Is `instruction` a root node?

129
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 446ed97b_afbe7df9
Bytes: 82
// Node `instruction` belongs to an SCC defined by a previously visited root node.

131
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c459e9e9_2bc59d31
Bytes: 53
// Found new SCC, defined by root node `instruction`.

133
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e45eedce_c94c151e
Bytes: 69
// Pop the stack until `instruction` is found and generate a new SCC.

155:0-156:71
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c459e9e9_ebf78580
Bytes: 31
Nit: put this on a single line.

178:2-194:3
Wed Aug 26 01:29:04 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 4485f957_e49337af
Bytes: 77
Nicolas loves visitors for such code, but I think it's small enough here. :-)

178:2-194:3
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 4485f957_e49337af
UUID: 64e03d3d_28bb2fbb
Bytes: 75
Agreed.  But if this grows later, we should consider introducing a visitor.

205:2-205:10
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 048941a8_ffd71f32
Bytes: 9
DCHECK_GE

219:4-219:25
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 64e03d3d_88c87b4b
Bytes: 21
InductionInfo* update

221:17-222:80
Wed Aug 26 01:29:04 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c4700952_fb6d12ac
Bytes: 91
Looks like it fits on one line, which is more consistent than the 2+1 parameter split here.

238:60-238:66
Wed Aug 26 01:29:04 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c42ba915_06943a96
Bytes: 46
Bit weird/inconsistent being on the same line.

239:35-239:55
Wed Aug 26 01:29:04 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e430ad80_3869536f
Bytes: 6
Style.

259:0-260:70
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e48fcdab_fed72132
Bytes: 26
Nit: put on a single line.

267:0-268:72
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 64e03d3d_68c53731
Bytes: 64
Break the line after the comma instead of after the return type.

276:0-279:55
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 24656596_8ea5bf8c
Bytes: 40
Break the line after the commas instead.

283:0-284:43
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c459e9e9_8becd1b6
Bytes: 26
Nit: put on a single line.

286:0-287:50
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c459e9e9_abf18d8d
Bytes: 6
Ditto.

294:0-295:47
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 24656596_aeaa0358
Bytes: 6
Ditto.

318:0-319:72
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 048941a8_1feda3ff
Bytes: 39
Break the line after the comma instead.

327:0-328:50
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 44e3394a_ea62db09
Bytes: 26
Nit: put on a single line.

335:0-336:47
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 64e03d3d_a8f73f81
Bytes: 9
Likewise.

348:0-349:54
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 048941a8_3fea67e8
Bytes: 21
Put on a single line.

350:19-350:21
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 24656596_6eadeb6d
Bytes: 1
a

367:0-368:64
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 048941a8_5fe72b1f
Bytes: 45
Break the line after the opening parenthesis.

372:2-372:10
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 446ed97b_afd75d33
Bytes: 9
DCHECK_GT

378:0-379:67
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 845371c9_a910b98c
Bytes: 26
Nit: put on a single line.

388:0-389:70
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 446ed97b_6feac5e9
Bytes: 53
Break the line after the opening parenthesis instead.

418:0-420:42
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e48fcdab_1eedadff
Bytes: 26
Nit: put on a single line.

425:0-426:78
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 446ed97b_0fe78920
Bytes: 9
Likewise.

445:0-446:56
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 24656596_0eba2fa5
Bytes: 9
Likewise.

452:0-453:59
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 44e3394a_8a722fd4
Bytes: 9
Likewise.

459:0-460:66
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 845371c9_49f6e5cc
Bytes: 9
Likewise.

482:0-483:39
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 44e3394a_6a6febed
Bytes: 206
Maybe differentiate the `kSub` and `kNeg` cases to match our style rules?

        case kSub: inv += " - "; break;
        case kNeg: inv += "-"; break;

Also, parentheses around `-op` are superfluous IMHO.

487:10-487:15
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c459e9e9_6be4f5cb
Bytes: 6
DCHECK

489:22-489:46
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 64e03d3d_68909720
Bytes: 145
When `info->fetch` is an IntConstant, we should display its value (in parentheses) after the DebugName().  Likewise for other types of constants.

488:0-489:47
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 44e3394a_ca3c37f0
Bytes: 26
Nit: put on a single line.

495:6-495:11
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 847a9131_6e5e4fbf
Bytes: 9
DCHECK_EQ

File: compiler/optimizing/induction_var_analysis.h

33:2-33:27
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 048941a8_9fd8d367
Bytes: 7
Remove?

35:2-35:51
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 446ed97b_cc665f49
Bytes: 7
Remove?

41:0-42:60
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c459e9e9_eb2545b4
Bytes: 31
Nit: fit this on a single line.

52:22-52:25
Wed Aug 26 01:29:04 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 4485f957_249a9fc6
Bytes: 51
No plain ints. And why does this need to be signed?

57:2-57:6
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 845371c9_a9d75933
Bytes: 11
enum class?

66:2-66:6
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 847a9131_ee68ff6c
Bytes: 9
Likewise?

89:13-89:21
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 847a9131_8e6dbb7b
Bytes: 21
Please complete this.

101:19-101:21
Wed Aug 26 01:29:04 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e430ad80_9861877f
Bytes: 120
Have you considered DCHECKs to make sure the different fields have "compatible" values? Or separate helper constructors?

101:19-101:21
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e430ad80_9861877f
UUID: c459e9e9_8b1a9173
Bytes: 65
Seconded.  DCHECKs are also useful as some form of documentation.

113:2-120:3
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 446ed97b_4c5b4f7f
Bytes: 141
What's the purpose of this method?  I think most of Optimizing's code makes explicit uses of `new` and does not rely on construction helpers.

131:0-132:66
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 44e3394a_2a1cc39b
Bytes: 33
Nit: please fit on a single line.

144:0-145:66
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c459e9e9_ab1f4d62
Bytes: 6
Ditto.

147:7-147:21
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e48fcdab_febe41fa
Bytes: 53
Implement this as an `Equal` method of InductionInfo?

153:2-153:5
Wed Aug 26 01:29:04 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c4700952_3bc87a49
Bytes: 43
No plain ints. Does this have to be signed?

159:15-159:18
Wed Aug 26 01:29:04 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 84253145_ce5e59bd
Bytes: 129
No plain ints. I understand we need to fix HInstruction for that, though. So please do a follow-up cleanup. Some for the loop-id.

File: compiler/optimizing/induction_var_analysis_test.cc

34:4-34:38
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 446ed97b_ef06b55b
Bytes: 70
Move the initialization of `graph_` in the ctor's initialization list?

37:2-37:33
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 847a9131_0e5b0bce
Bytes: 7
Remove.

39:5-39:39
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 24656596_2eb7f3bd
Bytes: 72
// Build `n` nested for-loops recursively (`d` being the current depth).

40:20-40:23
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 845371c9_0900ed39
Bytes: 6
size_t

40:27-40:30
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 24656596_ce6df7ac
Bytes: 6
size_t

61:12-61:13
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e48fcdab_5ee7351f
Bytes: 7
Nit: an

64:21-64:24
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 44e3394a_4a51472e
Bytes: 6
size_t

65:17-65:19
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 64e03d3d_68ded7fc
Bytes: 53
Replace 10 with a named constant (kMaxForLoopDepth?).

65:4-65:21
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 847a9131_8ebffb47
Bytes: 37
Maybe add a comment about this limit.

84:0-85:54
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 24656596_ae83e3e1
Bytes: 26
Nit: put on a single line.

87:17-87:65
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 446ed97b_4ff6e1cc
Bytes: 25
graph_->GetIntConstant(0)

89:17-89:65
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c459e9e9_cb9ba951
Bytes: 25
graph_->GetIntConstant(1)

91:19-91:67
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 64e03d3d_88e19bbd
Bytes: 27
graph_->GetIntConstant(100)

102:9-102:12
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e45eedce_49aa650a
Bytes: 6
size_t

105:0-106:65
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e45eedce_a9c439da
Bytes: 6
Ditto.

107:0-108:53
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 24656596_8e7e1f5b
Bytes: 6
Ditto.

110:20-110:27
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 847a9131_4eaa730a
Bytes: 95
I would rename `compare` as something different (such as `ge`), to avoid mix-ups with HCompare.

110:0-111:50
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e48fcdab_7ee4f119
Bytes: 6
Ditto.

116:0-117:54
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 847a9131_6ea72f41
Bytes: 26
Nit: put on a single line.

119:0-120:72
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 847a9131_0eb46b67
Bytes: 6
Ditto.

126:55-126:58
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 44e3394a_0a373f0a
Bytes: 17
Nit: false_block?

126:41-126:55
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 446ed97b_af10bd8c
Bytes: 13
HBasicBlock**

126:36-126:39
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 847a9131_ce9e63ea
Bytes: 16
Nit: true_block?

126:15-126:18
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e48fcdab_9e01bd47
Bytes: 6
size_t

145:61-145:64
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 847a9131_8e985bfd
Bytes: 6
size_t

151:47-151:50
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e45eedce_69a72141
Bytes: 6
size_t

152:0-153:69
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 048941a8_bf06775a
Bytes: 26
Nit: put on a single line.

157:67-157:70
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c459e9e9_2bdefdfb
Bytes: 6
size_t

163:52-163:55
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 64e03d3d_28e4cfca
Bytes: 6
size_t

199:31-199:33
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 845371c9_c92ad5b4
Bytes: 44
Please use a named constant, here and below.

221:22-221:23
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 845371c9_2916097d
Bytes: 2
10

227:0-228:51
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e45eedce_699081d2
Bytes: 26
Nit: Put on a single line.

258:0-259:80
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 64e03d3d_c86d63ad
Bytes: 9
Likewise.

277:0-278:80
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c459e9e9_0bba21a5
Bytes: 9
Likewise.

296:0-297:80
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 845371c9_895dbd4d
Bytes: 9
Likewise.

315:0-316:66
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 44e3394a_aa93b361
Bytes: 9
Likewise.

337:0-338:77
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 048941a8_df241be9
Bytes: 9
Likewise.

342:0-343:75
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e45eedce_e90c71cc
Bytes: 9
Likewise.

352:0-353:56
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 44e3394a_0a89ff31
Bytes: 9
Likewise.

361:0-362:24
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 845371c9_6965e10e
Bytes: 87
Maybe also add another test case where the two branches assign different values to `k`?

370:0-371:46
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c459e9e9_2bb7ddbd
Bytes: 26
Nit: Put on a single line.

373:0-374:51
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 048941a8_ff29dfbd
Bytes: 9
Likewise.

378:0-379:46
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 64e03d3d_a8729f88
Bytes: 9
Likewise.

381:0-382:53
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e45eedce_89113de3
Bytes: 9
Likewise.

406:0-407:49
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 64e03d3d_e87ca75c
Bytes: 9
Likewise.

409:0-410:51
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 44e3394a_4a830712
Bytes: 9
Likewise.

414:0-415:49
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e48fcdab_5e19f5aa
Bytes: 9
Likewise.

417:0-418:53
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 845371c9_a962f908
Bytes: 9
Likewise.

440:0-441:80
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 44e3394a_2a804303
Bytes: 9
Likewise.

464:0-465:81
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 446ed97b_0f19c9ab
Bytes: 9
Likewise.

488:0-489:75
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 64e03d3d_c85603db
Bytes: 9
Likewise.

499:7-499:10
Wed Aug 26 11:31:15 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 048941a8_bf58375e
Bytes: 6
size_t

