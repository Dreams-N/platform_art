Revision: 61de47006f837e7c1d77f3eef21c4e4aa018f1c6
Patch-set: 3
File: compiler/optimizing/register_allocator.cc

1415
Mon Mar 30 18:49:17 2015 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 43308612_7ff2886b
Bytes: 200
Looks like it's better to change the order of the two tests.
Test if (current->Covers(use->GetPosition())) first. If it fails, assert it's an env use and continue. Otherwise, do line 1416 for env use.

1415
Mon Mar 30 21:12:23 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 43308612_7ff2886b
UUID: a3ece2ce_2d958d41
Bytes: 86
Covers could be expensive, it might make sense to only pay if it's an environment use.

1415
Mon Mar 30 22:30:30 2015 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a3ece2ce_2d958d41
UUID: 43308612_36d5c23a
Bytes: 249
If we iterate through ranges not just intervals, we don't need to test Covers(). Just < range->GetStart() instead since we already tested <= range->GetEnd(). We move to the next sibling when the current sibling runs out of ranges. Is it worth a try?

1415
Tue Mar 31 09:26:39 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 43308612_36d5c23a
UUID: c3f1d6a3_cefde336
Bytes: 207
This code is iterating over intervals, which can have multiple ranges. And you might have holes between your ranges:

[4, 41[ [52, 87(

If the environment use is at 43, it is after the start of the interval.

1415
Tue Mar 31 13:34:08 2015 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: c3f1d6a3_cefde336
UUID: 23cf1274_a16a5e5c
Bytes: 557
So my suggestion is to directly iterate through ranges, it's something like:
range = current->GetFirstRange();
while (range != nullptr) {
  // update use's locations. if use is before
  // range->GetStart(), it's in a hole and we can assert
  // it must be env use since all real uses must be covered
  // by ranges.

  range = range->GetNext();
  if (range == nullptr) {
    current = current->GetNextSibling();
    if (current != nullptr) {
      range = current->GetFirstRange();
    } else {
      break;
    }
  }
}

Then there is no hole to deal with.

1415
Tue Mar 31 15:00:26 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 23cf1274_a16a5e5c
UUID: 83fb5e85_f2d7e041
Bytes: 17
Good point. Done.

