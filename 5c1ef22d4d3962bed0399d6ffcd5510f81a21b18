Revision: 5c1ef22d4d3962bed0399d6ffcd5510f81a21b18
Patch-set: 2
File: compiler/optimizing/nodes.h

5893:24-5893:35
Tue Dec 22 17:54:16 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 4aed17c9_cd668967
Bytes: 35
Shouldn't this be reinterpret_cast?

5893:24-5893:35
Tue Dec 22 18:07:24 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 4aed17c9_cd668967
UUID: 2ac3835c_d419dc67
Bytes: 345
No, H##type must be a subclass of HInstruction and static_cast<>() is the most appropriate.

If someone used multiple inheritance to make the HInstruction a second base class instead of first, static_cast<>() would still work but, assuming the usual class layout, reinterpret_cast<>() would be broken at run-time without any compile-time errors.

5893:24-5893:35
Tue Dec 22 19:22:17 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2ac3835c_d419dc67
UUID: 0af79f9a_4b49e50e
Bytes: 187
Hm, I was thinking that you couldn't be sure it's a subclass, but I see that this is non-virtual in HInstruction, so all given types are subtypes. In that case it should be a down_cast...

