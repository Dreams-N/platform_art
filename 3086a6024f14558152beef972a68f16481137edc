Revision: 3086a6024f14558152beef972a68f16481137edc
Patch-set: 4
File: compiler/utils/assembler_test.h

856:0-861:51
Thu Nov 13 18:02:32 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7adfdb23_e439cec5
Bytes: 34
statics before instance variables?

862:0-862:2
Thu Nov 13 18:02:32 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3ac2c357_34f3f032
Bytes: 25
DISALLOW_COPY_AND_ASSIGN?

File: compiler/utils/x86_64/assembler_x86_64.cc

885:32-885:35
Thu Nov 13 12:50:21 2014 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: da2b67c1_2963cd3d
Bytes: 75
you can't omit the instruction entirely?  In fact, the noop IS xchg rax,rax

885:32-885:35
Thu Nov 13 17:27:31 2014 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: da2b67c1_2963cd3d
UUID: 5ac5b75b_d5eb9cb5
Bytes: 257
Ha, that's what you think. But no, this *is* "halfway" optimized. 0x90 is xchg eax, eax. Anyways, I'm following GCC's assembler for the time being, which doesn't optimize things away - so I would need to add register filtering for things that don't agree...

File: compiler/utils/x86_64/assembler_x86_64.h

34:11-34:31
Thu Nov 13 18:02:32 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7adfdb23_24d73604
Bytes: 83
reminds me of utils.h: "bool IsInt(sizeof(T) * 8 , value)"
move to a common helper?

File: compiler/utils/x86_64/assembler_x86_64_test.cc

457:0-457:90
Thu Nov 13 12:50:21 2014 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7a1a7bb5_8c05ab81
Bytes: 91
Possibly because GCC never specialized for that case, since it is probably never generated?

