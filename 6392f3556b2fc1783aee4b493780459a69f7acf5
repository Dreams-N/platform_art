Revision: 6392f3556b2fc1783aee4b493780459a69f7acf5
Patch-set: 6
File: compiler/optimizing/instruction_simplifier.cc

826:2-827:56
Tue Jan 12 12:32:27 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e727e6f2_4a9b9359
Bytes: 103
Reverse the condition if left is constant. Some code generators prefer constant on the right hand side.

831:46-831:80
Tue Jan 12 12:32:27 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a7088e64_3022084c
Bytes: 19
I can't parse this.

File: compiler/optimizing/nodes.h

2720:0-2737:3
Tue Jan 12 12:32:27 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 87246af4_87374620
Bytes: 27
Is this change intentional?

2720:0-2737:3
Tue Jan 12 12:36:20 2016 +0000
Author: Anton Shamin <1055300@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 87246af4_87374620
UUID: 870b8a60_2f7589d5
Bytes: 93
Yes. We should have same result for == and != operations with NaN no matter what bias is set.

