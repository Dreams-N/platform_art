Revision: 62731d76afcebf3e6857cd98586e2ce5f1f9a115
Patch-set: 4
File: /COMMIT_MSG

14:1-14:37
Fri Sep 11 16:31:21 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 24f726e3_26ca982e
Bytes: 43
I'll get rid of this in the next patch set.

14:1-14:37
Tue Sep 15 00:36:51 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 24f726e3_26ca982e
UUID: 648afea0_12991ab6
Bytes: 84
If that's useful for debugging, it might be an idea to keep it and have it disabled?

14:1-14:37
Tue Sep 15 15:42:52 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 648afea0_12991ab6
UUID: a9f4cf41_5fe38b9a
Bytes: 24
Alright; I have kept it.

20:0-20:13
Fri Sep 11 16:31:21 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e41fceee_bc524dd8
Bytes: 59
Let me know if this bug number should be listed in this CL.

20:0-20:13
Tue Sep 15 00:36:51 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e41fceee_bc524dd8
UUID: a9420f4a_c31c5674
Bytes: 127
You can list it if you would like to. To me 12687968 seems sufficient and it would allow 22884995 to focus on feature comments.

20:0-20:13
Tue Sep 15 15:42:52 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a9420f4a_c31c5674
UUID: 89fb8b33_9e3fdd79
Bytes: 61
Agreed; I've removed 22884995.  It will also reduce bug spam.

File: runtime/arch/stub_test.cc

2427:3-2427:63
Fri Sep 11 16:31:21 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c4164adc_db3707c7
Bytes: 40
I'll add the test in the next patch set.

2427:3-2427:63
Tue Sep 15 00:36:51 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: c4164adc_db3707c7
UUID: e467cecb_88197f84
Bytes: 4
Ack.

2427:3-2427:63
Tue Sep 15 15:42:52 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e467cecb_88197f84
UUID: 691f3755_1554d4c4
Bytes: 12
Done in PS5.

File: runtime/entrypoints/quick/quick_entrypoints_list.h

150:2-150:69
Fri Sep 11 16:31:21 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c4164adc_bb36d3c7
Bytes: 166
I've added this entry point to have a clean signature for read barrier for GC roots, but it is similar to ReadBarrierJni.  Maybe we can merge them; what do you think?

150:2-150:69
Tue Sep 15 00:36:51 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: c4164adc_bb36d3c7
UUID: 44725a92_f44d6d39
Bytes: 326
I think it's convenient to keep them separate for now. ReadBarrierJni is special in that it's called from a constrained place (eg. can only happen two params, and the first parameter is a pointer to a handle in handle scope, etc.) rather than a general GcRoot. This does not mean they can't be merged in the future, of course.

150:2-150:69
Tue Sep 15 15:42:52 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 44725a92_f44d6d39
UUID: 89fb8b33_3e5d69da
Bytes: 17
Sure, no problem.

File: runtime/runtime_options.def

82:0-84:96
Tue Sep 15 00:36:51 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a9420f4a_a3c71224
Bytes: 37
We could remove this comment as well?

82:0-84:96
Tue Sep 15 15:42:52 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a9420f4a_a3c71224
UUID: c93f43b4_707a1052
Bytes: 175
Yes; done in PS5.

I have added a check in compiler/optimizing/optimizing_compiler.cc to bail out when trying to compile with read barriers on arch others than x86 and x86-64.

