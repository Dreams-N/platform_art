Revision: 7a4e973a24f09c9a9d9ebea20e1f8b468d6f845f
Patch-set: 4
File: compiler/optimizing/builder.cc

1669:17-1669:25
Tue Nov 24 17:39:38 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5b77ab0e_a93079e4
Bytes: 55
Rename to outer_dex_file in line with naming the above?

1669:17-1669:25
Tue Nov 24 17:59:22 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5b77ab0e_a93079e4
UUID: 9b7da3ef_eb36edbd
Bytes: 371
This method was already using the current dex compilation unit, so I did not want to change it. I changed the other one above as it wasn't consistent with the type index.

All in all, this is a problem around inlining that will stop inlining as soon as it sees a HLoadClass from a different dex file (because HLoadClass requires the dex cache). I plan on cleanup this up.

File: compiler/optimizing/code_generator_x86_64.cc

5192:6-5192:73
Tue Nov 24 17:25:11 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: bbb8a7d5_5ce091bc
Bytes: 124
Did you mean to add this in other backends?

The message seems a bit off :) It's just something that we should not generate.

5192:6-5192:73
Tue Nov 24 17:59:22 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: bbb8a7d5_5ce091bc
UUID: 9baf638f_5ba5f7db
Bytes: 55
Yeah, and it was wrong for read barriers. I removed it.

File: compiler/optimizing/nodes.h

4890:2-4890:30
Tue Nov 24 17:39:38 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5bc96b78_5946e736
Bytes: 107
A separate ClinitCheck elimination pass could change this from false to true but I'm OK with const for now.

