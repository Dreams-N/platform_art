Revision: 13ddf9e58eae08716b0abffbd4803933ed5d0c70
Patch-set: 6
File: compiler/utils/mips/assembler_mips.cc

563
Tue Sep 01 10:44:09 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a46956e6_d7f0bccd
Bytes: 7
<< cond

619
Tue Sep 01 10:44:09 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 447a5aab_d4175c7f
Bytes: 7
<< cond

896:2-896:30
Tue Sep 01 10:44:09 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 447a5aab_342330e9
Bytes: 235
Please replace with

  CHECK_NE(condition, kUncond);

and add `utils/mips/assembler_mips.h` to `LIBART_COMPILER_ENUM_OPERATOR_OUT_HEADER_FILES_mips` in compiler/Android.mk to generate an operator<< for `MipsAssembler::BranchCondition`.

981
Tue Sep 01 10:44:09 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a4deb6f4_af0ef966
Bytes: 7
<< cond

1262:0-1263:33
Tue Sep 01 10:44:09 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a46956e6_f7edc0f2
Bytes: 187
I was thinking about this instead:

  branches_.emplace_back(IsR6(), buffer_.Size(), target);

and turning `branches_` into an `std::vector<Branch>` (and likewise in other methods below).

1402:6-1402:64
Tue Sep 01 10:44:09 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a46956e6_97fa44aa
Bytes: 29
Use CHECK_EQ, here and below.

1440:0-1441:20
Tue Sep 01 10:44:09 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 04d222e7_f2edc8f2
Bytes: 54
Please introduce a Push method to factor this pattern.

1447:6-1447:20
Tue Sep 01 10:44:09 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 447a5aab_f414d87c
Bytes: 75
Please introduce a Pop method to factor the Lw + DecreaseFrameSize pattern.

2210:0-2211:39
Tue Sep 01 10:44:09 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c4dbaa04_9011d48b
Bytes: 157
Likewise, replace with:

  exception_blocks_.emplace_back(scratch, stack_adjust);

and turn `exception_blocks_` into an `std::vector<MipsExceptionSlowPath>`.

2210:0-2211:39
Thu Sep 03 04:38:54 2015 +0000
Author: Alexey Frunze <1057043@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: c4dbaa04_9011d48b
UUID: e486eed4_d46d15fa
Bytes: 408
As I understand it, MipsExceptionSlowPath must be either copiable or movable for this transformation to work. However, at the moment MipsExceptionSlowPath is not copiable/movable and nor is MipsLabel that is contained inside of it (MipsLabel derives from Label, which isn't copiable/movable either). Would you like us to make all three of these classes movable, i.e. include move constructors in all of them?

2210:0-2211:39
Thu Sep 03 08:50:32 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e486eed4_d46d15fa
UUID: 8480d2c5_f9bff3e2
Bytes: 86
Ah, you're right, I forgot about this.  Yes, making those classes movable sounds good.

File: compiler/utils/mips/assembler_mips.h

601:2-603:33
Tue Sep 01 15:32:24 2015 +0000
Author: Pavle Batuta <1080239@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a46956e6_9777a49a
Bytes: 198
If I understood correctly, you would like me to turn these into vectors of objects instead of pointers to objects, and change all files accordingly (remove indirect access, explicit deletions etc.)?

601:2-603:33
Tue Sep 01 15:51:26 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a46956e6_9777a49a
UUID: a4deb6f4_cf7d7d7e
Bytes: 13
Yes, exactly.

