Revision: 1527d5dc5a00f1157c7dd35b25e6720be1b631c1
Patch-set: 3
File: runtime/art_method.h

548
Tue Oct 06 19:14:42 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 4b9c302a_c4d1efda
Bytes: 17
why not const? :(

548
Tue Oct 06 22:40:35 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 4b9c302a_c4d1efda
UUID: 1001893d_91fe5c66
Bytes: 106
Because IsPreverified is not const, either. This would be a larger change, and deserves a follow-up, IMHO.

548
Tue Oct 06 23:38:00 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1001893d_91fe5c66
UUID: d00a915c_9552c446
Bytes: 15
Yeah, I know :(

File: runtime/entrypoints/quick/quick_trampoline_entrypoints.cc

723
Tue Oct 06 19:14:42 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ab976c01_3316da8f
Bytes: 27
style nit: what is nullptr?

723
Tue Oct 06 22:40:35 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ab976c01_3316da8f
UUID: d00a915c_4f160d60
Bytes: 170
I believe the last state was that it is not required to document all parameters. And this is just refactored into its own line (though this isn't even necessary anymore).

723
Tue Oct 06 23:38:00 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d00a915c_4f160d60
UUID: 105c2963_1c78b985
Bytes: 140
The latest draft says to document magic numbers for parameters with a comment, afaik it always stated that and nobody was ever against that.

725
Tue Oct 06 19:14:42 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2b6d3ced_c9efbddf
Bytes: 21
style nit: what is 0?

File: runtime/interpreter/interpreter.cc

338
Tue Oct 06 19:14:42 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 50478167_e6e2c002
Bytes: 21
style nit: what is 0?

486
Tue Oct 06 19:14:42 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ab804cc5_c5ac84de
Bytes: 85
Wow this seems complicated, why can't the ShadowFrame just automatically clean it up?

486
Tue Oct 06 22:40:35 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ab804cc5_c5ac84de
UUID: d00a915c_efb9c1b6
Bytes: 314
You'd have to hook that somewhere, so it wouldn't be automatically (I prefer the DCHECK in the actual interpreters to make sure that the entry is correct instead of cleaning up there).

There's only one call-site, and this isn't very general code. Do you have a good argument why this should move into ShadowFrame?

486
Tue Oct 06 23:38:00 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d00a915c_efb9c1b6
UUID: d00a915c_357958bc
Bytes: 252
I thought the whole point of having the macro was to always call the destructor. Therefore shouldn't the ShadowFrame destructor be responsible for cleaning this up?

I'm not so much arguing for it, as trying to understand why/if it has to be like this.

486
Wed Oct 07 00:44:27 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d00a915c_357958bc
UUID: 30592d74_00b16a36
Bytes: 460
I don't want to delete it in the destructor. This is basically the reverse of the optimization in the quick_trampoline_entrypoints: line 339 allocates the structure, but the static initializer is here, in a separate function.

My original intent was to have the lock counting visible in the signature of the "constructor," so that future users cannot forget it. But maybe it's better to always have it delayed. (Then it would be the AllocLockCountData here...)

File: runtime/interpreter/interpreter_common.cc

592
Tue Oct 06 19:14:42 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: eb66c411_5f77dcc5
Bytes: 21
style nit: what is 0?

File: runtime/interpreter/interpreter_common.h

85
Tue Oct 06 19:14:42 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0b7078c2_33f82836
Bytes: 97
NO_THREAD_SAFETY_ANALYSIS makes me very very sad. Is there any lock held asserts we can add here?

85
Tue Oct 06 22:40:35 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0b7078c2_33f82836
UUID: 30592d74_ba855199
Bytes: 307
The problem is that the MonitorEnter is marked EXCLUSIVE_LOCK_FUNCTION, so that you get a warning if you don't unlock under normal circumstances. Even if you annotate this, you'll just pass it upwards. It's exactly the case that the interpreter can't guarantee there'll be an exit (much less so statically).

87
Tue Oct 06 19:14:42 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: eb66c411_3f2468e7
Bytes: 70
When would the get lock count map be null if kMonitorCounntig is true?

87
Tue Oct 06 22:40:35 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: eb66c411_3f2468e7
UUID: 90673931_5567acdc
Bytes: 184
kMonitorCounting is currently aliased to do_access_checks, but we could try to separate this etc. You're right that the second check isn't required right now. I'll move it to a DCHECK.

97
Tue Oct 06 19:14:42 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: eb66c411_5f291cbe
Bytes: 6
See 85

100
Tue Oct 06 19:14:42 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 4b9c302a_44639fd0
Bytes: 103
nit: would be nice to have a comment explaining that it only removes the first occurrence of the object

100
Tue Oct 06 22:40:35 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 4b9c302a_44639fd0
UUID: 504861a0_fb550fe0
Bytes: 4
Done

111
Tue Oct 06 19:14:42 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 8b92a812_373a48b8
Bytes: 43
Is there a semantical requirement for this?

111
Tue Oct 06 22:40:35 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 8b92a812_373a48b8
UUID: 30592d74_dae6454c
Bytes: 144
That's how I interpret enforcement of structured locking. Otherwise just throwing IllegalMonitorState won't help you avoid a following deadlock.

113:22-113:27
Tue Oct 06 19:14:42 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: cb6900e6_6b89c965
Bytes: 25
style nit: what is false?

113:22-113:27
Tue Oct 06 22:40:35 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: cb6900e6_6b89c965
UUID: 105c2963_39414f1f
Bytes: 4
Done

118:44-118:74
Tue Oct 06 19:14:42 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: cb6900e6_8b8e9d6d
Bytes: 22
seems like a bit much?

118:44-118:74
Tue Oct 06 22:40:35 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: cb6900e6_8b8e9d6d
UUID: b0435d80_9e82fd8c
Bytes: 136
Could you be more precise?

(The other IllegalMonitorStateException throws have a similar message, in fact this is derived from them...)

118:44-118:74
Tue Oct 06 23:38:00 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b0435d80_9e82fd8c
UUID: b0435d80_41889461
Bytes: 89
The expression is just very complicated here, it might be nice to bring it out to a temp.

118:44-118:74
Wed Oct 07 00:44:27 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b0435d80_41889461
UUID: 1001893d_b45a6eb6
Bytes: 13
Ah, OK, sure.

File: runtime/interpreter/interpreter_goto_table_impl.cc

168
Tue Oct 06 19:14:42 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 8b92a812_d72a0460
Bytes: 268
doesn't matter to me either way, but please tell me so I know how to write my own code correctly:

why isn't this just a single stmt 

   DCHECK(!do_access_check && shadow_frame.GetLockCountMap() != nullptr) << "Should not have lock counting without access checks";

?

168
Tue Oct 06 22:40:35 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 8b92a812_d72a0460
UUID: 5061411e_73cac0d1
Bytes: 139
Sure, that's equivalent (if you fix it up to be the reverse). Sometimes I like the extended form with the abort when the condition is true.

285
Tue Oct 06 19:14:42 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ab804cc5_85752c01
Bytes: 125
imho seems like this could just be a macro in a file already full of macros

   HANDLE_MONITOR_CHECKS_OR_THROW

or some such.

285
Tue Oct 06 22:40:35 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ab804cc5_85752c01
UUID: 704d65ae_bc5a61b6
Bytes: 56
Was trying to avoid it, especially macro in macro. Done.

File: runtime/stack.h

69
Tue Oct 06 19:14:42 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 50478167_e6e7600a
Bytes: 153
IMHO a vector should never be called a map. That was very confusing until I hit this file.

Why isn't this just a map of the objects to a counter anyway?

69
Tue Oct 06 22:40:35 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 50478167_e6e7600a
UUID: 5061411e_d3ff54c8
Bytes: 182
Cause it's more complicated to manage that, in this is slow-path code (it was a map, then I went with the lighter-weight vector). Admittedly naming sucks, I'll make it LockCountData.

87
Tue Oct 06 19:14:42 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ab976c01_1354fe31
Bytes: 27
style nit: what is nullptr?

282
Tue Oct 06 19:14:42 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 8b92a812_d7f1a455
Bytes: 101
-1 this should be a std::unique_ptr<LockCountMap> to make it clear the ownership is being transferred

282
Tue Oct 06 22:40:35 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 8b92a812_d7f1a455
UUID: 1001893d_5181948a
Bytes: 276
I disagree, there's no reason here to make this complicated and complicate all call-sites. It's more common to write a comment here for that.

I would love to make this private and not have any callers except to few cases in the interpreter, and they are very well documented.

282
Tue Oct 06 23:38:00 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1001893d_5181948a
UUID: 105c2963_fc2ea573
Bytes: 490
I would've just made this a separate class for maximal call-site simplicity, although it honestly doesn't bother me too much the way it is because ShadowFrame is already a mess.

  class LockCountTracker {
    std::unique_ptr<LockCountData> data_;

   public:
    void BeginTracking();
    void EndTracking();
    void TrackMonitorEnter();
    void TrackMonitorExit();
    bool CheckMonitorsUnheldOrThrow();
  }

  struct ShadowFrame {
    ....
    LockCountTracker lock_count_tracker_;
  }

311
Tue Oct 06 19:14:42 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 4b9c302a_8440c71a
Bytes: 7
see 282

318:45-318:59
Tue Oct 06 19:14:42 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0b7078c2_d3368cad
Bytes: 7
see 282

File: runtime/thread.cc

2801:18-2801:35
Tue Oct 06 19:14:42 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: cb6900e6_0b612d3c
Bytes: 46
style nit: can we not use array notation here?

2801:18-2801:35
Tue Oct 06 22:40:35 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: cb6900e6_0b612d3c
UUID: 704d65ae_5c97dd82
Bytes: 151
This is taken from the RootVisitor interface, and at least for this CL I prefer to have this matching 1:1. A future cleanup may consider changing both.

