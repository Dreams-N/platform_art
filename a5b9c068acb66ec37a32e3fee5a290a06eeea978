Revision: a5b9c068acb66ec37a32e3fee5a290a06eeea978
Patch-set: 3
File: runtime/base/array_slice.h

29
Tue Dec 08 22:43:03 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 80ed303a_1fbf837b
Bytes: 42
nit: comments to describe class and usage?

29
Thu Dec 10 17:57:57 2015 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 80ed303a_1fbf837b
UUID: 40efb832_636396ee
Bytes: 4
Done

31
Tue Dec 08 22:43:03 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c0e3a848_81a7ba29
Bytes: 40
nit: public methods should have comments

31
Thu Dec 10 17:57:57 2015 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: c0e3a848_81a7ba29
UUID: c0e3a848_8ad22f23
Bytes: 4
Done

83
Tue Dec 08 22:43:03 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e0e0ac3e_c2cd423e
Bytes: 19
Why no operator[] ?

83
Thu Dec 10 17:57:57 2015 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e0e0ac3e_c2cd423e
UUID: 20fe44e6_5f40efe4
Bytes: 41
LengthPrefixedArray didn't have it. Done.

119
Tue Dec 08 22:43:03 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 00f940fe_fbb0efb5
Bytes: 139
Aren't ArraySlices written to the image? size_t is not safe because it's either 32-bit or 64-bit. All fields should be of the form uintXY_t

119
Thu Dec 10 17:57:57 2015 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 00f940fe_fbb0efb5
UUID: c0e3a848_47878238
Bytes: 153
No they are simply a wrapper type around a pointer, length and element size. They are never written to the image or passed between different invocations.

124
Tue Dec 08 22:43:03 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0054e0af_a3569a09
Bytes: 103
Why isn't this just on the class

  IterationRange<StrideIterator<T>> AsRange() const {
     ...
  }

?

124
Thu Dec 10 17:57:57 2015 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0054e0af_a3569a09
UUID: c0e3a848_2784fe31
Bytes: 43
B/c it is separate for LengthPrefixedArray.

124
Mon Dec 14 21:57:01 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: c0e3a848_2784fe31
UUID: 25fc967c_32ee88e5
Bytes: 252
It's separate because it's a necessity, it takes a pointer which can be null, it's undefined behavior to call member functions pointers on a null this.

In this case the parameter is a value so it would be preferable for this to be in the class itself.

124
Mon Dec 14 22:28:10 2015 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 25fc967c_32ee88e5
UUID: a52166e4_2e73d3f4
Bytes: 4
Done

File: runtime/class_linker.cc

5324
Tue Dec 08 22:43:03 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 405a58de_a551be0c
Bytes: 208
Any reason why not to just make these virtual member functions?

   ArrayLike<T> {
     virtual T* At(int32_t index) = 0;
   }
   ArrayLikeSlice<T> : ArrayLike<T>
   ArrayLikePointerArray : ArrayLike<T>

etc?

5324
Thu Dec 10 17:57:57 2015 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 405a58de_a551be0c
UUID: c0e3a848_6a01ab48
Bytes: 65
It is kept on the stack. No virtuals there.Removed for ngoeffray.

5344:40-5344:50
Tue Dec 08 22:43:03 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 80ed303a_df519b0c
Bytes: 15
initialization?

5344:40-5344:50
Thu Dec 10 17:57:57 2015 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 80ed303a_df519b0c
UUID: 855c6237_bb0a9f34
Bytes: 8
removed.

5369
Tue Dec 08 22:43:03 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0054e0af_83235e9a
Bytes: 175
nit: just initialize the fields here with = or {}, then you can remove all of the constructor crud which just calls the default constructor (when the parameter is unspecified)

5369
Thu Dec 10 17:57:57 2015 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0054e0af_83235e9a
UUID: 855c6237_9b07db2e
Bytes: 7
removed

5374
Tue Dec 08 22:43:03 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 605f5ccc_e6749e6a
Bytes: 24
nit: no auto here please

5374
Thu Dec 10 17:57:57 2015 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 605f5ccc_e6749e6a
UUID: 405a58de_c8f64ffa
Bytes: 4
Done

5375:2-5375:6
Tue Dec 08 22:43:03 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 605f5ccc_86692a95
Bytes: 24
nit: no auto here please

5375:2-5375:6
Thu Dec 10 17:57:57 2015 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 605f5ccc_86692a95
UUID: 405a58de_e8fb0be1
Bytes: 4
Done

5381:4-5381:8
Tue Dec 08 22:43:03 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 80ed303a_5f158b21
Bytes: 24
nit: no auto here please

5381:4-5381:8
Thu Dec 10 17:57:57 2015 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 80ed303a_5f158b21
UUID: 8089b0aa_5fbbabe5
Bytes: 4
Done

5382:4-5382:8
Tue Dec 08 22:43:03 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 40efb832_5d091bb1
Bytes: 34
(this is a reasonable use of auto)

5382:4-5382:8
Thu Dec 10 17:57:57 2015 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 40efb832_5d091bb1
UUID: c0e3a848_8a57cf4b
Bytes: 4
Done

5523:7-5525:65
Thu Dec 10 15:24:31 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 45f7ca47_5d8ddba9
Bytes: 82
If this is the only use of ArrayLikeProxy, I strongly preferred the previous code.

5523:7-5525:65
Thu Dec 10 17:57:57 2015 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 45f7ca47_5d8ddba9
UUID: 855c6237_dbe433d2
Bytes: 4
Done

File: runtime/jni_internal.cc

319:2-319:40
Thu Dec 10 15:24:31 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 45f7ca47_3d920fca
Bytes: 1
?

319:2-319:40
Thu Dec 10 17:57:57 2015 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 45f7ca47_3d920fca
UUID: 254d7687_73732af4
Bytes: 17
forgot to remove.

File: runtime/mirror/class.h

773:25-773:42
Tue Dec 08 22:43:03 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c0e3a848_41d5b234
Bytes: 303
So is it including declared+copied now? The comment should probably be updated. And honestly the name could be different too if that's the case, perhaps NumNewVirtualMethods or some such.

(don't much have a preference for it, as long as we make it clear it has other methods in there besides declared).

773:25-773:42
Thu Dec 10 17:57:57 2015 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: c0e3a848_41d5b234
UUID: 20fe44e6_3fcfe3da
Bytes: 56
Yes and it always did so I am keeping the name the same.

