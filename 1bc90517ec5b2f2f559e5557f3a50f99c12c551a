Revision: 1bc90517ec5b2f2f559e5557f3a50f99c12c551a
Patch-set: 5
File: compiler/optimizing/code_generator_x86.cc

1369:11-1369:36
Wed Nov 12 19:41:52 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: da88c7e4_754a10a7
Bytes: 5
ditto

1369:11-1369:36
Thu Nov 13 14:19:34 2014 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: da88c7e4_754a10a7
UUID: fab4abdf_1a2c5d8c
Bytes: 4
Done

File: compiler/optimizing/code_generator_x86_64.cc

1371:12-1371:35
Wed Nov 12 19:41:52 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ba8dd3f4_14f5c460
Bytes: 55
no needed, in.GetConstant() below already has the check

1371:12-1371:35
Thu Nov 13 14:19:34 2014 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ba8dd3f4_14f5c460
UUID: 3ae9e3cf_7ca1d9af
Bytes: 30
Thanks! I didn't know that. :)

File: compiler/utils/arm/assembler_arm32.cc

211:21-211:25
Thu Nov 13 10:09:24 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3ae9e3cf_9caea5a8
Bytes: 155
Since we're using the thumb2 assembler, this code will probably not be used. I'm fine keeping it, but we should probably also test it in an assembler test.

211:21-211:25
Thu Nov 13 14:19:34 2014 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3ae9e3cf_9caea5a8
UUID: fab4abdf_fac169b9
Bytes: 51
OK, I'll add a test on SBFX on ARM32 in another PS.

215:8-215:14
Wed Nov 12 19:41:52 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ba8dd3f4_b4f17875
Bytes: 42
I find it more readable to use 'lsb < 32'.

215:8-215:14
Thu Nov 13 10:09:24 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ba8dd3f4_b4f17875
UUID: 1ae6dfff_dbd4b3fa
Bytes: 152
Not for me :-) The check tells me that lsb must fit in 5 bits, which is what you're testing for. The max 5 bits number does not help me understand that.

215:8-215:14
Thu Nov 13 11:21:54 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1ae6dfff_dbd4b3fa
UUID: 1ae6dfff_7be39fb1
Bytes: 124
either one is good :). I just follow the spec here which mentions that lsb should be 0 <= lsb <= 31 (not that lsb is 5 bits)

215:8-215:14
Thu Nov 13 11:26:37 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1ae6dfff_7be39fb1
UUID: 3ae9e3cf_3c5f51e4
Bytes: 69
OK, then this changes my mind, and I agree it makes it more readable.

215:8-215:14
Thu Nov 13 14:19:34 2014 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3ae9e3cf_3c5f51e4
UUID: fab4abdf_bab7f158
Bytes: 4
Done

216:25-216:30
Wed Nov 12 19:41:52 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: fa83cbc2_8b21b514
Bytes: 112
if you want to check the range then width is in between 1 to (32-lsb).Your check dies not exactly test for this.

216:25-216:30
Thu Nov 13 14:19:34 2014 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: fa83cbc2_8b21b514
UUID: 3ae9e3cf_fcd889a5
Bytes: 30
Agreed. I've changed the test.

File: compiler/utils/arm/assembler_thumb2.cc

270:18-270:29
Wed Nov 12 19:41:52 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: da88c7e4_35448895
Bytes: 5
ditto

270:18-270:29
Thu Nov 13 14:19:34 2014 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: da88c7e4_35448895
UUID: 3ae9e3cf_7cb0f9d2
Bytes: 6
Ditto.

