Revision: 2fd20f9ab5aa53ba55424d69b1714e68a6003493
Patch-set: 2
File: compiler/driver/compiler_driver.cc

393:37-393:41
Wed Nov 25 17:40:33 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7bb2aff7_5a309196
Bytes: 5
from?

393:37-393:41
Fri Nov 27 16:26:32 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7bb2aff7_5a309196
UUID: bbb8a7d5_42a348c2
Bytes: 4
Done

775:11-775:16
Wed Nov 25 17:40:33 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: bbb8a7d5_5c17b1d3
Bytes: 5
true?

775:11-775:16
Fri Nov 27 16:26:32 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: bbb8a7d5_5c17b1d3
UUID: 9baf638f_ac85fbc0
Bytes: 11
done in ps3

780:16-780:19
Wed Nov 25 17:40:33 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5b77ab0e_6c14cf8e
Bytes: 16
Nit: method_name

780:16-780:19
Fri Nov 27 16:26:32 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5b77ab0e_6c14cf8e
UUID: fb921f65_71fd9024
Bytes: 19
do you really care?

2302
Wed Nov 25 17:40:33 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5b77ab0e_ac05e757
Bytes: 11
indentation

2302
Fri Nov 27 16:26:32 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5b77ab0e_ac05e757
UUID: 9b7da3ef_b16b82c4
Bytes: 4
Done

File: runtime/jit/offline_profiling_info.cc

95:9-95:19
Wed Nov 25 17:40:33 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5bc96b78_bc27e991
Bytes: 41
The code looks pretty write-only to me...

95:9-95:19
Fri Nov 27 16:26:32 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5bc96b78_bc27e991
UUID: bbb8a7d5_62a84c9c
Bytes: 36
it will be read as well pretty soon.

98:30-98:48
Wed Nov 25 17:40:33 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: fb921f65_ce5223e7
Bytes: 125
This overwrites the file if it exists already. Didn't we say we wouldn't do that? Looking forward to seeing that test, btw ;)

98:30-98:48
Fri Nov 27 16:26:32 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: fb921f65_ce5223e7
UUID: fb921f65_91011ce5
Bytes: 40
that's the intention for now: overwrite.

148:38-148:50
Wed Nov 25 17:40:33 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: fbbdbfca_79cc7f3b
Bytes: 14
KeySubstitute?

148:38-148:50
Fri Nov 27 16:26:32 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: fbbdbfca_79cc7f3b
UUID: bbb8a7d5_82ad60ad
Bytes: 4
Done

196:37-196:82
Wed Nov 25 17:40:33 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5b77ab0e_0c88bb08
Bytes: 168
Argh, why don't you just leave it empty? How is it making the parsing any easier if you need to special case it? Wouldn't Split() set parts[0] to the empty string here?

196:37-196:82
Fri Nov 27 16:26:32 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5b77ab0e_0c88bb08
UUID: fbbdbfca_3c78355e
Bytes: 96
because:
- some split functions will ignore empty groups
- easier for humans to parse the files.

196:37-196:82
Mon Nov 30 14:31:54 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: fbbdbfca_3c78355e
UUID: 5bc96b78_aa979708
Bytes: 297
Do you really expect the file to be parsed by something/somebody else? If not, then make sure *your* split function handles the case and don't pollute your code with unnecessary logic. It might make the profile file a little more human-friendly but it makes the code a hell of a lot less readable.

196:37-196:82
Tue Dec 01 11:45:49 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5bc96b78_aa979708
UUID: fbf77fdf_63988238
Bytes: 111
I read them but I don't care that much.
I also don't think it less readable but I'll change it if you think so.

203:7-203:11
Wed Nov 25 17:40:33 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7bb2aff7_fa07a59a
Bytes: 37
const DexFile* (not that long, sorry)

203:7-203:11
Fri Nov 27 16:26:32 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7bb2aff7_fa07a59a
UUID: fb921f65_b1fe181e
Bytes: 86
i'll pass on that. I value consistency more, and all iterations in this file use auto.

219
Wed Nov 25 17:40:33 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9b7da3ef_eeb7dba0
Bytes: 50
Some comments inside this loop would not go amiss.

219
Fri Nov 27 16:26:32 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 9b7da3ef_eeb7dba0
UUID: 7bb2aff7_80ad5cad
Bytes: 4
Done

223:6-223:22
Wed Nov 25 17:40:33 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5bc96b78_dc24a58f
Bytes: 18
Just return false?

223:6-223:22
Fri Nov 27 16:26:32 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5bc96b78_dc24a58f
UUID: 5b77ab0e_ef5b515f
Bytes: 4
Done

238:2-238:17
Wed Nov 25 17:40:33 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3bc4b760_b827f591
Bytes: 11
return true

238:2-238:17
Fri Nov 27 16:26:32 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3bc4b760_b827f591
UUID: fbbdbfca_5c6df19a
Bytes: 4
Done

248:23-248:30
Thu Nov 26 11:23:27 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5b77ab0e_0c299b79
Bytes: 6
appear

248:23-248:30
Fri Nov 27 16:26:32 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5b77ab0e_0c299b79
UUID: fbbdbfca_7c72ad7f
Bytes: 4
Done

249:72-249:73
Thu Nov 26 11:23:27 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9b7da3ef_8e865f82
Bytes: 30
no colon or no inverted commas

249:44-249:47
Thu Nov 26 11:23:27 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7b80ef13_8abe4bef
Bytes: 4
with

249:44-249:47
Fri Nov 27 16:26:32 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7b80ef13_8abe4bef
UUID: 9b7da3ef_514a4659
Bytes: 4
Done

249:72-249:73
Fri Nov 27 16:26:32 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 9b7da3ef_8e865f82
UUID: fbbdbfca_fc7ddd49
Bytes: 4
Done

251
Thu Nov 26 11:23:27 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7b80ef13_aabb0ffe
Bytes: 49
shouldn't you also insert into the set somewhere?

251
Fri Nov 27 16:26:32 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7b80ef13_aabb0ffe
UUID: 9b7da3ef_714f4a68
Bytes: 4
Done

263:0-263:19
Thu Nov 26 11:23:27 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9b7da3ef_0ed8afa2
Bytes: 229
Jesus, is this 1985? Why don't you use C++ streams? What this whole loop does is:

  while (std::getline(instream, line)) {
    if (!ProcessLine(line)) {
      success = false;
      break;
    }
  }
  success &= instream.good();

263:0-263:19
Fri Nov 27 16:26:32 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 9b7da3ef_0ed8afa2
UUID: 7b80ef13_cd805d67
Bytes: 351
as we discussed offline, you're working at a runtime system, you should be prepared to get your hands dirty :)

- streams don't support exclusive locking
- streams can't be constructed from FDs (with standard libraries).
- your "newline" interpretation is wrong. "newline" is merely a separator. You'll need to code similar stuff over streams as well.

File: runtime/jit/offline_profiling_info.h

59:58-59:60
Wed Nov 25 17:40:33 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7b80ef13_aa55cfd1
Bytes: 2
by

59:58-59:60
Fri Nov 27 16:26:32 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7b80ef13_aa55cfd1
UUID: 7b80ef13_2d78195e
Bytes: 4
Done

69:15-69:18
Wed Nov 25 17:40:33 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: fb921f65_2e6ac795
Bytes: 3
all

69:15-69:18
Fri Nov 27 16:26:32 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: fb921f65_2e6ac795
UUID: 7b80ef13_4d6d4d9b
Bytes: 28
i think they are equivalent.

83
Wed Nov 25 17:40:33 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7bb2aff7_1a1d39f4
Bytes: 16
two empty lines?

83
Fri Nov 27 16:26:32 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7bb2aff7_1a1d39f4
UUID: 9b7da3ef_f165faf0
Bytes: 4
Done

85:18-85:28
Wed Nov 25 17:40:33 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3bc4b760_f8088d04
Bytes: 10
MethodIdxs

85:18-85:28
Fri Nov 27 16:26:32 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3bc4b760_f8088d04
UUID: fb921f65_71167028
Bytes: 8
renamed.

87:13-87:14
Wed Nov 25 17:40:33 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3bc4b760_381cc546
Bytes: 4
drop

87:13-87:14
Fri Nov 27 16:26:32 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3bc4b760_381cc546
UUID: fbbdbfca_dca74128
Bytes: 4
Done

88:8-88:28
Wed Nov 25 17:40:33 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5b77ab0e_2c2817c4
Bytes: 86
DexFileToProfileInfoMap to stay consistent? Don't really care  so feel free to ignore.

88:8-88:28
Fri Nov 27 16:26:32 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5b77ab0e_2c2817c4
UUID: 5b77ab0e_0f718dec
Bytes: 5
Done.

