Revision: c127cd776b6a12742962d2ecd75e35a49a1eb0d3
Patch-set: 2
File: compiler/optimizing/intrinsics_x86.cc

1771:6-1771:36
Fri Aug 14 03:15:35 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 043dc1ed_08ca2bb2
Bytes: 256
Isn't this incorrect wrt/ int vs long?

I checked the test (082), and I think an issue is that we don't test any non-zero constant. Please add test coverage and show whether this is right (I don't think so, you'd count too many zeros for is_long == false).

1771:6-1771:36
Fri Aug 14 03:16:51 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 043dc1ed_08ca2bb2
UUID: e4aeed64_4cb67379
Bytes: 28
Also: use bit_utils.h:CLZ...

1779:4-1784:5
Fri Aug 14 03:29:46 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 043dc1ed_68949798
Bytes: 358
Hm, spec says the result is undefined if the source operand has value 0. Doesn't that mean you'll have to have a check for that (in case it's not a constant but still zero), i.e., check zf after?

(Guess this also requires some test coverage.)

Also, ever want to add optional support for lzcnt which would take care of this (including the correction below)?

