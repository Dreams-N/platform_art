Revision: c127cd776b6a12742962d2ecd75e35a49a1eb0d3
Patch-set: 2
File: compiler/optimizing/intrinsics_x86.cc

1771:6-1771:36
Fri Aug 14 03:15:35 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 043dc1ed_08ca2bb2
Bytes: 256
Isn't this incorrect wrt/ int vs long?

I checked the test (082), and I think an issue is that we don't test any non-zero constant. Please add test coverage and show whether this is right (I don't think so, you'd count too many zeros for is_long == false).

1771:6-1771:36
Fri Aug 14 03:16:51 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 043dc1ed_08ca2bb2
UUID: e4aeed64_4cb67379
Bytes: 28
Also: use bit_utils.h:CLZ...

1771:6-1771:36
Fri Aug 14 15:46:23 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e4aeed64_4cb67379
UUID: e4aeed64_8fe69d22
Bytes: 4
Done

1779:4-1784:5
Fri Aug 14 03:29:46 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 043dc1ed_68949798
Bytes: 358
Hm, spec says the result is undefined if the source operand has value 0. Doesn't that mean you'll have to have a check for that (in case it's not a constant but still zero), i.e., check zf after?

(Guess this also requires some test coverage.)

Also, ever want to add optional support for lzcnt which would take care of this (including the correction below)?

1779:4-1784:5
Fri Aug 14 13:14:27 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 043dc1ed_68949798
UUID: c43e49ec_236c6e26
Bytes: 370
I didn't want to implement lzcnt, as I don't believe our target machines support it, so it wasn't worth adding as a feature at this time.  It could be added later.

I got the sequences from GCC compiled code for int and long in 32 and 64 bit.  It surprised me as well, but I guess the undefined behaviour actually gives a reasonable result that can be used with the xor.

1779:4-1784:5
Fri Aug 14 15:09:12 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: c43e49ec_236c6e26
UUID: a4fb1585_ac50632b
Bytes: 171
No, the difference is that the __builtin_clz spec says that the result is undefined if you give zero. Java, however, clearly specifies 32 as the return value in this case.

1779:4-1784:5
Fri Aug 14 15:46:23 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a4fb1585_ac50632b
UUID: 64591d73_c3501c2d
Bytes: 4
Done

1809:2-1809:23
Fri Aug 14 10:37:46 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a466b534_f415184a
Bytes: 30
out is undefined if ZF is set.

1809:2-1809:23
Fri Aug 14 15:46:23 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a466b534_f415184a
UUID: 04b861a5_90f0fa05
Bytes: 4
Done

1810:0-1811:30
Fri Aug 14 10:37:46 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c4672930_b50ba02f
Bytes: 28
__ xorl(out, Immediate(63));

1810:0-1811:30
Fri Aug 14 15:46:23 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: c4672930_b50ba02f
UUID: a4a8755c_4db67179
Bytes: 64
No, we want 32 + CLZ(low). That is not the same as CLZ(low) ^ 63

File: compiler/optimizing/intrinsics_x86_64.cc

1612:7-1612:13
Fri Aug 14 10:37:46 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e4f18da3_0e5c0bf8
Bytes: 8
Evaluate

1612:7-1612:13
Fri Aug 14 15:46:23 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e4f18da3_0e5c0bf8
UUID: 243ac5f6_46126618
Bytes: 4
Done

1617:14-1617:35
Fri Aug 14 10:37:46 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a466b534_94082434
Bytes: 79
is_long ? CLZ(static_cast<uint64_t>(value)) : CLZ(static_cast<uint32_t>(value))

1617:14-1617:35
Fri Aug 14 15:46:23 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a466b534_94082434
UUID: 243ac5f6_26176208
Bytes: 4
Done

1638:0-1639:47
Fri Aug 14 10:37:46 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c4672930_7502a818
Bytes: 143
You need to do much more than this. The manual says

  IF SRC = 0
     THEN
         ZF <- 1
         DEST is undefined;
     ELSE
         ...

1638:0-1639:47
Fri Aug 14 15:46:23 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: c4672930_7502a818
UUID: e4aeed64_0f25cde2
Bytes: 4
Done

File: compiler/utils/x86_64/assembler_x86_64_test.cc

1152:80-1152:84
Fri Aug 14 10:37:46 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 4401793c_31f85089
Bytes: 4
bsrq

