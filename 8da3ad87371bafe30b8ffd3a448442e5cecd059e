Revision: 8da3ad87371bafe30b8ffd3a448442e5cecd059e
Patch-set: 11
File: runtime/entrypoints/quick/quick_deoptimization_entrypoints.cc

61:26-61:31
Mon Sep 28 08:28:53 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 8ec8f176_d6572463
Bytes: 78
in what sense? By saying so, it sounds like we're not doing something correct.

61:36-61:39
Mon Sep 28 08:28:53 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: eececd75_0496b837
Bytes: 6
cannot

61:36-61:39
Mon Sep 28 15:26:49 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: eececd75_0496b837
UUID: 2e470569_af536705
Bytes: 320
Smashing caller-saves helps down the line if something goes wrong and somebody uses registers they shouldn't. However, some of the registers we must set are caller-saves - so we need to turn of smashing (or know exactly which ones we should smash). This is just to note *why* it's turned off, and that it has a downside.

61:36-61:39
Mon Sep 28 15:34:09 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2e470569_af536705
UUID: 6ec3bd5a_d802f115
Bytes: 101
Then maybe consider rephrasing the comment? I don't understand why there is a risk. Who's "somebody"?

61:36-61:39
Mon Sep 28 20:08:53 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6ec3bd5a_d802f115
UUID: 4e4c398b_b524df8d
Bytes: 101
Basically we don't poison registers anymore, and so incorrect use down the line wouldn't be detected.

File: runtime/entrypoints/quick/quick_trampoline_entrypoints.cc

669:0-676:79
Mon Sep 28 08:28:53 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 4ec27958_b7bd42ec
Bytes: 18
if (kIsDebugBuild)

669:0-676:79
Mon Sep 28 15:26:49 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 4ec27958_b7bd42ec
UUID: 6e4d7d85_3df69a08
Bytes: 69
You really feel that check isn't important enough to do it generally?

669:0-676:79
Mon Sep 28 15:34:09 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6e4d7d85_3df69a08
UUID: 4ec27958_97aa0654
Bytes: 74
You said it's a sanity check, why should we pay for it everytime we deopt?

669:0-676:79
Mon Sep 28 20:08:53 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 4ec27958_97aa0654
UUID: ce582944_be9ba62f
Bytes: 4
Done

688:7-689:39
Mon Sep 28 08:28:53 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 4ec27958_d7cabe86
Bytes: 26
Why is that not addressed?

688:7-689:39
Mon Sep 28 15:26:49 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 4ec27958_d7cabe86
UUID: 2e2e2591_aa291a4f
Bytes: 21
It's a stale comment.

File: runtime/quick_exception_handler.cc

519:87-519:90
Mon Sep 28 08:28:53 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0e9a4178_55507ecf
Bytes: 8
why etc?

519:87-519:90
Mon Sep 28 15:26:49 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0e9a4178_55507ecf
UUID: 2e470569_8f58ab22
Bytes: 108
Stale, but future-proof.

(This had cases for the arm and mips fixup, before they went into separate CLs...)

519:87-519:90
Mon Sep 28 15:34:09 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2e470569_8f58ab22
UUID: ce074951_53923688
Bytes: 82
Ah I see. Maybe then say. For example, this is to get the LR right on x86 and x64.

519:87-519:90
Mon Sep 28 20:08:53 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ce074951_53923688
UUID: ae5bf53d_fc75a390
Bytes: 4
Done

617:22-617:23
Mon Sep 28 08:28:53 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0e9a4178_755582be
Bytes: 96
why this new terminology? What do you loose from printing "transition", "runtime", "quick" ... ?

617:22-617:23
Mon Sep 28 15:26:49 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0e9a4178_755582be
UUID: 2e2e2591_8a565ecd
Bytes: 240
I wanted a short and concise form. So it looks like this:

 N
 Qi Main.inlined()
 Q  Main.foo()
 N
 S  Main.interpreted()
 ...

I felt it was better to keep the second column for actual names. It reads well enough this way, don't you think?

617:22-617:23
Mon Sep 28 15:34:09 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2e2e2591_8a565ecd
UUID: 0e9a4178_b840c16f
Bytes: 174
I know it's just debug info, but it will still be obscure for developers doing -verbose:deopt. I would tend to say concise is probably not worth the confusion, but your call.

617:22-617:23
Mon Sep 28 20:08:53 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0e9a4178_b840c16f
UUID: 4e4c398b_f514970a
Bytes: 151
The way it is means it's easier to align and doesn't waste space (which helps keeping things on one line in the logs).

I added "<transition>," though.

File: runtime/thread.cc

256:0-257:39
Mon Sep 28 08:28:53 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ceae6993_1e0c4d48
Bytes: 24
Shound't those be CHECK?

256:0-257:39
Mon Sep 28 15:26:49 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ceae6993_1e0c4d48
UUID: 8e52b121_90e579e2
Bytes: 63
They were DCHECKs before, and Seb and Mingyao agreed on that...

256:0-257:39
Mon Sep 28 15:34:09 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 8e52b121_90e579e2
UUID: eececd75_c414d00b
Bytes: 109
Yeah, but we won't abort on error then in release builds. Unless abort_on_error is only true on debug builds?

256:0-257:39
Mon Sep 28 20:08:53 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: eececd75_c414d00b
UUID: 0e5fa128_c00e77fa
Bytes: 51
I see your issue. Should I call it dabort_on_error?

256:0-257:39
Mon Sep 28 22:11:51 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0e5fa128_c00e77fa
UUID: eeb7ade1_bc460d1a
Bytes: 63
How about calling it must_be_present? Makes the intent clearer.

