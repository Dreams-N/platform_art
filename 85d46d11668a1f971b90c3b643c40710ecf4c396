Revision: 85d46d11668a1f971b90c3b643c40710ecf4c396
Patch-set: 9
File: compiler/utils/arm/assembler_arm32.cc

215:2-215:20
Thu Nov 13 16:58:45 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3ae9e3cf_5fab2f6b
Bytes: 131
I don't think we need to be that granular but it's up to you. (i.e. CHECK(0 <= lsb && lsb <= 31) << lsb)

same in the other places.

215:2-215:20
Thu Nov 13 17:33:00 2014 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3ae9e3cf_5fab2f6b
UUID: 3ae9e3cf_bfb193d6
Bytes: 4
Done

219:11-219:22
Thu Nov 13 16:58:45 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: fab4abdf_5d196f1b
Bytes: 75
I'd just inline this. Looks a bit funky to me :)

same in the other places.

219:11-219:22
Thu Nov 13 17:33:00 2014 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: fab4abdf_5d196f1b
UUID: 1ae6dfff_de766144
Bytes: 211
I prefer the way it is now: is makes it explicit that the values encoded in the instruction is not the one that was passed to the method (which is closer to the explanations given in the ARM specification IMHO).

