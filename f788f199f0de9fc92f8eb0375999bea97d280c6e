Revision: f788f199f0de9fc92f8eb0375999bea97d280c6e
Patch-set: 2
File: compiler/driver/compiler_driver.cc

1825:14-1825:34
Wed Nov 26 09:53:54 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1fa5f182_269f98c1
Bytes: 205
I believe we won't use the output file for on-device compilation, will we? I think we'd just use the tool on the host to increase pre-initialization coverage. In that case, the test below should be enough.

1825:14-1825:34
Wed Nov 26 10:07:27 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1fa5f182_269f98c1
UUID: 9f448158_046ca476
Bytes: 116
Yeah, we should definitely not do it, so it's not about lower-end, it's about that we don't want to do it on device.

1825:14-1825:34
Wed Nov 26 10:12:57 2014 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 9f448158_046ca476
UUID: 3f663537_779d8a6f
Bytes: 407
Yes, the intent is to have as small an impact when there's no output requested. But even just getting the pointer is a sequence of loads. And I can't change the signature of this method, as it's set for parallel compilation. That's why I went with debug-build. If you prefer to remove that, that's fine with me.

I don't think we have a host flag, do we? (It would be unfair to key it off being x86(-64)...)

1825:14-1825:34
Wed Nov 26 10:25:06 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3f663537_779d8a6f
UUID: 1fa5f182_c9dfb565
Bytes: 166
I wouldn't worry about the sequence of loads. This is in !success case which is not what we're optimizing for. So IMO, the file_log != nullptr is a good enough check.

File: compiler/driver/compiler_options.h

253:2-253:15
Wed Nov 26 09:53:54 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9f448158_840e54d7
Bytes: 19
std::ostream const*

File: dex2oat/dex2oat.cc

707:35-707:63
Wed Nov 26 09:53:54 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1fa5f182_469094b2
Bytes: 103
What if the file can't be created (wrong path, no permission, ...)? We should at least print a warning.

File: tools/analyze-init-failures.py

3:16-3:20
Wed Nov 26 10:07:27 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9f448158_e4688064
Bytes: 4
2014

17:0-17:69
Wed Nov 26 09:53:54 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9f448158_042b8421
Bytes: 43
This comment is out-of-sync with this file.

