Revision: ac7055f4b9eff5304c889f8826ad0ced08219933
Patch-set: 1
File: compiler/dex/quick/x86/int_x86.cc

197
Fri Jan 24 20:36:03 2014 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 523e72eb_e27f2835
Bytes: 190
I don't think we should have this special-case here. If we want to optimize the true_val==false_val case, we should change the kMirOpSelect to CONST on the MIR level long before we get here.

197
Fri Jan 24 21:01:24 2014 +0000
Author: Razvan A Lupusoru <1013855@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 523e72eb_e27f2835
UUID: f265a62a_e9c7fd7d
Bytes: 207
In this instance we get it almost for free because there are overlapping cases. But yes I agree with you that the middle-end should optimize this case. Until that is done, it should be okay to leave this in.

197
Fri Jan 24 21:13:33 2014 +0000
Author: Razvan A Lupusoru <1013855@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 523e72eb_e27f2835
UUID: f265a62a_29e61506
Bytes: 117
Let me look at making the change in the ME pass and remove this special case which should never really happen anyway.

197
Fri Jan 24 21:32:28 2014 +0000
Author: Bill Buzbee <1001578@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f265a62a_29e61506
UUID: 92bf0a8c_86b43b01
Bytes: 308
Agreed - this kind of thing should be handled at the MIR level.  Also, I'm a little hesitant to add code for which there is no way to test.  Until inlining is active, we'll never see this case, and if you do add code at the MIR level we cannot test it.  Might be better to add a TODO at the appropriate spot.

197
Fri Jan 24 21:59:09 2014 +0000
Author: Razvan A Lupusoru <1013855@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 92bf0a8c_86b43b01
UUID: 9202aa40_112eeca6
Bytes: 266
We could always test it by adding the infrastructure to load passes like modules. This would allow us to create a "pass" that would make the CFG exactly what we want to test.

Anyway, until we have that, would you prefer that I remove the code I added to patchset 2?

197
Fri Jan 24 22:04:41 2014 +0000
Author: Bill Buzbee <1001578@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 9202aa40_112eeca6
UUID: 9202aa40_f13d28d0
Bytes: 48
Yes, I'd prefer it replaced with a TODO comment.

197
Fri Jan 24 23:12:05 2014 +0000
Author: Razvan A Lupusoru <1013855@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 9202aa40_f13d28d0
UUID: b2fdee74_b21d60c7
Bytes: 4
Done

235:10-235:19
Fri Jan 24 21:01:24 2014 +0000
Author: Razvan A Lupusoru <1013855@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 92bf0a8c_a607ff34
Bytes: 43
Should I free temp after I am done with it?

235:10-235:19
Fri Jan 24 21:32:28 2014 +0000
Author: Bill Buzbee <1001578@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 92bf0a8c_a607ff34
UUID: 92bf0a8c_26a54fc5
Bytes: 236
As a matter of general cleanliness, you should always free any temps you allocate at the point they are no longer needed.  As a practical matter, though, all temps are automatically freed at the end of processing for each Dalvik opcode.

