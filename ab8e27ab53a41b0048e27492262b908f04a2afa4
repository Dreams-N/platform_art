Revision: ab8e27ab53a41b0048e27492262b908f04a2afa4
Patch-set: 3
File: compiler/image_test.cc

50:0-51:54
Tue Dec 08 19:04:58 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c0b808d7_931db4f2
Bytes: 111
Why remove the TEST_DISABLED_FOR_NON_PIC_COMPILING_WITH_OPTIMIZING and hardcode to Quick? Is this future proof?

250:18-250:32
Tue Dec 08 19:04:58 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a0af948e_e72d4cd4
Bytes: 32
How about WriteReadUncompressed?

File: compiler/image_writer.cc

241:28-241:57
Tue Dec 08 19:04:58 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 8041b0d9_1fed63e2
Bytes: 34
Error-check the result of the new?

282:0-285:3
Tue Dec 08 19:04:58 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 00f860d1_4307c65f
Bytes: 46
Any check we could do for the compressed case?

294:0-296:3
Tue Dec 08 19:04:58 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 8041b0d9_3f014749
Bytes: 46
Any check we could do for the compressed case?

File: dex2oat/dex2oat.cc

211:32-211:37
Tue Dec 08 19:04:58 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 00f860d1_a3bd5ad6
Bytes: 28
Maybe store -> uncompressed?

636:21-636:37
Tue Dec 08 19:04:58 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e0342c68_4201d247
Bytes: 21
unknown image format?

1840:49-1840:82
Tue Dec 08 19:04:58 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 8041b0d9_7fd58f0b
Bytes: 78
Set this in the constructor init list to be consistent with the other members?

File: runtime/gc/space/image_space.cc

680:28-680:39
Tue Dec 08 19:04:58 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 40fed8bd_c5a17abc
Bytes: 12
or equal to?

701:85-701:95
Tue Dec 08 19:04:58 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 60c91c79_a5834873
Bytes: 41
This isn't necessarily compressed, is it?

701:0-706:42
Tue Dec 08 19:04:58 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c012c8d7_694d05c0
Bytes: 120
Do really we need this extra alignment code here?

Any reason the bitmap ImageSection object can't have the exact range?

715:2-715:26
Tue Dec 08 19:04:58 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a00954b1_c88f4f13
Bytes: 7
Remove?

736:34-737:44
Tue Dec 08 19:04:58 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 80b290f4_8b1d7df2
Bytes: 51
Are the indentations of these two lines off by one?

740:19-740:30
Tue Dec 08 19:04:58 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 60dafc65_ee71ffea
Bytes: 13
write_offset?

743:35-743:83
Tue Dec 08 19:04:58 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c012c8d7_a9941d24
Bytes: 28
Add 'image' in this message?

750:19-750:37
Tue Dec 08 19:04:58 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e0342c68_22bb6ee7
Bytes: 51
decompressed_size to match the error message below?

755:6-755:15
Tue Dec 08 19:04:58 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 60dafc65_ae6bf7fa
Bytes: 22
Should this be a VLOG?

File: runtime/image.h

82:4-82:21
Tue Dec 08 19:04:58 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 40d5f831_ed15858a
Bytes: 71
Consider renaming "store" to "uncompressed" as in kStorageUncompressed?

274:5-274:16
Tue Dec 08 19:04:58 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c012c8d7_09cfa97f
Bytes: 139
"Stored size" isn't the most intuitive name to me. Consider any alternative? It includes the managed heap space, fields and methods, right?

