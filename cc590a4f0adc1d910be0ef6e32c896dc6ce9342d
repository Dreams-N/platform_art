Revision: cc590a4f0adc1d910be0ef6e32c896dc6ce9342d
Patch-set: 7
File: compiler/optimizing/bounds_check_elimination.cc

338:0-338:39
Mon Jun 08 08:59:42 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 99ce74a2_94dbc416
Bytes: 145
Having this DCHECK after the if here looks as if we're not sure what is going on. If you want to be on the safe side, I'd just remove the DCHECK.

338:0-338:39
Wed Jun 10 14:32:24 2015 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 99ce74a2_94dbc416
UUID: d9d9cc70_d72a5686
Bytes: 19
Ok, I'll remove it.

429:59-429:62
Mon Jun 08 08:59:42 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 99ce74a2_74c14821
Bytes: 22
woot, python style :-)

429:59-429:62
Wed Jun 10 14:32:24 2015 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 99ce74a2_74c14821
UUID: 796b8031_d82c9927
Bytes: 52
Changed to &&. Not even aware of this C++ feature :)

522:15-522:35
Mon Jun 08 08:59:42 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b9cfb89d_75db88e6
Bytes: 40
Isn't that GetLoopHeaderSuccessorInLoop?

522:15-522:35
Wed Jun 10 14:32:24 2015 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b9cfb89d_75db88e6
UUID: 796b8031_f84075b4
Bytes: 12
Will rename.

536:0-536:62
Mon Jun 08 08:59:42 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 79c9c09b_5392e460
Bytes: 50
That's redundant with the check above, I'd remove.

536:0-536:62
Wed Jun 10 14:32:24 2015 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 79c9c09b_5392e460
UUID: d9d9cc70_97a96e6a
Bytes: 134
The above check makes sure not both branches are in loop. This check makes sure at least one branch is in loop. So it's not redundant.

537:8-537:73
Mon Jun 08 08:59:42 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 79c9c09b_339f6869
Bytes: 24
false_successor_in_loop?

537:8-537:73
Wed Jun 10 14:32:24 2015 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 79c9c09b_339f6869
UUID: d9d9cc70_d74016eb
Bytes: 28
Yeah, it's redundant. Fixed.

541:13-541:73
Mon Jun 08 08:59:42 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 99ce74a2_54be4cb1
Bytes: 21
ditto for redundancy.

541:13-541:73
Wed Jun 10 14:32:24 2015 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 99ce74a2_54be4cb1
UUID: d9d9cc70_f73b128c
Bytes: 8
Removed.

536:0-543:31
Mon Jun 08 08:59:42 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b9cfb89d_7544a819
Bytes: 102
Change this to:

return false_successor_in_loop ? h_if->IfFalseSccessor() : h_if->IfTrueSccessor();

?

536:0-543:31
Wed Jun 10 14:32:24 2015 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b9cfb89d_7544a819
UUID: d9d9cc70_973a8e85
Bytes: 4
Done

738:0-740:54
Mon Jun 08 08:59:42 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 99ce74a2_f4f3189b
Bytes: 9
One line?

738:0-740:54
Wed Jun 10 14:32:24 2015 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 99ce74a2_f4f3189b
UUID: d9d9cc70_5789c6a8
Bytes: 4
Done

798:28-798:41
Mon Jun 08 08:59:42 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 99ce74a2_d4f81c7a
Bytes: 12
transforming

798:28-798:41
Wed Jun 10 14:32:24 2015 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 99ce74a2_d4f81c7a
UUID: d9d9cc70_5720a628
Bytes: 4
Done

864:6-864:12
Mon Jun 08 08:59:42 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 79c9c09b_139c6c70
Bytes: 9
DCHECK_EQ

896:73-896:79
Mon Jun 08 08:59:42 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b9cfb89d_353e3098
Bytes: 6
in the

896:73-896:79
Wed Jun 10 14:32:24 2015 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b9cfb89d_353e3098
UUID: d9ab8c9c_5b7e7127
Bytes: 4
Done

901:9-901:13
Mon Jun 08 08:59:42 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b9cfb89d_153b34a8
Bytes: 17
have -> use the ?

901:9-901:13
Wed Jun 10 14:32:24 2015 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b9cfb89d_153b34a8
UUID: 796b8031_8cc6668a
Bytes: 4
Done

934:0-941:5
Mon Jun 08 08:59:42 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b9cfb89d_f5c6780d
Bytes: 70
Would it be simpler to just DCHECK(CanAddDeoptimzationArrayLength()) ?

934:0-941:5
Wed Jun 10 17:01:26 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b9cfb89d_f5c6780d
UUID: 99ce74a2_8ecbaf93
Bytes: 26
Did you skip this comment?

956:33-956:38
Mon Jun 08 08:59:42 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 79c9c09b_d38cb43f
Bytes: 9
the array

977:0-977:83
Mon Jun 08 08:59:42 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 79c9c09b_737cc098
Bytes: 68
Instead of creating a new one, could you just move the existing one?

977:0-977:83
Wed Jun 10 14:32:24 2015 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 79c9c09b_737cc098
UUID: d9ab8c9c_5bef9128
Bytes: 288
The uses will be on the phi which takes new_array_length as one input. It's confusing if it's moved to a non-dominating block. It's not necessary if the transformation isn't done (such as if we can prove the loop body is entered), but it's a little more code and probably won't save much.

977:0-977:83
Wed Jun 10 17:01:26 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d9ab8c9c_5bef9128
UUID: b9cfb89d_2f6ed5f4
Bytes: 36
Sounds good, thanks for the details.

998:19-998:41
Mon Jun 08 08:59:42 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 99ce74a2_74e828a3
Bytes: 19
Can't that be null?

998:19-998:41
Wed Jun 10 14:32:24 2015 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 99ce74a2_74e828a3
UUID: d9d9cc70_f75f926b
Bytes: 111
Shouldn't at this stage since we abort the deopt-based approach if the somehow both successors are in the loop.

1011:0-1011:63
Mon Jun 08 08:59:42 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 79c9c09b_5379c4a6
Bytes: 59
Move this to the if? And do the if test based on 'offset' ?

1011:0-1011:63
Wed Jun 10 14:32:24 2015 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 79c9c09b_5379c4a6
UUID: 796b8031_cc4a1e76
Bytes: 16
Good one. Fixed.

1016:0-1017:53
Mon Jun 08 08:59:42 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b9cfb89d_55d88ce7
Bytes: 9
One line?

1016:0-1017:53
Wed Jun 10 14:32:24 2015 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b9cfb89d_55d88ce7
UUID: d9ab8c9c_260a685b
Bytes: 42
It's close. I renamed deoptimize to deopt.

1019:6-1019:85
Mon Jun 08 08:59:42 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 99ce74a2_54e52cc7
Bytes: 26
Move this in the if above?

1019:6-1019:85
Wed Jun 10 14:32:24 2015 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 99ce74a2_54e52cc7
UUID: 796b8031_ec9efa6a
Bytes: 4
Done

1035:0-1036:62
Mon Jun 08 08:59:42 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 99ce74a2_34e2b0c1
Bytes: 34
Move this to GetFoundArrayLength ?

1035:0-1036:62
Wed Jun 10 14:32:24 2015 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 99ce74a2_34e2b0c1
UUID: d9ab8c9c_e6380000
Bytes: 162
Actually GetFoundArrayLength() returns HArrayLength* so this isn't needed. At one point in my change, GetFoundArrayLength() returns HInstruction* but not anymore.

1072:0-1094:7
Mon Jun 08 08:59:42 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 99ce74a2_74af086c
Bytes: 172
Isn't the only difference with the code above just two or three variables? (roughly the first two parameters of method methods).

Would it make sense to factorize the code?

1072:0-1094:7
Wed Jun 10 14:32:24 2015 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 99ce74a2_74af086c
UUID: 796b8031_8f5f386a
Bytes: 4
Done

File: compiler/optimizing/nodes.h

3374:0-3375:62
Mon Jun 08 08:59:42 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 79c9c09b_d3039414
Bytes: 29
Ins't that in another change?

3374:0-3375:62
Wed Jun 10 14:32:24 2015 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 79c9c09b_d3039414
UUID: b9d41838_dcf8397a
Bytes: 21
Removed from this CL.

