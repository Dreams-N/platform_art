Revision: 82c2b4a3de724c050d23fb48c2070f3f806a0f24
Patch-set: 3
File: runtime/oat_file_manager.cc

307:0-310:65
Wed Feb 03 20:11:17 2016 +0000
Author: Richard Uhler <1057373@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5116b490_6eb13eb3
Bytes: 99
The oat_location is given explicitly here, so IsAllowedToUpdateOatFiles will always be true, right?

307:0-310:65
Thu Feb 04 13:00:21 2016 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5116b490_6eb13eb3
UUID: d1b8e4d6_9c33099b
Bytes: 33
this is null for PathClassLoader.

307:0-310:65
Thu Feb 04 21:24:21 2016 +0000
Author: Richard Uhler <1057373@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d1b8e4d6_9c33099b
UUID: f127a8f2_741ab5fc
Bytes: 11
Yes. I see.

325:0-329:3
Thu Feb 04 21:24:21 2016 +0000
Author: Richard Uhler <1057373@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 11f7dc9a_fe8e80e4
Bytes: 233
What do you think of changing this to:
 
 if (oat_location != nullptr) {
    if (!oat_file_assistant.MakeUpToDate(/*out*/&error_msg)) {
          LOG(WARNING) << error_msg;
    }
 }

And no oat file assistant changes would be needed?

325:0-329:3
Fri Feb 05 21:53:55 2016 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 11f7dc9a_fe8e80e4
UUID: f1d7a87c_6ab6d7fa
Bytes: 425
That was the initial approach but then I reason more about it and I wanted to remove the assumptions we make in the assistant. To me, it doesn't sound right to just assume we can write to those default locations.

If you feel strongly about it, I can have this as an initial version to unblock and discuss more in a refactoring CL after.

Can you think of a case, when it's beneficial to try writing to the default locations?

325:0-329:3
Fri Feb 05 21:55:52 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f1d7a87c_6ab6d7fa
UUID: 315940ea_27a71428
Bytes: 159
Richard is OOO, so I'm taking this over.

Yes, our tests. :-)

An app or application uses a PathClassLoader for the class-path. So that's how you'd get here...

325:0-329:3
Fri Feb 05 22:01:32 2016 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 315940ea_27a71428
UUID: 51c6b4da_e5a156b8
Bytes: 401
What's the goal of our no-prebuild tests?

I always thought they validate that we run correctly if the app is not precompiled. If that's the case the CL should not change anything. We're still validating the same "default" thing.

If no-prebuild was meant to test that we can compile on the fly at runtime, well, that's a different story I guess. And I would propose to make that explicit with a flag.

