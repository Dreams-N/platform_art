Revision: 4119f8b0aa5f25e38f49aa34b521dbe0cdae156c
Patch-set: 2
File: compiler/optimizing/instruction_simplifier.cc

1844:16-1844:21
Mon Jun 20 12:53:04 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 692a00c1_2c6e3bb6
Bytes: 71
I find these const a bit of noise when reading the code. I'd drop them.

1844:16-1844:21
Tue Jun 21 10:08:02 2016 +0000
Author: Anton Kirilov <1084448@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 692a00c1_2c6e3bb6
UUID: e92b5015_d59efc1e
Bytes: 4
Done

1847:2-1847:14
Mon Jun 20 12:53:04 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 692a00c1_ec442334
Bytes: 10
HConstant?

1847:2-1847:14
Tue Jun 21 10:08:02 2016 +0000
Author: Anton Kirilov <1084448@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 692a00c1_ec442334
UUID: e92b5015_7505a83d
Bytes: 4
Done

1856:2-1856:3
Mon Jun 20 12:53:04 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 692a00c1_cc415f22
Bytes: 53
I'd prefer an:

} else {
  // comment
  return false;

1856:2-1856:3
Tue Jun 21 10:08:02 2016 +0000
Author: Anton Kirilov <1084448@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 692a00c1_cc415f22
UUID: c92a0c14_d49efc1e
Bytes: 4
Done

1892:0-1903:1
Mon Jun 20 12:53:04 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 692a00c1_6c6833a7
Bytes: 26
High-level comment please.

1892:0-1903:1
Tue Jun 21 10:08:02 2016 +0000
Author: Anton Kirilov <1084448@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 692a00c1_6c6833a7
UUID: 4917fcd8_781921c9
Bytes: 4
Done

1907
Mon Jun 20 12:53:04 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 692a00c1_0c73779a
Bytes: 10
extra line

1907
Tue Jun 21 10:08:02 2016 +0000
Author: Anton Kirilov <1084448@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 692a00c1_0c73779a
UUID: 291ac803_b74ee87c
Bytes: 4
Done

1905:0-1909:1
Mon Jun 20 12:53:04 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 692a00c1_4c6d6fb5
Bytes: 26
High-level comment please.

1905:0-1909:1
Tue Jun 21 10:08:02 2016 +0000
Author: Anton Kirilov <1084448@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 692a00c1_4c6d6fb5
UUID: c9512caa_5c4e9dae
Bytes: 4
Done

File: test/458-checker-instruction-simplification/smali/SmaliTests.smali

262:22-262:28
Mon Jun 20 12:53:04 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 692a00c1_8c5e47f9
Bytes: 24
Also add an AddAdd test?

262:22-262:28
Mon Jun 20 13:03:12 2016 +0000
Author: Anton Kirilov <1084448@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 692a00c1_8c5e47f9
UUID: a90f9877_63a9624a
Bytes: 222
The test code in Java provides that. The only reason for the tests implemented in Smali is because I haven't figured out a way to generate a constant subtraction in Java (I always get an addition with a negative constant).

File: test/458-checker-instruction-simplification/src/Main.java

95:0-97:3
Mon Jun 20 12:53:04 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 692a00c1_ec5b8307
Bytes: 27
jack isn't optimizing this?

95:0-97:3
Mon Jun 20 13:03:12 2016 +0000
Author: Anton Kirilov <1084448@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 692a00c1_ec5b8307
UUID: e9da7034_fd6de71a
Bytes: 194
I was using "dx", to be honest. The transformation is applied close to 1000 times for boot.oat, though, and even more if we relax the restriction for only one use that is also non-environmental.

387:13-387:14
Mon Jun 20 12:53:04 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 692a00c1_cc583f0e
Bytes: 5
ditto

