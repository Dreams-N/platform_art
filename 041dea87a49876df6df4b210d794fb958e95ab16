Revision: 041dea87a49876df6df4b210d794fb958e95ab16
Patch-set: 10
File: compiler/optimizing/nodes.h

1160:3-1160:6
Mon Jul 20 14:04:22 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f8d3ee93_67f572f8
Bytes: 97
nit: empty line will do fine here. we don't generate any sort of docs which would make use of <p>

1160:3-1160:6
Mon Jul 20 16:04:01 2015 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f8d3ee93_67f572f8
UUID: b8eed634_26f7dccb
Bytes: 4
Done

1206:14-1206:19
Mon Jul 20 14:04:22 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 38dae6a9_0cf777cb
Bytes: 84
potentially this could lead up to mallformed SideEffects wrt Int/Float alias. right?

1206:14-1206:19
Mon Jul 20 16:04:01 2015 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 38dae6a9_0cf777cb
UUID: f8884ea6_ff6e3f78
Bytes: 178
Not really. You can only construct side effects through the public methods. And anything with an I or F (or J and D) gets automatically the conservative other one attached to it.

1206:14-1206:19
Mon Jul 20 16:37:19 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f8884ea6_ff6e3f78
UUID: 989912fc_dc4c2d48
Bytes: 15
Indeed. Thanks.

1263:10-1263:11
Fri Jul 17 18:40:29 2015 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 987f5221_9594e6c5
Bytes: 144
PTAL: this (hopefully temporary) work-around
      accounts for all I/F J/D aliases in HIR
      while still improving side effects quite a bit!

1264:18-1264:26
Mon Jul 20 14:04:22 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 18d1a28c_0ba92167
Bytes: 184
Could we have this fix up in the constructor? Since this is needed for correctness, it feels safer to be at the place when we actually construct the SideEffect (see the union comment).

1264:18-1264:26
Mon Jul 20 16:04:01 2015 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 18d1a28c_0ba92167
UUID: d8f38a19_848fcafd
Bytes: 215
Well, there is no other way to construct the value then through this method. The code I have now has the advantage that once you fix the aliasing problem, we only have to remove this method, the rest stays the same!

1280:18-1280:27
Mon Jul 20 14:04:22 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 18d1a28c_6b8ffdfe
Bytes: 303
How about naming the other one TypeFlagFixup (or something simillar) and leave this as TypeFlag. Having `2` suffix is a bit ugly :).

Alternatively, you could consider making this a static creator function `SideEffect CreateFromType(...)`. Since it seems that you only use it when creating side effects.

1280:18-1280:27
Mon Jul 20 16:04:01 2015 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 18d1a28c_6b8ffdfe
UUID: d81c6a21_fc2e2119
Bytes: 114
Ok, again the idea was to minimize name changes later, but I will use something with AddAlias to the other method.

1280:18-1280:27
Mon Jul 20 16:37:19 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d81c6a21_fc2e2119
UUID: 58d79a7e_ca88a373
Bytes: 192
I see. My main concern is that it will take a bit to fix this, as it's not trivial after more thinking and having a '2' suffix around for a longer time might obscure the initial justification.

1280:18-1280:27
Mon Jul 20 16:40:03 2015 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 58d79a7e_ca88a373
UUID: d8f38a19_a44da614
Bytes: 351
Fair enough, although I fully trust you to fix this asap!! :-) :-)

I have made the naming more clear. Also, I decided against the DCHECK in the constructor, as it would be rather elaborate (every four access type needs to check that when I is set, F is set, same for D and J and other way around). Basically it would test what is in the method above.

1290:11-1290:22
Mon Jul 20 14:04:22 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 38b10658_b19040a4
Bytes: 67
add a DCHECK here for checking Int/Float, Long/Double dependencies.

1290:11-1290:22
Mon Jul 20 16:04:01 2015 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 38b10658_b19040a4
UUID: 18ea8220_a6393263
Bytes: 4
Done

3964:91-3964:104
Mon Jul 20 14:04:22 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 18d1a28c_ab69f5a5
Bytes: 13
line too long

3964:91-3964:104
Mon Jul 20 16:54:33 2015 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 18d1a28c_ab69f5a5
UUID: 78f8defa_6fad3920
Bytes: 22
Missed that one. Done.

