Revision: d1ad6538c2cb15af0a3044d12a6e816edf080993
Patch-set: 4
File: runtime/debugger.cc

3426:6-3426:25
Fri Mar 06 18:07:25 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f72054e0_a8385b84
Bytes: 78
Unfortunately, I don't think new returns null if OOM, it throws std::bad_alloc

3426:6-3426:25
Fri Mar 06 18:28:51 2015 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f72054e0_a8385b84
UUID: 97155885_255ace5c
Bytes: 212
Right. So the CHECK does not work either I guess. 

What's about using "new (std::nothrow)"? From the spec, it returns nullptr instead of std::bad_alloc. There are other places where we CHECK allocation succeeds.

3426:6-3426:25
Fri Mar 06 20:57:30 2015 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 97155885_255ace5c
UUID: 17b888d3_1ce7f930
Bytes: 83
throwing std::bad_alloc is new behavior so some of the old CHECK's are out of date.

3426:6-3426:25
Mon Mar 09 08:53:02 2015 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 17b888d3_1ce7f930
UUID: 97155885_c5013ab9
Bytes: 246
Agreed. In my next PS, I use "new (std::nothrow)" to ensure a null pointer is returned if the allocation fails. 

We should do a large pass on all allocations made in ART using "new" that may throw a std::bad_alloc instead of returning a nullptr.

File: runtime/thread.h

1045:13-1045:35
Fri Mar 06 18:07:25 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f72054e0_c85dcfc6
Bytes: 81
Doesn't adding this field mean you need to update the constants in asm_support.h?

1045:13-1045:35
Fri Mar 06 18:28:51 2015 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f72054e0_c85dcfc6
UUID: 57f6809e_2bb8d95e
Bytes: 183
That was required when I started this CL. But it was no longer needed after https://android-review.googlesource.com/136081 which removed the is_exception_reported_to_instrumentation_.

1045:13-1045:35
Fri Mar 06 18:33:03 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 57f6809e_2bb8d95e
UUID: 570f6078_c34db694
Bytes: 64
Ah, so there was a padding field then? I guess that makes sense.

