Revision: 3dc316c490079ea051ad8daa0db4e2a581fc060b
Patch-set: 1
File: runtime/art_method.h

768:19-768:27
Thu Jul 21 09:31:19 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ea77c70c_e6c7fe39
Bytes: 244
Do you mind including <cstddef>/<stddef.h>? (Include what you use.)

Off-topic: You rely on the ArtMethod being a standard layout class and it really is. But looking at the data members makes me wonder why are they protected instead of private?

768:19-768:27
Thu Jul 21 15:47:59 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ea77c70c_e6c7fe39
UUID: 2a7abff6_37e302a3
Bytes: 264
Will do.

Re off-topic: We always do, I guess? OFFSETOF_MEMBER and offsetof (the default macro implementation) aren't that much different, and I assume the builtin that Clang seems to use is not worse. Anyways, it's a good point, I'll add a static_assert about it.

768:19-768:27
Thu Jul 21 22:55:59 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2a7abff6_37e302a3
UUID: 2a7abff6_9e3be281
Bytes: 473
Off-topic addendum: 

offsetof is a constant integral expression (and it's also well-defined by the C++ standard, pay no attention to the __builtin_offsetof behind the curtain), OFFSETOF_MEMBER is not (due to the reinterpret cast).

However OFFSETOF_MEMBER works in cases where it's not standard layout (e.g. certain cases with inheritance) because offsetof is undefined in those cases.

AFAIK the code didn't start with C++11 so they simply didn't have access to offsetof.

