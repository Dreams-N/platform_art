Revision: c45d9552fb3e602ccb07fb9b2f8773d28f50a5ed
Patch-set: 8
File: runtime/arch/arm/asm_support_arm.S

33:12-33:20
Mon Oct 20 17:47:27 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1096c0c9_a1701a81
Bytes: 18
generate -> load ?

48:1-48:6
Mon Oct 20 17:47:27 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 309904fa_821f9ef5
Bytes: 33
High level comment on this macro?

62:11-62:16
Mon Oct 20 17:47:27 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 309904fa_026aae5c
Bytes: 153
Explain what's a bound macro and why do you need 3 versions of them (if it's because of unique labels it's not obvious the numbering is the consequence).

74:1-74:6
Mon Oct 20 17:47:27 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f064ccc9_20e08e51
Bytes: 5
ditto

82:1-82:6
Mon Oct 20 17:47:27 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 309904fa_c25fe6ba
Bytes: 5
ditto

File: runtime/arch/x86/quick_entrypoints_x86.S

33:9-33:35
Mon Oct 20 17:47:27 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f064ccc9_20a7ae1b
Bytes: 29
Can this name be macro-ified?

38:24-38:28
Mon Oct 20 17:47:27 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f064ccc9_00a2aa0b
Bytes: 11
stop -> top

64:24-64:28
Mon Oct 20 17:47:27 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1096c0c9_01570eca
Bytes: 11
stop -> top

142:42-142:45
Mon Oct 20 17:47:27 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 309904fa_e23b0262
Bytes: 78
Add a comment why this cannot be ebx (like the other uses of the macro below).

142:42-142:45
Mon Oct 20 18:23:14 2014 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 309904fa_e23b0262
UUID: 30474440_35dd3298
Bytes: 27
Is there actually a reason?

148:98-148:102
Mon Oct 20 18:23:14 2014 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b02c147c_8847b799
Bytes: 1
?

918:16-918:40
Mon Oct 20 17:47:27 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f064ccc9_60b1a655
Bytes: 51
Add a comment on why this one cannot be macroified.

939:16-939:38
Mon Oct 20 17:47:27 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 309904fa_4253d6ab
Bytes: 5
ditto

1122:86-1122:88
Mon Oct 20 17:47:27 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f064ccc9_80aebaf2
Bytes: 17
What's LR in x86?

File: runtime/arch/x86_64/quick_entrypoints_x86_64.S

68:4-68:78
Mon Oct 20 18:23:14 2014 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 30474440_40e03e29
Bytes: 37
Roll that into the subq above, maybe?

75:24-75:28
Mon Oct 20 17:47:27 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 309904fa_824dde05
Bytes: 11
stop -> top

190:24-190:28
Mon Oct 20 17:47:27 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f064ccc9_a079fef6
Bytes: 11
stop -> top

232:24-232:28
Mon Oct 20 17:47:27 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1096c0c9_6146121a
Bytes: 11
stop -> top

1451:86-1451:88
Mon Oct 20 17:47:27 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 309904fa_429af601
Bytes: 21
What is LR in x86_64?

File: runtime/asm_support.h

20:12-20:23
Mon Oct 20 17:47:27 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f064ccc9_208ece8b
Bytes: 26
When is that not the case?

20:12-20:23
Mon Oct 20 18:23:14 2014 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f064ccc9_208ece8b
UUID: b02c147c_8b6a51de
Bytes: 41
This is included in the assembly files...

File: runtime/entrypoints/quick/quick_instrumentation_entrypoints.cc

32:48-32:49
Mon Oct 20 17:47:27 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f064ccc9_408bc27a
Bytes: 30
No ScopeQuickEntryPointsCheck?

File: runtime/mirror/art_method.h

337:40-337:43
Mon Oct 20 17:47:27 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 309904fa_22840a99
Bytes: 16
, its -> . It is

File: runtime/stack.cc

529:26-529:27
Mon Oct 20 17:47:27 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1096c0c9_61f45266
Bytes: 52
Do we check at some point that the method is a stub?

