Revision: 7a550d0bb85bcecba3563b4655b4390b8493207b
Patch-set: 2
File: compiler/dex/quick/gen_common.cc

2156:2-2156:8
Tue Nov 11 00:02:49 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5a4f777e_bf1287c2
Bytes: 9
DCHECK_NE

2156
Tue Nov 11 22:01:54 2014 +0000
Author: Chao-ying Fu <1010712@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5a4f777e_bf1287c2
UUID: 7a80bbc4_f9c7f34d
Bytes: 129
Somehow, the compilation fails with this change.  I will keep the original code.  Same for other DCHECK(xxx != nullptr).  Thanks!

2157:51-2157:59
Tue Nov 11 00:02:49 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3a4c838a_6e2460db
Bytes: 57
Prefer something like "succ_bb_itr" to be less ambiguous.

2157
Tue Nov 11 22:01:54 2014 +0000
Author: Chao-ying Fu <1010712@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3a4c838a_6e2460db
UUID: 7a80bbc4_39e6cbfa
Bytes: 4
Done

2158:0-2158:43
Tue Nov 11 00:02:49 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1a497f7c_98448112
Bytes: 57
not needed, place the "SuccessorBlockInfo*" to line 2171.

2158
Tue Nov 11 22:01:54 2014 +0000
Author: Chao-ying Fu <1010712@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1a497f7c_98448112
UUID: 9a6bafdc_fa15a52d
Bytes: 4
Done

2166:22-2166:38
Tue Nov 11 00:02:49 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1a497f7c_d84af91f
Bytes: 15
++i, ++iterator

2166
Tue Nov 11 22:01:54 2014 +0000
Author: Chao-ying Fu <1010712@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1a497f7c_d84af91f
UUID: 5a7db79e_04de006b
Bytes: 4
Done

2172:4-2172:10
Tue Nov 11 00:02:49 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3a4c838a_6b68d217
Bytes: 9
DCHECK_NE

2184:8-2184:14
Tue Nov 11 00:02:49 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5a4f777e_5f215311
Bytes: 9
DCHECK_NE

2186:8-2186:14
Tue Nov 11 00:02:49 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1a497f7c_588de912
Bytes: 9
DCHECK_EQ

2186
Tue Nov 11 22:01:54 2014 +0000
Author: Chao-ying Fu <1010712@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1a497f7c_588de912
UUID: 5a7db79e_e4e0a42d
Bytes: 4
Done

2191:6-2191:12
Tue Nov 11 00:02:49 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5a4f777e_ff2fdffb
Bytes: 9
DCHECK_NE

2193:6-2193:12
Tue Nov 11 00:02:49 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5a4f777e_df2c230a
Bytes: 9
DCHECK_EQ

2193
Tue Nov 11 22:01:54 2014 +0000
Author: Chao-ying Fu <1010712@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5a4f777e_df2c230a
UUID: 7a80bbc4_59d70703
Bytes: 4
Done

2225:2-2225:8
Tue Nov 11 00:02:49 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1a497f7c_38c7cd24
Bytes: 9
DCHECK_NE

2237:2-2237:8
Tue Nov 11 00:02:49 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3a4c838a_cb858667
Bytes: 9
DCHECK_EQ

2237
Tue Nov 11 22:01:54 2014 +0000
Author: Chao-ying Fu <1010712@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3a4c838a_cb858667
UUID: 7a80bbc4_b9365bd2
Bytes: 4
Done

File: compiler/dex/quick/x86/call_x86.cc

47:4-47:10
Tue Nov 11 00:02:49 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3a4c838a_abab6ae5
Bytes: 9
DCHECK_NE

60:0-63:3
Tue Nov 11 00:02:49 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1a497f7c_388c6dc6
Bytes: 158
I don't parse this comment. In the general code there's nothing specific to x86 about using "basic block ids, instead of dex offests". Could you clarify this.

63
Tue Nov 11 22:01:54 2014 +0000
Author: Chao-ying Fu <1010712@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1a497f7c_388c6dc6
UUID: 5a7db79e_842450dc
Bytes: 334
I will remove this comment, and add a comment before line 70.  Ex: The value at targets[i] is a basic block id, instead of a dex offset.
(Basically, we get rid of dex offsets and use basic block ids in the switch targets[].  Thus, we don't need to look up basic block id from using FindBlock() later on at InsertCaseLabel().)  Thanks!

74:0-77:3
Tue Nov 11 00:02:49 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3a4c838a_6e3100e0
Bytes: 9
similarly

93:2-93:8
Tue Nov 11 00:02:49 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3a4c838a_6b7d72dd
Bytes: 9
DCHECK_NE

109:2-109:8
Tue Nov 11 00:02:49 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1a497f7c_58a609a5
Bytes: 9
DCHECK_EQ

109
Tue Nov 11 22:01:54 2014 +0000
Author: Chao-ying Fu <1010712@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1a497f7c_58a609a5
UUID: 7a80bbc4_d9ca3759
Bytes: 4
Done

