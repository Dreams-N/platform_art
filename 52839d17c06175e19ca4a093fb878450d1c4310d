Revision: 52839d17c06175e19ca4a093fb878450d1c4310d
Patch-set: 3
File: compiler/optimizing/code_generator_arm.cc

1180:61-1180:64
Mon Nov 10 10:48:05 2014 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3a0563fe_fc294929
Bytes: 27
Nit: why R12 instead of IP?

1180:61-1180:64
Mon Nov 10 10:58:40 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3a0563fe_fc294929
UUID: fa358bd2_325490c3
Bytes: 157
Hmmm, good point. I just used the number used in Quick and did not realize that was IP.

Andreas, Ian: Are we certain the call through IMT will not trash IP?

1180:61-1180:64
Mon Nov 10 19:04:07 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: fa358bd2_325490c3
UUID: 5a4f777e_a876d342
Bytes: 295
Not sure I follow the question, you want called methods not to trash R12/IP? The hidden argument register is required to be IP for the stub, but this could be changed. You'd be better off not having magic hidden register usage in the assemblers, this was the status pre-optimizing compiler work.

1180:61-1180:64
Mon Nov 10 20:04:44 2014 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5a4f777e_a876d342
UUID: fa83cbc2_a2ea9e09
Bytes: 412
This is a bit paranoid: when we take pointer to the invoke stub, are we sure it points right to the stub and not to a different compiler (GCC/clang) generated stub that would dispatch it to the invoke stub while trashing IP?

And I think we're safe because the compiler needs to ensure that pointers to the function always compare equal and that would not be possible if it was returning pointers to extra stubs.

1180:61-1180:64
Tue Nov 11 09:56:20 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: fa83cbc2_a2ea9e09
UUID: ba8dd3f4_e0d0a2d7
Bytes: 58
Like Vladimir says. This is not related to the assemblers.

File: test/423-invoke-interface/src/Main.java

38:15-38:23
Mon Nov 10 12:06:08 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3a0563fe_1ced154e
Bytes: 33
does 20 bear any special meaning?

38:15-38:23
Mon Nov 10 12:14:01 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3a0563fe_1ced154e
UUID: 9af64f48_7f92cfe3
Bytes: 80
No, it's an arbitrary number that hopefully can trigger conflicts. See info.txt.

