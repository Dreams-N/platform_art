Revision: 2c6ea6c736bf641410fef3beecc6f8da26cb89bd
Patch-set: 1
File: /COMMIT_MSG

10
Fri Jun 24 13:45:34 2016 +0000
Author: Tobias Thierer <1103203@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 63e941fa_b1eb607d
Bytes: 77
Have you also tested that the test failed on a build without the fix present?

10
Fri Jun 24 13:57:31 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 63e941fa_b1eb607d
UUID: 03da4564_ce9be3e3
Bytes: 84
Of course. Without the fix both comparisons yield false and the EXPECT_TRUE() fails.

File: compiler/utils/string_reference_test.cc

36:16-36:41
Fri Jun 24 13:45:34 2016 +0000
Author: Tobias Thierer <1103203@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 63e941fa_f1f1e870
Bytes: 369
I don't properly understand how this test works because I haven't checked out test_dex_file_builder, and I don't know where the value 'lu' comes from, so this may be a stupid question:

Does the implication that this ASSERT_EQ carries meaningful information rely on the assumption that dex_file2->NumStringIds() is different from lu? If yes, should we assert this here?

36:16-36:41
Fri Jun 24 13:57:31 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 63e941fa_f1f1e870
UUID: c3e3cd1d_cc41af4a
Bytes: 265
Are you confusing the number '1' (one) with the letter 'l' (lower-case L)? Many fonts make them look the same.
This is a simple assertion that the dex file contains exactly one string to make sure the index 0 below actually refers to the string we have added above.

