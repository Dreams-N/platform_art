Revision: 2c6ea6c736bf641410fef3beecc6f8da26cb89bd
Patch-set: 1
File: /COMMIT_MSG

10
Fri Jun 24 13:45:34 2016 +0000
Author: Tobias Thierer <1103203@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 63e941fa_b1eb607d
Bytes: 77
Have you also tested that the test failed on a build without the fix present?

10
Fri Jun 24 13:57:31 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 63e941fa_b1eb607d
UUID: 03da4564_ce9be3e3
Bytes: 84
Of course. Without the fix both comparisons yield false and the EXPECT_TRUE() fails.

10
Fri Jun 24 14:04:51 2016 +0000
Author: Tobias Thierer <1103203@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 03da4564_ce9be3e3
UUID: 63e941fa_11fd8c3d
Bytes: 388
Right, because the strings were considered equal with the broken comparator. Thanks.

Perhaps we should also test the case:

dex 1:
"a"
"b"

dex 2:
"b"
"a"

(or some other combination where dex1 has two strings in ascending order vs. dex2 has descending order) and comprehensively check that all string comparisons are correct both within and across two dex files? Does that sound useful?

10
Fri Jun 24 14:44:15 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 63e941fa_11fd8c3d
UUID: 63e941fa_f198c83a
Bytes: 376
Strings in the dex file must be ordered.

I added a few more tests but comprehensive tests would be essentially testing the uint32_t operator< for the same dex file and CompareModifiedUtf8ToModifiedUtf8AsUtf16CodePointValues() for different dex files. The former doesn't need tests and if someone wants to add tests for the latter, they are welcome to add them to utf_test.cc.

File: compiler/utils/string_reference_test.cc

36:16-36:41
Fri Jun 24 13:45:34 2016 +0000
Author: Tobias Thierer <1103203@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 63e941fa_f1f1e870
Bytes: 369
I don't properly understand how this test works because I haven't checked out test_dex_file_builder, and I don't know where the value 'lu' comes from, so this may be a stupid question:

Does the implication that this ASSERT_EQ carries meaningful information rely on the assumption that dex_file2->NumStringIds() is different from lu? If yes, should we assert this here?

36:16-36:41
Fri Jun 24 13:57:31 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 63e941fa_f1f1e870
UUID: c3e3cd1d_cc41af4a
Bytes: 265
Are you confusing the number '1' (one) with the letter 'l' (lower-case L)? Many fonts make them look the same.
This is a simple assertion that the dex file contains exactly one string to make sure the index 0 below actually refers to the string we have added above.

36:16-36:41
Fri Jun 24 14:04:51 2016 +0000
Author: Tobias Thierer <1103203@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: c3e3cd1d_cc41af4a
UUID: 830f15b1_2ae93f89
Bytes: 116
Ah, yes, thanks. I did indeed misread as "1u" as "lu" and completely misread this assertion. Disregard my comment :)

