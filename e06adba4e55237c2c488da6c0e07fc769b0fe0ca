Revision: e06adba4e55237c2c488da6c0e07fc769b0fe0ca
Patch-set: 13
File: compiler/optimizing/intrinsics_mips.cc

1934:0-1936:89
Tue Mar 01 22:21:23 2016 +0000
Author: Alexey Frunze <1057043@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e27a7932_f223ec3e
Bytes: 149
I wonder why we have 3 inputs here when it looks like there should be just 1. MIPS64 and ARM64 versions are implemented similarly. What am I missing?

1934:0-1936:89
Wed Mar 02 10:24:28 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e27a7932_f223ec3e
UUID: 42f42502_a13598d9
Bytes: 462
Right, I forgot to add a comment about that.  We're still figuring out why the ARM64 and MIPS64 were implemented this way, but those implementations passing three arguments are wrong.

As you noticed, we've started to address this in https://android-review.googlesource.com/#/c/205382/.  Chris, could you alter this very CL (https://android-review.googlesource.com/#/c/197445) to pass just one argument to the MIPS32 StringNewStringFromString intrinsic?  Thanks.

1934:0-1936:89
Wed Mar 02 17:07:06 2016 +0000
Author: Chris Larsen <1071873@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 42f42502_a13598d9
UUID: e27a7932_4b37a638
Bytes: 220
After making the change the emulator boots but I can't connect using "adb shell". When I put the second, and third arguments back, "adb shell" resumes working. Need to test to see if I can just delete the third argument.

1934:0-1936:89
Wed Mar 02 17:14:25 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e27a7932_4b37a638
UUID: 82037dbe_db55279b
Bytes: 66
This is odd.  I'll try to test on the emulator on my side as well.

1934:0-1936:89
Wed Mar 02 18:24:59 2016 +0000
Author: Chris Larsen <1071873@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 82037dbe_db55279b
UUID: e27a7932_4bb8060f
Bytes: 932
I just did a sanity test on only passing two arguments (build emulator, run emulator, run test/082-inline-execute), and the tests pass ("--optimizing", "", "--no-prebuild --optimizing", and "--no-prebuild). More exhaustive testing may show that this is broken too.

I've also been tracking through the code and it lead me to
- lines 231/244 of /runtime/entrypoints/quick/quick_alloc_entrypoints.cc, then to 
- lines 43/87 of runtime/arch/quick_alloc_entrypoints.S, and finally to
- line 1274 of runtime/arch/mips/quick_entrypoints_mips.S.

This code/macro (line 1274 of runtime/arch/mips/quick_entrypoints_mips.S) passes the Thread::Current ("move $a1, rSELF") as the second argument so, to me, it makes a certain amount of sense that the code works when passed two arguments (deleting only the third/last argument) but deleting the last two arguments causes a problem.

Did I follow the code properly, and get to the correct place?

1934:0-1936:89
Thu Mar 03 09:04:36 2016 +0000
Author: Chris Larsen <1071873@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e27a7932_4bb8060f
UUID: a2e32149_2cca0893
Bytes: 4
Done

1934:0-1936:89
Thu Mar 03 14:49:27 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a2e32149_2cca0893
UUID: a2b16159_144e5a39
Bytes: 617
I think your reasoning is correct, but I'm not sure to understand the conclusion.

The ONE_ARG_DOWNCALL macro supposedly generates an entrypoint taking one argument (through A0 on MIPS), passing it (delegating) to an actual routine (artAllocStringFromStringFromCode*, defined in runtime/entrypoints/quick/quick_alloc_entrypoints.cc), as well as Thread::Current (though A1).  So it does not make sense for me to pass more than one argument, as the artAllocStringFromStringFromCode* routines take two arguments (mirror::String* string, Thread* self).

I haven't tried your CL on the MIPS emulator yet, but will do ASAP.

1934:0-1936:89
Thu Mar 03 15:52:09 2016 +0000
Author: Chris Larsen <1071873@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a2b16159_144e5a39
UUID: a26ec178_6333abad
Bytes: 211
Long story short I think my conclusion was wrong. I think when tested the change w/only one argument I made some other mistake. Retested and another code search and decided to try the change again. Now it works.

1934:0-1936:89
Thu Mar 03 21:09:01 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a26ec178_6333abad
UUID: 82ea9d1e_79017624
Bytes: 102
jeffhao, what's the reason for this weird 64-bit code with many inputs? (coming from commit 848f70a3d)

1934:0-1936:89
Thu Mar 03 22:03:58 2016 +0000
Author: Jeff Hao <1010108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 82ea9d1e_79017624
UUID: a26ec178_340deb89
Bytes: 179
This looks like a typo added through cut and paste from VisitStringNewStringFromChars. This method should only have one argument, and there's a similar issue in the arm64 version.

