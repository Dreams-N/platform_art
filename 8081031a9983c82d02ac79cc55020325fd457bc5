Revision: 8081031a9983c82d02ac79cc55020325fd457bc5
Patch-set: 14
File: compiler/driver/compiler_driver.cc

848:67-848:75
Thu Sep 03 14:29:55 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 04d222e7_15a396a1
Bytes: 31
pointer_size? (for consistency)

File: compiler/image_writer.cc

329:46-330:58
Thu Sep 03 14:29:55 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 84c53226_b193ba48
Bytes: 35
Nit: Move all this to its new line?

595:4-595:8
Thu Sep 03 14:29:55 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 04d222e7_b593aa48
Bytes: 11
ArtMethod*?

597:6-597:10
Thu Sep 03 14:29:55 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 8480d2c5_d97317df
Bytes: 10
ArtMethod?

1373:0-1374:78
Thu Sep 03 14:29:55 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 84c53226_718552f8
Bytes: 105
The code below does not do any clearing, so I don't think this comment is really helpful in this context.

1381:4-1381:8
Thu Sep 03 14:29:55 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2461e61f_16b41a0a
Bytes: 53
GcRoot<mirror::String> for consistency with line 1393

1419:4-1419:8
Thu Sep 03 14:29:55 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 8480d2c5_59e707e7
Bytes: 27
ArtField** for consistency.

File: compiler/image_writer.h

197:7-197:28
Thu Sep 03 14:29:55 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a46956e6_1a8df9f8
Bytes: 20
Reloc -> Relocation?

File: compiler/optimizing/code_generator_arm.cc

4236:4-4236:46
Thu Sep 03 14:29:55 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e4d42ed5_343d7e56
Bytes: 69
Maybe if (kNeedsReadBarrier) UNIMPLEMENTED ?

(here and other places)

File: patchoat/patchoat.cc

529:0-530:80
Thu Sep 03 14:29:55 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 04d222e7_157ab6b7
Bytes: 35
Same comment: where's the clearing?

File: runtime/art_method-inl.h

110:2-110:6
Thu Sep 03 14:29:55 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 8480d2c5_19f18fa1
Bytes: 10
ArtMethod?

495:2-495:6
Thu Sep 03 14:29:55 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 8480d2c5_d9fa377d
Bytes: 11
ArtMethod*?

File: runtime/class_linker.cc

1065:4-1066:32
Thu Sep 03 14:29:55 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2461e61f_b6c2866c
Bytes: 18
nit: one per line?

1505:46-1505:76
Thu Sep 03 14:29:55 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e4d42ed5_944b0af1
Bytes: 42
Does that still hold with class unloading?

1507:8-1507:26
Thu Sep 03 14:29:55 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 84c53226_71131268
Bytes: 6
== 8u?

1508:14-1508:29
Thu Sep 03 14:29:55 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 84c53226_310d8a40
Bytes: 65
How about a ClassLinker::IsCrossCompiling or in some other class?

1508:0-1510:63
Thu Sep 03 14:29:55 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2461e61f_96bf8ae4
Bytes: 95
Why don't we always use the LinearAlloc then, instead of doing calloc when not cross-compiling?

File: runtime/mirror/dex_cache-inl.h

44:2-44:38
Thu Sep 03 14:29:55 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2461e61f_d6c90291
Bytes: 56
Is that a TODO that needs to be fixed before submitting?

