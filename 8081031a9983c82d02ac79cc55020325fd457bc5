Revision: 8081031a9983c82d02ac79cc55020325fd457bc5
Patch-set: 14
File: compiler/driver/compiler_driver.cc

848:67-848:75
Thu Sep 03 14:29:55 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 04d222e7_15a396a1
Bytes: 31
pointer_size? (for consistency)

848:67-848:75
Thu Sep 03 18:14:25 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 04d222e7_15a396a1
UUID: e4d42ed5_14ef1a2f
Bytes: 101
Done. Though I will not go out of my way to fix it everywhere. This inconsistency is quite pervasive.

File: compiler/image_writer.cc

329:46-330:58
Thu Sep 03 14:29:55 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 84c53226_b193ba48
Bytes: 35
Nit: Move all this to its new line?

329:46-330:58
Thu Sep 03 18:14:25 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 84c53226_b193ba48
UUID: 84c53226_f1a5c281
Bytes: 4
Done

595:4-595:8
Thu Sep 03 14:29:55 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 04d222e7_b593aa48
Bytes: 11
ArtMethod*?

595:4-595:8
Thu Sep 03 18:14:25 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 04d222e7_b593aa48
UUID: c4d56a01_60b93202
Bytes: 4
Done

597:6-597:10
Thu Sep 03 14:29:55 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 8480d2c5_d97317df
Bytes: 10
ArtMethod?

597:6-597:10
Thu Sep 03 18:14:25 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 8480d2c5_d97317df
UUID: 84c53226_b1af3a60
Bytes: 4
Done

1373:0-1374:78
Thu Sep 03 14:29:55 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 84c53226_718552f8
Bytes: 105
The code below does not do any clearing, so I don't think this comment is really helpful in this context.

1373:0-1374:78
Thu Sep 03 18:14:25 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 84c53226_718552f8
UUID: a4deb6f4_b29aded4
Bytes: 123
Improved the comment as far as I consider reasonable. I'm not going to write a novel on casts here to explain it in detail.

1381:4-1381:8
Thu Sep 03 14:29:55 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2461e61f_16b41a0a
Bytes: 53
GcRoot<mirror::String> for consistency with line 1393

1381:4-1381:8
Thu Sep 03 18:14:25 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2461e61f_16b41a0a
UUID: 04d222e7_55b59eb6
Bytes: 4
Done

1419:4-1419:8
Thu Sep 03 14:29:55 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 8480d2c5_59e707e7
Bytes: 27
ArtField** for consistency.

1419:4-1419:8
Thu Sep 03 18:14:25 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 8480d2c5_59e707e7
UUID: a455d63a_573dec54
Bytes: 4
Done

File: compiler/image_writer.h

197:7-197:28
Thu Sep 03 14:29:55 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a46956e6_1a8df9f8
Bytes: 20
Reloc -> Relocation?

197:7-197:28
Thu Sep 03 18:14:25 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a46956e6_1a8df9f8
UUID: e4d42ed5_f4d5b657
Bytes: 4
Done

File: compiler/optimizing/code_generator_arm.cc

4236:4-4236:46
Thu Sep 03 14:29:55 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e4d42ed5_343d7e56
Bytes: 69
Maybe if (kNeedsReadBarrier) UNIMPLEMENTED ?

(here and other places)

4236:4-4236:46
Fri Sep 04 10:33:26 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e4d42ed5_343d7e56
UUID: a4deb6f4_f2aaa6b9
Bytes: 22
I'll leave this as is.

File: patchoat/patchoat.cc

529:0-530:80
Thu Sep 03 14:29:55 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 04d222e7_157ab6b7
Bytes: 35
Same comment: where's the clearing?

529:0-530:80
Thu Sep 03 18:14:25 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 04d222e7_157ab6b7
UUID: a455d63a_974e6401
Bytes: 21
Improved the comment.

File: runtime/art_method-inl.h

110:2-110:6
Thu Sep 03 14:29:55 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 8480d2c5_19f18fa1
Bytes: 10
ArtMethod?

110:2-110:6
Thu Sep 03 18:14:25 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 8480d2c5_19f18fa1
UUID: 04d222e7_35c49a2a
Bytes: 4
Done

495:2-495:6
Thu Sep 03 14:29:55 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 8480d2c5_d9fa377d
Bytes: 11
ArtMethod*?

495:2-495:6
Thu Sep 03 18:14:25 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 8480d2c5_d9fa377d
UUID: 84c53226_51dcd600
Bytes: 4
Done

File: runtime/class_linker.cc

1065:4-1066:32
Thu Sep 03 14:29:55 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2461e61f_b6c2866c
Bytes: 18
nit: one per line?

1065:4-1066:32
Thu Sep 03 18:14:25 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2461e61f_b6c2866c
UUID: 8480d2c5_19d66fdf
Bytes: 4
Done

1505:46-1505:76
Thu Sep 03 14:29:55 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e4d42ed5_944b0af1
Bytes: 42
Does that still hold with class unloading?

1505:46-1505:76
Thu Sep 03 18:14:25 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e4d42ed5_944b0af1
UUID: a46956e6_5a3851b8
Bytes: 156
I asked Mathieu on another CL about the need for a DexCache finalizer and it seems we're just gonna do it a bit later. We're not unloading classes just yet.

1507:8-1507:26
Thu Sep 03 14:29:55 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 84c53226_71131268
Bytes: 6
== 8u?

1507:8-1507:26
Thu Sep 03 18:14:25 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 84c53226_71131268
UUID: a4deb6f4_12216a37
Bytes: 4
Done

1508:14-1508:29
Thu Sep 03 14:29:55 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 84c53226_310d8a40
Bytes: 65
How about a ClassLinker::IsCrossCompiling or in some other class?

1508:14-1508:29
Thu Sep 03 18:14:25 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 84c53226_310d8a40
UUID: a455d63a_d748dcf5
Bytes: 66
Well, it wouldn't be enough here, the condition is a bit narrower.

1508:0-1510:63
Thu Sep 03 14:29:55 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2461e61f_96bf8ae4
Bytes: 95
Why don't we always use the LinearAlloc then, instead of doing calloc when not cross-compiling?

1508:0-1510:63
Thu Sep 03 18:14:25 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2461e61f_96bf8ae4
UUID: 84c53226_71e1d2b7
Bytes: 68
I don't want to put too much pressure on the low 4GiB address space.

File: runtime/mirror/dex_cache-inl.h

44:2-44:38
Thu Sep 03 14:29:55 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2461e61f_d6c90291
Bytes: 56
Is that a TODO that needs to be fixed before submitting?

44:2-44:38
Thu Sep 03 18:14:25 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2461e61f_d6c90291
UUID: 84c53226_d1cf663e
Bytes: 135
Preserved previously existing comment when moving the DexCache::SetResolvedString() implementation from dex_cache.h to dex_cache-inl.h.

