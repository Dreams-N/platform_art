Revision: 4fade1f4f33c26e3e6e2b2366154bfe3f276bb88
Patch-set: 2
File: compiler/optimizing/code_generator_arm64.cc

2873:8-2873:31
Thu Nov 12 15:27:21 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 569062ca_81b79ca0
Bytes: 184
So Bind() doesn't count towards the "single" instruction that you can emit?

But having the Bind() before the guard would be broken because creating the guard can emit a veneer, right?

2873:8-2873:31
Thu Nov 12 15:51:43 2015 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 569062ca_81b79ca0
UUID: fb005ff1_1bc07b9e
Bytes: 657
The `CheckScope` scopes only check the size of what is actually generated in the buffer. So `Bind`, which does not emit anything (it only attaches a label to the current position) does not impact that.

Your second comment is correct.
For reference, the scope constructor checks that the underlying code buffer has enough space for `size` bytes (here 4 bytes), checks whether any pools need to be emitted before `current_position + size`, and then blocks the pools.

Note that such guard scopes can be created for any size of code. So if that helps we could put this whole block of code under one guard that would guarantee nothing is emitted in the middle.

