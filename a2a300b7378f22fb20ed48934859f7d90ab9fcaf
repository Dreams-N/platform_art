Revision: a2a300b7378f22fb20ed48934859f7d90ab9fcaf
Patch-set: 7
File: compiler/optimizing/builder.cc

655:8-656:77
Fri May 29 10:25:48 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6d42d931_65370a5e
Bytes: 200
Out of curiosity, when can

  target_method.dex_method_index == outer_compilation_unit_->GetDexMethodIndex()

be true while

 target_method.dex_file == outer_compilation_unit_->GetDexFile()

is false?

655:8-656:77
Fri May 29 10:33:27 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6d42d931_65370a5e
UUID: 8d470d3e_c1cc303d
Bytes: 198
Because we are now inlining method calls, you can inline a method from another dex file that calls a method that happens to have the same index in that other dex file than the original outer method.

File: compiler/optimizing/inliner.cc

53:37-53:45
Fri May 29 13:02:11 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6d42d931_6085380a
Bytes: 18
nit: {
continue;
}

File: compiler/optimizing/nodes.cc

1306:2-1306:3
Fri May 29 13:02:11 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d9fb8c32_04c13a21
Bytes: 14
why the scope?

