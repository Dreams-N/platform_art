Revision: 6c8af854069972c87917c35fb0de986e99afbb4b
Patch-set: 2
File: compiler/optimizing/code_generator_x86.cc

3823:0-3838:3
Fri Apr 24 17:34:14 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 90972654_20f01261
Bytes: 74
You should move this after line 3843 to avoid writing the slow path again.

3823:0-3838:3
Fri Apr 24 17:37:09 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 90972654_20f01261
UUID: 5083ee1c_7ee9d9ac
Bytes: 152
I didn't want to create the slow path if there was no need (i.e. index and length are both constants).  I can combine it, but it will look at bit hokey.

3823:0-3838:3
Fri Apr 24 17:41:44 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5083ee1c_7ee9d9ac
UUID: 50984e8f_31aaba7f
Bytes: 190
The thing is, if they are both constants, BCE left the bounds check only if won't succeed. So this change more or less looks like doing constant folding in the codegen, which we could avoid.

File: compiler/optimizing/code_generator_x86_64.cc

3764:0-3779:3
Fri Apr 24 17:34:14 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b088aa37_214e564e
Bytes: 5
ditto

3764:0-3779:3
Fri Apr 24 17:37:09 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b088aa37_214e564e
UUID: d076fe11_0184f90c
Bytes: 5
ditto

