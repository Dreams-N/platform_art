Revision: f1945e13ee717887de77c30ca70c8aa8d438b994
Patch-set: 24
File: compiler/optimizing/register_allocator_graph_color.cc

356:1-356:81
Tue Aug 02 22:52:52 2016 +0000
Author: Matthew Gharrity <1108540@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 74d3c2eb_41e15c27
Bytes: 102
Linear scan has extra invariants to maintain in this function, such as that live intervals are sorted.

429:6-429:19
Tue Aug 02 22:52:52 2016 +0000
Author: Matthew Gharrity <1108540@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 74d3c2eb_c1422c65
Bytes: 155
BlockRegister is implementation-dependent.
One option is to have a virtual function for it, but it's not clear that all register allocators would want one.

440:0-440:82
Tue Aug 02 22:52:52 2016 +0000
Author: Matthew Gharrity <1108540@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 74d3c2eb_e179708f
Bytes: 154
This is implementation-dependent. Linear scan blocks the output register and shifts the live interval, but graph coloring simply splits the live interval.

497:0-497:88
Tue Aug 02 22:52:52 2016 +0000
Author: Matthew Gharrity <1108540@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 74d3c2eb_a1412843
Bytes: 165
This is partially implementation-dependent; linear scan has similar code, but also has to maintain the unhandled_{core,fp}_intervals_, making code sharing not ideal.

File: compiler/optimizing/register_allocator_graph_color.h

39
Tue Aug 02 23:27:20 2016 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 74d3c2eb_ec7f2742
Bytes: 179
although graph coloring is of course well known, this would be the right place to document your algorithm a bit at very high level, and give credit to references you may have used

39
Wed Aug 03 00:19:19 2016 +0000
Author: Matthew Gharrity <1108540@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 74d3c2eb_ec7f2742
UUID: 74d3c2eb_198e6c25
Bytes: 42
Good idea; I've extended the comment here.

115
Tue Aug 02 23:27:20 2016 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 74d3c2eb_6ce25732
Bytes: 122
super nit: you are using two forms of the verb in your methods: e.g. ensure vs. ensures
I would use one style consistently

115
Wed Aug 03 00:19:19 2016 +0000
Author: Matthew Gharrity <1108540@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 74d3c2eb_6ce25732
UUID: 74d3c2eb_f95e087b
Bytes: 4
Done

139
Tue Aug 02 23:27:20 2016 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 74d3c2eb_4c8f537b
Bytes: 83
nit: typically nouns are better for fields than verbs, which are better for methods

139
Wed Aug 03 00:19:19 2016 +0000
Author: Matthew Gharrity <1108540@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 74d3c2eb_4c8f537b
UUID: 74d3c2eb_195c2c81
Bytes: 4
Done

File: compiler/optimizing/register_allocator_test.cc

397
Tue Aug 02 23:27:20 2016 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6f34c9be_6284456c
Bytes: 108
is this a "note to self" for later? without actionable code (like a check or test), this won't do much more?

397
Wed Aug 03 00:19:19 2016 +0000
Author: Matthew Gharrity <1108540@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6f34c9be_6284456c
UUID: 74d3c2eb_f9c84822
Bytes: 244
It's pointing out that this test instantiates a linear scan allocator (it tests invariants specific to linear scan) rather than the default register allocator. No code changed in this test, because it has always referenced linear scan directly.

819
Tue Aug 02 23:27:20 2016 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6f34c9be_82793992
Bytes: 4
same

819
Wed Aug 03 00:19:19 2016 +0000
Author: Matthew Gharrity <1108540@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6f34c9be_82793992
UUID: 74d3c2eb_b9d2c0ca
Bytes: 10
See above.

