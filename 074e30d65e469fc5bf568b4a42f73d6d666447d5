Revision: 074e30d65e469fc5bf568b4a42f73d6d666447d5
Patch-set: 1
File: compiler/optimizing/induction_var_analysis.cc

207:30-207:40
Mon Feb 08 19:06:15 2016 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5d91680c_1fb883ed
Bytes: 31
you are doing part of this TODO

213:13-213:23
Mon Feb 08 19:06:15 2016 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3d53d428_e6463e9a
Bytes: 109
by doing this you are violating the invariant that induction nodes always have the same type as their context

268:24-268:28
Mon Feb 08 19:06:15 2016 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7d8e2cf1_4042ae88
Bytes: 4
typo

File: compiler/optimizing/induction_var_analysis.h

132:22-132:33
Mon Feb 08 19:06:15 2016 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9d8760d1_61e576f5
Bytes: 61
why is this not part of the constructor, like all the others?

222:44-222:47
Mon Feb 08 19:06:15 2016 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7d8e2cf1_600c928f
Bytes: 88
I would really prefer a solution that is more general and would include int/long as well

