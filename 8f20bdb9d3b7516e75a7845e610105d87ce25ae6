Revision: 8f20bdb9d3b7516e75a7845e610105d87ce25ae6
Patch-set: 1
File: compiler/optimizing/dead_code_elimination.h

32:63-32:68
Wed Apr 22 12:13:50 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b088aa37_ad64fd93
Bytes: 56
Maybe pass `nullptr' as default value for this argument?

32:63-32:68
Wed Apr 22 12:16:23 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b088aa37_ad64fd93
UUID: 90972654_4c3c7f75
Bytes: 117
I prefer explicit, to make sure that I don't miss previous usages. If it turns to be a bother we can change it later.

32:63-32:68
Wed Apr 22 12:28:04 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 90972654_4c3c7f75
UUID: 50984e8f_c2762254
Bytes: 15
Fair enough. :)

File: compiler/optimizing/optimizing_compiler.cc

324
Wed Apr 22 12:13:50 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 90972654_0c427700
Bytes: 125
Maybe give it a different name (as it is the case for `simplify2'), so that we can assess it with Czecher, sorry, Checker? :P

324
Wed Apr 22 12:16:23 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 90972654_0c427700
UUID: 90972654_6c413bf8
Bytes: 132
any suggestion? I don't think it matters that much. Given names have the drawback that if we re-order we might need to change names.

324
Wed Apr 22 12:28:04 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 90972654_6c413bf8
UUID: b088aa37_6dce9504
Bytes: 312
As is, the `dce1' and `dce2' passes are both labeled as `dead_code_elimination' in the C1 CFG output, meaning that we can only check the former with Checker.  If you give an explicit different name to the latter through an extra argument (e.g. "dead_code_elimination_after_types"), it will be visible to Checker.

324
Wed Apr 22 12:29:16 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b088aa37_6dce9504
UUID: b088aa37_8db2e174
Bytes: 61
ah, I see what you are saying. Sorry, I misread your comment.

