Revision: a51f4a25906bb165942301bb7305defd216c8c7e
Patch-set: 4
File: compiler/optimizing/graph_checker.h

119:5-119:46
Fri Apr 10 08:53:10 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a38a229d_5d165b00
Bytes: 142
I think it's really the cache that bothers me :-) Since we can just look forward for equivalent phis, I think we should just avoid this cache.

119:5-119:46
Fri Apr 10 10:25:23 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a38a229d_5d165b00
UUID: 6394aac1_fbf72f08
Bytes: 470
:) The alternative is  why would you want to have n^2 traversal instead of a linear one? I know that's just in debug mode but still...

The alternative is to allocate at use site (which is a waste knowing that we need to do it for each method) or have something lighter on the stack (but i was lazy to re-do the bit manipulation of a bitvector and this is more convenient).

No strong opinions here though  (it's a minor thing) so if it bothers you much i can change it.

119:5-119:46
Fri Apr 10 19:24:45 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6394aac1_fbf72f08
UUID: a38a229d_a3bf3ea3
Bytes: 118
removed. after thinking about it we should need to make to many look aheads in the normal case so it shouldn't matter.

File: compiler/optimizing/ssa_builder.cc

175:21-175:23
Fri Apr 10 08:53:10 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6394aac1_dbc513de
Bytes: 16
Too many spaces.

174:2-175:25
Fri Apr 10 08:53:10 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e3617abc_373e188c
Bytes: 9
one line?

174:2-175:25
Fri Apr 10 19:24:45 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e3617abc_373e188c
UUID: e3617abc_bd0cc771
Bytes: 4
Done

175:21-175:23
Fri Apr 10 19:24:45 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6394aac1_dbc513de
UUID: 6394aac1_c1628612
Bytes: 4
Done

208:19-208:23
Fri Apr 10 08:53:10 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6394aac1_fbcacfea
Bytes: 19
here we -> here, we

208:19-208:23
Fri Apr 10 19:24:45 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6394aac1_fbcacfea
UUID: 6394aac1_e167821f
Bytes: 4
Done

215:5-217:61
Fri Apr 10 08:53:10 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a38a229d_9d40e3f8
Bytes: 148
I think the comment is misplaced. Here you should just say that non-phi instructions are already correctly typed, so you don't need to process them.

215:5-217:61
Fri Apr 10 19:24:45 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a38a229d_9d40e3f8
UUID: e3617abc_dd117b8c
Bytes: 4
Done

224:10-224:26
Fri Apr 10 08:53:10 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a38a229d_bd459f07
Bytes: 8
No need?

224:10-224:26
Fri Apr 10 10:25:23 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a38a229d_bd459f07
UUID: a38a229d_7dcb17cc
Bytes: 77
Indeed. I keep forgetting that we hold phis and the rest in different list :)

224:10-224:26
Fri Apr 10 19:24:45 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a38a229d_7dcb17cc
UUID: a38a229d_03463280
Bytes: 4
Done

230:0-230:26
Fri Apr 10 08:53:10 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6394aac1_1bb05b70
Bytes: 8
No need?

230:0-230:26
Fri Apr 10 19:24:45 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6394aac1_1bb05b70
UUID: e3617abc_fd163f81
Bytes: 4
Done

223:0-232:54
Fri Apr 10 08:53:10 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6394aac1_5bbae34f
Bytes: 143
I'd add a helper function for this, that you could also use for the HGraphChecker. Something like GetPhiEquivalentOfType(Primitive::Type type).

223:0-232:54
Fri Apr 10 19:24:45 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6394aac1_5bbae34f
UUID: e3617abc_7d522f3c
Bytes: 259
thought about it but I didn't find a good place for it (this relates to the discussion about the utility file from the other CL). I added something extra on the phi node. I think it's a bit of a stretch but still reasonable and it makes this code look better.

File: runtime/primitive.h

60:0-60:25
Fri Apr 10 08:53:10 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e3617abc_7738909d
Bytes: 111
As we saw, makes a new case to handle in a switch :-) You actually don't need this if you get rid of the cache.

60:0-60:25
Fri Apr 10 10:25:23 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e3617abc_7738909d
UUID: a38a229d_dd242b2f
Bytes: 84
nope, it doesn't. It makes a new case only if you introduce a new value in the enum.

