Revision: 453b2a5c4c52fb3e3bd93f14b3f5db7741ddb71a
Patch-set: 1
File: /COMMIT_MSG

10:19-10:31
Wed Sep 10 15:53:43 2014 +0000
Author: Razvan A Lupusoru <1013855@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d013479f_edd9bd2c
Bytes: 44
Why method entry? Quick prefers method exit.

10:19-10:31
Wed Sep 10 17:37:13 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d013479f_edd9bd2c
UUID: 90262ff7_d06734ed
Bytes: 181
It's currently easier with the code generators: a return instruction just returns and we don't need to cache and share a slow path for the method exit suspend check between returns.

File: compiler/optimizing/builder.cc

473:6-473:24
Wed Sep 10 15:53:43 2014 +0000
Author: Razvan A Lupusoru <1013855@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d013479f_8d03e9df
Bytes: 124
Agreed with comment below. This check is a bit too conservative and should be updated once loops are properly identified. :)

473:6-473:24
Wed Sep 10 17:37:13 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d013479f_8d03e9df
UUID: 90262ff7_30c69086
Bytes: 120
Note that we already identify them in the compiler. But I haven't put any optimizations to remove the suspend check yet.

File: compiler/optimizing/nodes.h

1597:6-1597:19
Wed Sep 10 15:53:43 2014 +0000
Author: Razvan A Lupusoru <1013855@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f0168b8e_4ee28763
Bytes: 63
Glad to see side-effects decomposed from their instructions. :)

File: test/121-simple-suspend-check/src/Main.java

33:4-33:16
Mon Sep 15 07:16:58 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1076bf12_c606823f
Bytes: 145
I think this pattern generates a GOTO. We should add loops generating IF_EQ and IF_EQZ (or similar) to test suspend point for these instructions.

33:4-33:16
Mon Sep 15 11:00:02 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1076bf12_c606823f
UUID: d0fa6781_b63d4547
Bytes: 161
Good point. I checked and dx will only use goto's for branching backward (checked wiht while and do/while). I think I need to create the dex instructions myself.

