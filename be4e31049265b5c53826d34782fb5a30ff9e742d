Revision: be4e31049265b5c53826d34782fb5a30ff9e742d
Patch-set: 2
File: runtime/gc/reference_processor.cc

280:30-280:71
Mon Jan 25 19:46:58 2016 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 14cb4a3e_da0bf93f
Bytes: 223
Would it be better to check this inside Reference::SetPendingNext instead? I think that would follow the existing patterns better and would avoid separating the IsActiveTransaction() check and the if statement that uses it.

280:30-280:71
Mon Jan 25 20:31:21 2016 +0000
Author: Richard Uhler <1057373@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 14cb4a3e_da0bf93f
UUID: d4b8d2d6_39292fc8
Bytes: 310
I tried to do that originally, but compilation failed, saying  the call to SetFieldObject in SetpendingNext might not always be inlined. Is it okay to include whatever file defines Runtime::Current() in the header files so I can call Runtime::Current()->IsActiveTransaction() in a function that can be inlined?

280:30-280:71
Mon Jan 25 20:37:41 2016 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d4b8d2d6_39292fc8
UUID: 94b2daf4_b7e1c8bc
Bytes: 257
Yes if that works, but sometimes, a circular dependency may be an issue. If that doesn't work, I'd try adding ALWAYS_INLINE to SetPendingNext in reference.h and moving the SetPendingNext body to reference-inl.h and add necessary #include in reference-inl.h.

280:30-280:71
Tue Jan 26 23:21:38 2016 +0000
Author: Richard Uhler <1057373@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 94b2daf4_b7e1c8bc
UUID: f49a3677_019074fd
Bytes: 4
Done

