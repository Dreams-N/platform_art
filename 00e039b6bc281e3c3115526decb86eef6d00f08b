Revision: 00e039b6bc281e3c3115526decb86eef6d00f08b
Patch-set: 4
File: runtime/indenter.h

124:27-124:39
Thu Jul 30 10:20:13 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 4d7fda4c_a7b2ee32
Bytes: 56
I'm not very happy about the "T&&" -> "const T&" change.

124:27-124:39
Thu Jul 30 17:54:25 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 4d7fda4c_a7b2ee32
UUID: ad72168f_1dd777bd
Bytes: 670
TL; DR - I do weakly prefer this "const T&" but I don't feel strongly about it.

--

I am however more curious about why using T&& instead of const T& would be more appropriate when forwarding to an ostream (that itself doesn't have any T& operators, and thus doesn't make a semantical difference)?

I am all for taking advantage of T&& and std::forward since it's one of the better features added in C++11 -- and just like auto I'm not sure if it's something we should use everywhere just because we can?

It seems like we should keep a careful balance of not scaring away the other developers who are less amenable to embracing the new C++11 functionality, doesn't it?

