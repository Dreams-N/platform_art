Revision: 2d41d53b65d77134befbedce0f98058b536a5989
Patch-set: 6
File: compiler/optimizing/induction_var_analysis.cc

78:20-78:34
Wed Sep 02 18:04:49 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 247566b9_530cc4b6
Bytes: 71
Pointer comparison? Please avoid, it will cause non deterministic runs.

78:20-78:34
Wed Sep 02 18:06:49 2015 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 247566b9_530cc4b6
UUID: 6492fe15_72245ef2
Bytes: 155
Well, ideally I would like to have a hash map, and not keep any order. Do we have any plans to support these with the Arena wrapper. E.g. ArenaSafeHashMap?

78:20-78:34
Wed Sep 02 18:08:32 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6492fe15_72245ef2
UUID: 84c53226_2e0be79d
Bytes: 104
Why ideally?

We really want to have the order be the same across runs. It makes debugging much simpler.

78:20-78:34
Wed Sep 02 18:11:58 2015 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 84c53226_2e0be79d
UUID: 84f1b2a4_0e888be8
Bytes: 387
Well, this is a mapping of instructions to induction information. There is no point in keeping these ordered at all and, in fact, it adds runtime (O(log n) vz O(1) per insertion).

Can you enlighten me on: how do you use the order during debugging, and, what do you suggest I use for comparisons here then (I could order on GetId(), but then we are more or less back where I started)....

78:20-78:34
Wed Sep 02 18:26:52 2015 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 84f1b2a4_0e888be8
UUID: 84f1b2a4_0e0b6bef
Bytes: 166
Also, e.g. graph visualizer code (one that uses similar map) does exactly the same:

   instruction_intervals_(std::less<const HInstruction*>(), allocator->Adapter())

File: compiler/optimizing/induction_var_analysis.h

150:75-150:76
Wed Sep 02 18:04:49 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e4d42ed5_74ec66ca
Bytes: 6
, -> .

150:75-150:76
Wed Sep 02 18:06:49 2015 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e4d42ed5_74ec66ca
UUID: 64ecbece_eda0a561
Bytes: 4
Done

