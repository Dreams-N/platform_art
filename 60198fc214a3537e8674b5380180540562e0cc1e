Revision: 60198fc214a3537e8674b5380180540562e0cc1e
Patch-set: 2
File: compiler/optimizing/builder.cc

314:21-314:30
Wed May 14 09:24:31 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2a07c8cc_d7597c36
Bytes: 54
This check is to enable compilation of the boot image.

File: compiler/optimizing/graph_tracer.cc

164:9-164:16
Wed May 14 09:28:54 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ea9db0d4_41bae2ad
Bytes: 60
prefer to using the indenting ostream? see usage in oatdump?

164:9-164:16
Wed May 14 11:01:40 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ea9db0d4_41bae2ad
UUID: 2a07c8cc_f7af606a
Bytes: 233
Thanks for the pointer. I looked at it and tried to use it, but the visitor nature of this class make it cumbersome to use, e.g. we need to pass the ostream to all functions, but VisitInstruction can't take more than the instruction.

164:9-164:16
Wed May 14 13:03:17 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2a07c8cc_f7af606a
UUID: 0a1cc41d_169bfcec
Bytes: 82
Can't you access the ostream as a field, so it's accessible in all these methods ?

164:9-164:16
Wed May 14 13:10:58 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0a1cc41d_169bfcec
UUID: 0a1cc41d_364c38a9
Bytes: 250
I could, but that would mean this field points to something on the stack, which I find error prone. Another option that I thought of was stacking up HGraphVisualizerPrinter objects with indented versions of the stream, but that felt over-engineering.

File: compiler/optimizing/graph_tracer.h

48:14-48:15
Wed May 14 09:28:54 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: caaaaceb_f2f7603d
Bytes: 7
* const

48:14-48:15
Wed May 14 11:01:40 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: caaaaceb_f2f7603d
UUID: 0a1cc41d_16b77cc5
Bytes: 4
Done

49:8-49:10
Wed May 14 09:28:54 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: caaaaceb_d2fce422
Bytes: 7
* const

49:8-49:10
Wed May 14 11:01:40 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: caaaaceb_d2fce422
UUID: 8a08b4da_daa1a599
Bytes: 4
Done

50:0-50:19
Wed May 14 09:28:54 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: aaa73822_cb98b5f3
Bytes: 6
cruft?

50:0-50:19
Wed May 14 09:33:15 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: aaa73822_cb98b5f3
UUID: 0a1cc41d_369d5888
Bytes: 58
Agreed: (output_ != nullptr) should be do the job, right ?

50:0-50:19
Wed May 14 11:01:40 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0a1cc41d_369d5888
UUID: 8a08b4da_1ab4bdd6
Bytes: 130
No is_enabled_ is true if output is not null and the method's name contain the filter given in the constructor. I added a comment.

File: compiler/optimizing/optimizing_compiler.cc

58:15-58:20
Wed May 14 09:28:54 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: aaa73822_2b9e99dc
Bytes: 64
Visualizer? to avoid further overloading our notion of trace :-)

58:15-58:20
Wed May 14 09:33:15 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: aaa73822_2b9e99dc
UUID: 0a1cc41d_7697d067
Bytes: 88
I'd recomment to reflect this change in the new code (HGraphTracer to HGraphVisualizer?)

58:15-58:20
Wed May 14 11:01:40 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: aaa73822_2b9e99dc
UUID: 0a1cc41d_565c54d0
Bytes: 4
Done

58:15-58:20
Wed May 14 11:01:40 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0a1cc41d_7697d067
UUID: 8a08b4da_5ad595ec
Bytes: 4
Done

