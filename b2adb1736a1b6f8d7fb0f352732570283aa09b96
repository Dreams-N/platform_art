Revision: b2adb1736a1b6f8d7fb0f352732570283aa09b96
Patch-set: 2
File: compiler/optimizing/code_generator_mips64.cc

2432:0-2433:68
Fri Sep 25 00:19:18 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ae5bf53d_7c6add2a
Bytes: 26
Nit: put on a single line.

2432:0-2433:68
Fri Sep 25 17:14:48 2015 +0000
Author: Chris Larsen <1071873@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ae5bf53d_7c6add2a
UUID: ee616dea_7e79b559
Bytes: 4
Done

File: compiler/optimizing/intrinsics_mips64.cc

28:0-28:30
Wed Sep 23 19:33:20 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e90b27d5_b954bfc9
Bytes: 52
I think this should go above all the other includes.

28:0-28:30
Wed Sep 23 20:36:24 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e90b27d5_b954bfc9
UUID: e9b08755_2550869f
Bytes: 40
Yes, that's our style, thanks, Vladimir.

28:0-28:30
Fri Sep 25 17:14:48 2015 +0000
Author: Chris Larsen <1071873@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e9b08755_2550869f
UUID: 8e52b121_c616a281
Bytes: 4
Done

52:11-52:15
Fri Sep 25 00:19:18 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ee616dea_c349eafb
Bytes: 161
I'd replace this with `assembler` (and adjust other uses below).

`masm` is used in ARM64, because of VIXL's MacroAssembler, but does not really make sense here.

52:11-52:15
Fri Sep 25 17:14:48 2015 +0000
Author: Chris Larsen <1071873@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ee616dea_c349eafb
UUID: ae5bf53d_53a5c7a4
Bytes: 4
Done

63:0-64:37
Fri Sep 25 00:19:18 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ae5bf53d_30bc89ef
Bytes: 170
Replace with

  FpuRegister input = locations->InAt(0).AsFpuRegister<FpuRegister>();
  GpuRegister output = locations->Out().AsRegister<GpuRegister>();

(here and below).

63:0-64:37
Fri Sep 25 17:14:48 2015 +0000
Author: Chris Larsen <1071873@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ae5bf53d_30bc89ef
UUID: 4e4c398b_7e6ad12a
Bytes: 4
Done

File: compiler/optimizing/intrinsics_mips64.h

70:2-70:17
Wed Sep 23 04:03:30 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e9b08755_148bfaa2
Bytes: 26
This is missing a forward?

70:2-70:17
Wed Sep 23 19:18:41 2015 +0000
Author: Chris Larsen <1071873@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e9b08755_148bfaa2
UUID: e9b08755_37c600a4
Bytes: 261
The header file intrinsics.h, above, includes code_generator.h; code_generator.h includes utils/label.h; utils/label.h declares Mips64Assembler.

Are you saying you think the code would be more readable if I added "class Mips64Assembler;" around line 31, or so?

70:2-70:17
Wed Sep 23 19:33:20 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e9b08755_37c600a4
UUID: 69ee5738_5d40fbfb
Bytes: 185
Yes, I believe stuff you're using should be forward declared or explicitly included. I've been adding explicit includes all over the place for things that were included only indirectly.

70:2-70:17
Wed Sep 23 20:36:24 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 69ee5738_5d40fbfb
UUID: 4916f301_88688701
Bytes: 345
We still rely quite a bit on transitive includes, but trying to go to include-what-you-use. It means that the dependencies are more explicit and visible, so you know what you're pulling in (or depending on) when you include a header / .cc file.

For example, the transitive chain you mention makes it harder to reason about separated backends...

70:2-70:17
Fri Sep 25 17:14:48 2015 +0000
Author: Chris Larsen <1071873@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 4916f301_88688701
UUID: 6e4d7d85_45350a0c
Bytes: 32
Agreed. Forward reference added.

