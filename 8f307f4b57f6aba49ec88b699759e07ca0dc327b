Revision: 8f307f4b57f6aba49ec88b699759e07ca0dc327b
Patch-set: 2
File: runtime/class_linker.cc

2579:25-2579:43
Thu Feb 18 15:01:26 2016 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1d9d30d4_8d6081ae
Bytes: 295
I don't think the purpose of that method is to handle instrumentation/debugging. IIRC, its purpose is really to return the correct bridge depending on the nature of the method, not the context.

I think a better place is in the callers, at least the ones that change entrypoint during execution.

2588:27-2588:40
Thu Feb 18 15:01:26 2016 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3da2f411_cef56336
Bytes: 34
ShouldUseInterpreterEntrypoint now

2643:0-2646:32
Thu Feb 18 15:49:54 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3dcbd4e3_e63e7ea2
Bytes: 226
Is that enough? Do we guarantee compiled code in the oat file will have their declaring class in the art file?

How about we just make this return false, always? I know it will make aot compiled code with --debuggable useless.

File: runtime/debugger.cc

574:6-574:35
Thu Feb 18 15:01:26 2016 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9dda00a8_49bfa182
Bytes: 42
Please add a comment describing the class.

634:0-634:37
Thu Feb 18 15:49:54 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1d9d30d4_cd68c986
Bytes: 26
Why do you need this flag?

