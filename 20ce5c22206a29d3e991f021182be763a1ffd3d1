Revision: 20ce5c22206a29d3e991f021182be763a1ffd3d1
Patch-set: 19
File: compiler/optimizing/ssa_liveness_analysis.h

387:39-388:9
Fri Apr 17 15:34:22 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b0926a12_9281ead4
Bytes: 113
And it's because of holes that you cannot DCHECK that right? Could you integrate the notion of holes in a DCHECK?

387:39-388:9
Fri Apr 17 16:06:10 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b0926a12_9281ead4
UUID: b0926a12_f25aae0a
Bytes: 165
There is a DCHECK in FindRangeAtOrAfter. As we discussed, it will allow an earlier position if it happens to fall into the same hole but the result is still correct.

396:7-396:18
Fri Apr 17 15:43:19 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 90a1e660_766d3084
Bytes: 16
Nit: CoversSlow?

396:7-396:18
Fri Apr 17 16:06:10 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 90a1e660_766d3084
UUID: b0926a12_d261b2b9
Bytes: 91
Do we have something similar somewhere else? Don't know what the rule for this is. Renamed.

407:0-410:5
Fri Apr 17 15:34:22 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 709c722a_909a4245
Bytes: 39
Please add a comment on what this does.

407:0-410:5
Fri Apr 17 16:06:10 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 709c722a_909a4245
UUID: 90a1e660_9659dce3
Bytes: 4
Done

