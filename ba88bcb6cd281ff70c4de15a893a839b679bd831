Revision: ba88bcb6cd281ff70c4de15a893a839b679bd831
Patch-set: 3
File: compiler/optimizing/inliner.cc

254:8-254:67
Tue Apr 07 17:56:02 2015 +0000
Author: Razvan A Lupusoru <1013855@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c375563f_4eb4b3c4
Bytes: 124
The throwers which pass the criteria (as tested on core.oat) are LoadClass, NullCheck, BoundsCheck, CheckCast, DivZeroCheck.

254:8-254:67
Tue Apr 07 18:35:38 2015 +0000
Author: Razvan A Lupusoru <1013855@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: c375563f_4eb4b3c4
UUID: c375563f_ce95031a
Bytes: 324
I think that this check needs to be strengthened to not allow cases that escape to runtime without ending current method's context. Namely, likely LoadClass should not be supported here unless we can guarantee that the only runtime interaction is finding the class, not doing GC or something else. What do you think Nicolas?

