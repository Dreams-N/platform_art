Revision: a131103c2c4e7926a2f42b1ffda42bcbe0c8b544
Patch-set: 1
File: compiler/elf_writer_quick.cc

154:2-167:48
Thu Jun 05 21:36:50 2014 +0000
Author: Dave Allison <1036486@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7f1c24fb_c1ae3173
Bytes: 103
How about modularizing this too rather than the repeated code?  Likewise for all the similar code below

228:0-228:51
Thu Jun 05 21:36:50 2014 +0000
Author: Dave Allison <1036486@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: bf293c21_1d0a5740
Bytes: 48
Modularize this rather than repeated code below?

File: compiler/elf_writer_quick.h

20:0-21:22
Fri Jun 06 21:17:17 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: df2c3030_069f5a51
Bytes: 19
alphabetical please

21
Fri Jun 06 23:32:19 2014 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: df2c3030_069f5a51
UUID: ff749443_6eb40f0d
Bytes: 4
Done

52:4-52:28
Fri Jun 06 21:17:17 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: df2c3030_86860a00
Bytes: 141
our style has been to put this in a private: section at the end. also add DISALLOW_ macros as appropriate to prevent accidental constructors.

52
Fri Jun 06 23:32:19 2014 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: df2c3030_86860a00
UUID: ff749443_ae2bd771
Bytes: 163
Moved the friend.

At the moment I do actually use the assign constructor in a few places to make lifetimes easier to think about. I can rewrite these if you want.

98:4-98:10
Fri Jun 06 21:17:17 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: df4350e0_20c34e72
Bytes: 107
not sure we use inline unless it critical, I'd leave it off by default, it will probably be inlined anyway.

98
Fri Jun 06 23:32:19 2014 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: df4350e0_20c34e72
UUID: ff749443_4e3113dd
Bytes: 4
Done

105:0-110:5
Fri Jun 06 21:17:17 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: bf505ca5_c8173cd7
Bytes: 30
we try to use just // comments

110
Fri Jun 06 23:32:19 2014 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: bf505ca5_c8173cd7
UUID: 7f33447f_85757dde
Bytes: 4
Done

117:4-118:24
Fri Jun 06 21:17:17 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1f1b2808_b284a484
Bytes: 180
what is this used for? the x86 info?

could the data be passed at construction time?
could we take ownership rather than copy the data? presumably the caller won't need it anymore?

118
Fri Jun 06 23:32:19 2014 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1f1b2808_b284a484
UUID: bf505ca5_4e225599
Bytes: 132
Yeah this is for the x86 intro. We only actually copy a single buffer. The other 3 we just pass the function the ones in this class.

156:27-156:34
Fri Jun 06 21:17:17 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1f1b2808_1241d06c
Bytes: 131
are their elf types for these uint8_t values? as I recall, they just get stored into a Elf..._Word, so probably this is fine as is.

156
Fri Jun 06 23:32:19 2014 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1f1b2808_1241d06c
UUID: bf505ca5_ae3199df
Bytes: 3
No.

162:44-162:65
Fri Jun 06 21:17:17 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1f1b2808_126a30f7
Bytes: 42
style is to have whitespace around ? and :

162
Fri Jun 06 23:32:19 2014 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1f1b2808_126a30f7
UUID: 7f33447f_e54fa99f
Bytes: 4
Done

169:4-169:24
Fri Jun 06 21:17:17 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: df2c3030_a6e0e6ac
Bytes: 139
this could be big. shouldn't we pass back a pointer to the data that the caller should take ownership of?

similar for the next two methods

169
Fri Jun 06 23:32:19 2014 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: df2c3030_a6e0e6ac
UUID: 1f1b2808_bd4c75ac
Bytes: 304
The vector will store its payload on the heap and IIRC the compiler should be able to recognize that no aliasing occurs within this function and should only copy the relatively small (~20 bytes) vector data-structure on return, not the larger payload.

Still I can change these if you think its worth it.

186:6-186:29
Fri Jun 06 21:17:17 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: df4350e0_2044ae2e
Bytes: 43
should we what it is used for during Write?

186
Fri Jun 06 23:32:19 2014 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: df4350e0_2044ae2e
UUID: ff749443_ae42f71f
Bytes: 4
Done

198:8-198:28
Fri Jun 06 21:17:17 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: df4350e0_0043b226
Bytes: 258
class doc for purpose? this is probably true for most of the classes.

this almost seems like it is for unit testing.

speaking of which, you probably want to add some unit tests of your new API to elf_writer_test, or actually to a new elf_writer_quick_test.

198
Fri Jun 06 23:32:19 2014 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: df4350e0_0043b226
UUID: 7f33447f_08e7444c
Bytes: 175
Removed Entierly.

It currently passes all of the tests for the old ElfWriterQuick. This API is entierly private to ElfWriterQuick. It seems like the old tests should be okay.

215:15-215:36
Fri Jun 06 21:17:17 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: df4350e0_00fe5288
Bytes: 18
can this be const?

215
Fri Jun 06 23:32:19 2014 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: df4350e0_00fe5288
UUID: bf505ca5_6e895112
Bytes: 4
Done

255:4-261:5
Fri Jun 06 21:17:17 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: df4350e0_60edd6d9
Bytes: 77
can we avoid copy? I assume caller won't want the data after giving it to us.

261
Fri Jun 06 23:32:19 2014 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: df4350e0_60edd6d9
UUID: 1f1b2808_7d56dd38
Bytes: 110
Maybe. I put the copy in because it means I don't need to deal with lifetime issues of the passed in sections.

265:1-267:1
Fri Jun 06 21:17:17 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: bf505ca5_08a5248f
Bytes: 7
remove?

267
Fri Jun 06 23:32:19 2014 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: bf505ca5_08a5248f
UUID: 7f33447f_253cb1ff
Bytes: 4
Done

268:1-268:27
Fri Jun 06 21:17:17 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: bf505ca5_28aa6061
Bytes: 7
remove?

268
Fri Jun 06 23:32:19 2014 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: bf505ca5_28aa6061
UUID: bf505ca5_4e77b555
Bytes: 4
Done

270:4-270:22
Fri Jun 06 21:17:17 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7f33447f_937aaafe
Bytes: 39
perhaps a clearer name. debug_logging_?

270
Fri Jun 06 23:32:19 2014 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7f33447f_937aaafe
UUID: 1f1b2808_1d424175
Bytes: 4
Done

281:4-281:46
Fri Jun 06 21:17:17 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: bf505ca5_c8ae5c73
Bytes: 117
still unclear what this is for.

is this for the oat related symbols? that is what I assumed symtab_builder_ was for.

281
Fri Jun 06 23:32:19 2014 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: bf505ca5_c8ae5c73
UUID: bf505ca5_8e5dbdcd
Bytes: 71
Removed it entierly. It was something I thought I would need but don't.

332:22-332:55
Fri Jun 06 21:17:17 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3f162cdd_8a560d36
Bytes: 24
const vector and pieces?

332
Fri Jun 06 23:32:19 2014 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3f162cdd_8a560d36
UUID: bf505ca5_6ec3911b
Bytes: 167
Done.

This will write out most of the file (everything except oat file data. Also the comment is lying. It doesn't perform bounds checking, I've removed this comment.

