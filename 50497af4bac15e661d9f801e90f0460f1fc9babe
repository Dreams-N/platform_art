Revision: 50497af4bac15e661d9f801e90f0460f1fc9babe
Patch-set: 3
File: compiler/optimizing/graph_visualizer.cc

474:45-474:61
Thu Jul 16 10:12:00 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d8470aeb_610ad0da
Bytes: 16
Why this change?

File: compiler/optimizing/reference_type_propagation.cc

184:0-186:91
Thu Jul 16 10:12:00 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b8fdf6c1_eb05654d
Bytes: 10
unrelated?

279:0-279:84
Thu Jul 16 10:12:00 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b8fdf6c1_ab0f6d69
Bytes: 23
Why not doing this now?

291:10-291:18
Thu Jul 16 10:12:00 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b8fdf6c1_8b14b17c
Bytes: 114
Should you break and ensure that there are no users of the original object that strictly dominates the check cast?

