Revision: 50497af4bac15e661d9f801e90f0460f1fc9babe
Patch-set: 3
File: compiler/optimizing/graph_visualizer.cc

474:45-474:61
Thu Jul 16 10:12:00 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d8470aeb_610ad0da
Bytes: 16
Why this change?

474:45-474:61
Thu Jul 16 10:18:21 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d8470aeb_610ad0da
UUID: 38e906fb_748f26b1
Bytes: 138
It's easier to write tests and reduces the verbosity of the .cfg.

I see little value prefixing all the classes with java.lang.Class<....>

File: compiler/optimizing/reference_type_propagation.cc

184:0-186:91
Thu Jul 16 10:12:00 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b8fdf6c1_eb05654d
Bytes: 10
unrelated?

184:0-186:91
Thu Jul 16 10:18:21 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b8fdf6c1_eb05654d
UUID: b8fdf6c1_eb2e85cb
Bytes: 147
Yea, it's not really related but is exposed by the same type of failure: after inlining we were widening the type to not-exact which was confusing.

279:0-279:84
Thu Jul 16 10:12:00 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b8fdf6c1_ab0f6d69
Bytes: 23
Why not doing this now?

279:0-279:84
Thu Jul 16 10:18:21 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b8fdf6c1_ab0f6d69
UUID: 38e906fb_14869a9a
Bytes: 130
commented previously: I rebase the other CL on top of this one and it's a pain to deal with the merge. I'll fix up in a follow up.

291:10-291:18
Thu Jul 16 10:12:00 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b8fdf6c1_8b14b17c
Bytes: 114
Should you break and ensure that there are no users of the original object that strictly dominates the check cast?

291:10-291:18
Thu Jul 16 10:18:21 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b8fdf6c1_8b14b17c
UUID: 18f0c2db_1630dcee
Bytes: 25
yeah, that's a good idea.

