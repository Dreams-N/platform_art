Revision: 72287bee5d5405892b4e81cc268783acf65566e4
Patch-set: 6
File: compiler/optimizing/stack_map_stream.h

44:34-44:41
Fri Mar 20 15:29:31 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 266e407b_acc9aba9
Bytes: 7
indices

44:34-44:41
Fri Mar 20 16:00:03 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 266e407b_acc9aba9
UUID: 466b346a_4d24add9
Bytes: 4
Done

281:59-281:71
Fri Mar 20 15:29:31 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 466b346a_cd089d61
Bytes: 19
entry_index values?

281:59-281:71
Fri Mar 20 16:00:03 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 466b346a_cd089d61
UUID: 266e407b_cc2f3fba
Bytes: 4
Done

319:11-319:41
Fri Mar 20 15:29:31 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 466b346a_ad17697c
Bytes: 71
Why returning `hash * entry.num_dex_registers'; instead of just `hash'?

319:11-319:41
Fri Mar 20 16:00:03 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 466b346a_ad17697c
UUID: 266e407b_6c2173c8
Bytes: 108
Remnant of another strategy. Should be removed. I also took into account the kind and value of the location.

359:27-359:35
Fri Mar 20 15:29:31 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 667af834_ae275766
Bytes: 16
Dex register map

359:27-359:35
Fri Mar 20 16:00:03 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 667af834_ae275766
UUID: 667af834_eec1dfd1
Bytes: 4
Done

360:2-360:9
Fri Mar 20 15:29:31 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 466b346a_4dfd8daf
Bytes: 25
Is this really necessary?

360:34-360:55
Fri Mar 20 15:29:31 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 466b346a_6dfad1ba
Bytes: 201
Likewise, I think it would be better to name this dex_register_map_hashes_cache_ for the sake of uniformity.  I know those names are long, but I prefer lengthy names over non-uniform or ambiguous ones.

360:34-360:55
Fri Mar 20 16:00:03 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 466b346a_6dfad1ba
UUID: 266e407b_ec632314
Bytes: 71
oki... tough it's getting harder and hard to read with such long names.

360:2-360:9
Fri Mar 20 16:00:03 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 466b346a_4dfd8daf
UUID: 266e407b_8c6867f2
Bytes: 155
i'd have to unconst a lot just because the cache implementation details. I think we're good exposing const function and keep the cache as a mutable detail.

361:10-361:17
Fri Mar 20 15:29:31 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 667af834_8e229b57
Bytes: 6
Ditto.

361:10-361:17
Fri Mar 20 16:00:03 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 667af834_8e229b57
UUID: 667af834_4e9833f5
Bytes: 4
Done

362:2-363:93
Fri Mar 20 15:29:31 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 266e407b_4ccfcfab
Bytes: 120
Yeah, you may want to use an art::HashMap here (I've used one in https://android-review.googlesource.com/#/c/142375/3)/.

363:2-363:9
Fri Mar 20 15:29:31 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 667af834_4e0d93e9
Bytes: 6
Ditto.

363:58-363:92
Fri Mar 20 15:29:31 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 667af834_0e178bfb
Bytes: 44
dex_register_map_hash_to_stack_map_indices_?

363:2-363:9
Fri Mar 20 16:00:03 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 667af834_4e0d93e9
UUID: 667af834_8e9dbbe8
Bytes: 5
ditto

363:58-363:92
Fri Mar 20 16:00:03 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 667af834_0e178bfb
UUID: 466b346a_0d7d55ae
Bytes: 104
let's keep this one without a register. It's way too long... Unless you have a better naming suggestion?

362:2-363:93
Fri Mar 20 16:00:03 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 266e407b_4ccfcfab
UUID: 667af834_aecbd7ef
Bytes: 166
I know, but I don't want to share state with the function classes. Right now we don't get any consistent increase in compile times with my tests so I think we're good

