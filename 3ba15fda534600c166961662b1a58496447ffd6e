Revision: 3ba15fda534600c166961662b1a58496447ffd6e
Patch-set: 2
File: compiler/optimizing/graph_checker.cc

162:13-162:25
Mon Sep 22 14:19:29 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 508bd76f_df46078d
Bytes: 181
Maybe move all the code below to a CheckLoop method. The method should also check that all blocks in the loop are dominated by the loop header. Can be done in a different CL though.

168:8-168:10
Mon Sep 22 14:19:29 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9081cf4e_815264f1
Bytes: 41
I think you can move this one line above.

183:0-183:62
Mon Sep 22 14:19:29 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b05413b2_0909cdbd
Bytes: 57
Also check that the first predecessor is not a back edge.

189:6-189:8
Mon Sep 22 14:19:29 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9081cf4e_414c7c54
Bytes: 111
Matter of style, but I suggest moving this check line 180 as an else if, and then the code line 181 as an else.

250:4-250:7
Mon Sep 22 14:19:29 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 508bd76f_7f4fdba3
Bytes: 110
The double loop is odd: you only need one loop: a phi input at index I is the input coming from predecessor I.

