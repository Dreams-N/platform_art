Revision: 944d3a397df2c5e5d943be366bc9b2836fa3ebf6
Patch-set: 24
File: compiler/optimizing/instruction_simplifier.cc

570:33-570:47
Wed Jan 27 11:54:36 2016 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 54a782d1_80dff82a
Bytes: 109
I think I proposed this before: how about having a GetTrue/ GetFalse in the graph? Can do in a subsequent CL.

600:4-600:50
Wed Jan 27 11:54:36 2016 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 34b68e05_9f9d174e
Bytes: 22
What does this buy us?

622:20-622:44
Wed Jan 27 11:54:36 2016 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b417ded7_d8d06df0
Bytes: 64
Similar suggestion as above: Have, IsBooleanFalse/IsBooleanTrue.

File: compiler/optimizing/prepare_for_register_allocation.cc

130:35-130:51
Wed Jan 27 12:49:56 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b417ded7_b8c8192f
Bytes: 266
I guess you can always emit... I find this method a bit confusing on what it does. I would either call it just for a select user, and name it SelectCanInlineCondition or something, or have a larger scope method that returns whether a condition needs materialization.

137:4-137:50
Wed Jan 27 11:28:17 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d49b728b_a410cc9b
Bytes: 65
How about doing this check first and return true if it's not x86?

137:4-137:50
Wed Jan 27 11:53:21 2016 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d49b728b_a410cc9b
UUID: d4c4527f_bcf46dac
Bytes: 92
Huh? Even on non-x86 you still need to test if the user is a Select and return false if not.

137:4-137:50
Wed Jan 27 12:01:25 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d4c4527f_bcf46dac
UUID: b4bb5ef1_d8828d27
Bytes: 18
What about x86-64?

137:4-137:50
Wed Jan 27 12:49:56 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b4bb5ef1_d8828d27
UUID: d4c4527f_bc98ed5d
Bytes: 74
We have enough registers on it, especially since a long only requires one.

137:4-137:50
Wed Jan 27 12:49:56 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d4c4527f_bcf46dac
UUID: b4bb5ef1_3bce2388
Bytes: 73
Oh ok, did not realize that you could return false still if it's not x86.

189:4-189:9
Wed Jan 27 11:54:36 2016 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f4c1566d_dac965ad
Bytes: 75
8 spaces alignment.
I think it will look better if you split the arguments.

File: compiler/optimizing/select_generator.cc

21:24-21:48
Wed Jan 27 11:54:36 2016 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b4bb5ef1_5888bd4b
Bytes: 106
Will you ever be able to handle more than 1 instruction in a branch? If not, consider being more specific.

File: compiler/optimizing/select_generator.h

37:3-37:7
Wed Jan 27 11:54:36 2016 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 34b68e05_7f836bf1
Bytes: 112
As a follow up, we should enforce this for our sanity. We already have something similar: side_effects.HasRun().

