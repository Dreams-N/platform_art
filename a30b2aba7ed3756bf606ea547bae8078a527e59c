Revision: a30b2aba7ed3756bf606ea547bae8078a527e59c
Patch-set: 3
File: runtime/base/memory_tool.h

1:0-2:37
Fri May 29 03:37:41 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ed56c9ec_34243f66
Bytes: 18
Copyright missing.

12:8-14:66
Fri May 29 03:37:41 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ed56c9ec_b4182f29
Bytes: 223
IMHO those names aren't very good. The original valgrind ones at least had valgrind in the name, so the intent was very clear. MAKE_MEM_NOACCESS could just as well be a certain mmap protection scheme...

Please add a prefix

17:0-18:36
Fri May 29 03:37:41 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b9f6d849_5736d4a3
Bytes: 238
No, please don't use untyped macros, this is C++11.

Please make this a proper constexpr bool (there's no reason below to use the RUNNING_ON_VALGRIND macro, all usages of these flags should already be protected by RUNNING_ON_MEMORY_TOOL).

16:0-18:36
Fri May 29 19:35:37 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6d42d931_f422c922
Bytes: 82
Does this mean that these could have independently different values in the future?

17:0-18:36
Fri May 29 19:59:52 2015 +0000
Author: Evgenii Stepanov <1005967@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b9f6d849_5736d4a3
UUID: ed56c9ec_a528f601
Bytes: 198
In case of Valgrind, this is a runtime condition. It's probably not a good idea for it to be a constexpr bool in one #if branch, and something else (like a macro or an inline function) on the other.

16:0-18:36
Fri May 29 19:59:52 2015 +0000
Author: Evgenii Stepanov <1005967@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6d42d931_f422c922
UUID: ed56c9ec_05d1c27c
Bytes: 57
Potentially, yes, if when add MemorySanitizer to the mix.

33:28-33:39
Fri May 29 03:40:51 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0d54fde2_36f0ce5f
Bytes: 142
This file isn't named sanitizer.h (even though I think this is a better name than memory_tool). The linter should actually break your build...

File: runtime/gc/allocator/rosalloc.cc

114:0-114:24
Fri May 29 03:37:41 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ed56c9ec_f442b700
Bytes: 156
We're averse to #ifdefs in the code. Please consider a constexpr bool hiding the ifdef away.

(Also, is there a particular reason to only do this for ASAN?)

File: runtime/gc/heap.cc

2066:4-2066:47
Fri May 29 14:27:41 2015 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 8d470d3e_13d12b00
Bytes: 68
Guard with ADDRESS_SANITIZER (or the corresponding constexpr flag) ?

File: runtime/gc/space/dlmalloc_space.cc

29:0-29:41
Fri May 29 14:27:41 2015 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 8d470d3e_53b3b3da
Bytes: 46
Includes are sorted, this should go to line 23

File: runtime/gc/space/memory_tool_malloc_space-inl.h

21
Fri May 29 14:27:41 2015 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d9fb8c32_e4464ed1
Bytes: 100
Remove empty line. We used to add such line when including header outisde of the project (<include>)

22:0-22:29
Fri May 29 14:27:41 2015 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 8d470d3e_73c0af2b
Bytes: 41
Includes are sorted, please move that up.

23
Fri May 29 14:27:41 2015 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6d42d931_007b943c
Bytes: 29
Remove empty line (see above)

File: runtime/gc/space/rosalloc_space-inl.h

37:19-37:44
Fri May 29 14:27:41 2015 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 8d470d3e_b3ea17a3
Bytes: 52
That definitely needs to be a 'constexpr bool' flag.

37:19-37:44
Fri May 29 19:35:37 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 8d470d3e_b3ea17a3
UUID: ed56c9ec_9a8c2d8a
Bytes: 2
+1

File: runtime/mem_map.cc

460:0-460:0
Fri May 29 03:37:41 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0d54fde2_76409614
Bytes: 47
Please don't add spurious non-related newlines.

467:4-467:54
Fri May 29 03:37:41 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b9f6d849_771af02d
Bytes: 52
?

We don't like to leave such comments in the code.

486:0-492:6
Fri May 29 03:37:41 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0d54fde2_b63afe91
Bytes: 92
Is there a problem with unconditionally doing this? I would think Valgrind would not care...

495:0-497:6
Fri May 29 03:37:41 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0d54fde2_16d2ead5
Bytes: 6
Ditto.

582:0-584:6
Fri May 29 03:37:41 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b9f6d849_b70f58e4
Bytes: 9
As above.

768:0-772:6
Fri May 29 03:37:41 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b9f6d849_973c5c86
Bytes: 9
As above.

File: runtime/mem_map.h

172:2-172:8
Fri May 29 14:27:41 2015 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 8d470d3e_f3e49fd8
Bytes: 12
const size_t

File: runtime/runtime.h

532:7-532:26
Fri May 29 14:27:41 2015 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d9fb8c32_04d13a73
Bytes: 127
IMO, it should have been named IsRunningOnMemoryTool in the first place. Since you rename it, you can also add the "Is" prefix.

File: runtime/utils_test.cc

29:0-29:29
Fri May 29 14:27:41 2015 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d9fb8c32_e4cd2ed7
Bytes: 27
Move to the top of includes

