Revision: fa6fcdc7fdcd5ee4b02e8ef7c912fb7c2e4f8fa4
Patch-set: 1
File: compiler/image_test.cc

167:60-167:64
Thu Apr 17 22:30:03 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 45586f41_421616e0
Bytes: 43
could be false, but its a test so who cares

167
Thu Apr 17 22:58:29 2014 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 45586f41_421616e0
UUID: 45586f41_e2d4ea7c
Bytes: 4
Done

File: compiler/image_writer.cc

182:34-182:38
Thu Apr 17 22:30:03 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 853507d4_721b2dd9
Bytes: 67
image writing is single threaded so this could be false (and below)

182
Thu Apr 17 22:58:29 2014 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 853507d4_721b2dd9
UUID: 45586f41_828bee9e
Bytes: 4
Done

File: runtime/mirror/object.cc

153:44-153:48
Thu Apr 17 22:30:03 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c51d3f5e_7e199e4e
Bytes: 120
can be false, ultimately we'll either succeed or CAS using this and so the CAS should provide sufficient memory barriers

153
Thu Apr 17 22:58:29 2014 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: c51d3f5e_7e199e4e
UUID: c51d3f5e_fe792e50
Bytes: 4
Done

File: runtime/mirror/object.h

103:28-103:39
Thu Apr 17 22:30:03 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 853507d4_92e45173
Bytes: 203
I would have thought volatility was a property of the field, perhaps rename this to be with_barriers, or as_volatile rather than is_volatile. A comment explaining usage both here and below would be good.

103
Thu Apr 17 22:58:29 2014 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 853507d4_92e45173
UUID: c51d3f5e_1e64ea9c
Bytes: 4
Done

File: runtime/monitor.cc

114:32-114:36
Thu Apr 17 22:30:03 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 45586f41_82ef6e67
Bytes: 46
can be false again as the CAS should be robust

114
Thu Apr 17 22:58:29 2014 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 45586f41_82ef6e67
UUID: 45586f41_4263b620
Bytes: 4
Done

577:0-577:71
Thu Apr 17 22:30:03 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 853507d4_12d861af
Bytes: 74
You can assert this with:
Locks::mutator_lock_->AssertExclusiveHeld(self);

577
Thu Apr 17 22:58:29 2014 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 853507d4_12d861af
UUID: 853507d4_8d2af29c
Bytes: 139
Doesn't work apparently, the image writer just has shared access to the mutator lock. I guess this is sound since there is only one thread.

File: runtime/thread.cc

879:26-879:30
Thu Apr 17 22:30:03 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 853507d4_b2a51529
Bytes: 75
read can be racy here as the dump is best effort.. we rarely take this case

879
Thu Apr 17 22:58:29 2014 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 853507d4_b2a51529
UUID: 853507d4_6d2fceae
Bytes: 4
Done

File: runtime/transaction_test.cc

58:49-58:53
Thu Apr 17 22:30:03 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c51d3f5e_deaf9280
Bytes: 41
can be false as test is single threaded..

58
Thu Apr 17 22:58:29 2014 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: c51d3f5e_deaf9280
UUID: c51d3f5e_7ef4fe3a
Bytes: 4
Done

