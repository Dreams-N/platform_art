Revision: a88a8326a81615fa96a0c7c1763cbed4d8a19c38
Patch-set: 4
File: compiler/optimizing/code_generator_x86.cc

1709:14-1709:38
Wed Nov 11 12:08:18 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 569062ca_bedd9995
Bytes: 46
Already true (`HInvokeStaticOrDirect* invoke`)

1709:14-1709:38
Wed Nov 11 13:58:37 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 569062ca_bedd9995
UUID: d67c5259_22588e08
Bytes: 48
Done. (I previously had this in HandleInvoke().)

3808:27-3808:64
Wed Nov 11 12:08:18 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 368beea4_bd2cbf8a
Bytes: 185
this is misleading name as you don't imply the usual "Get" meaning.

How about HandleCurrentMethod() ? or anything similar.

Also, please document at top level what this supposed to do.

3808:27-3808:64
Wed Nov 11 13:58:37 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 368beea4_bd2cbf8a
UUID: 96865a95_c07c3e06
Bytes: 114
Any proposal for a better name?

This is _not_ about the current method (though we could use it for that as well).

3808:27-3808:64
Wed Nov 11 14:31:55 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 96865a95_c07c3e06
UUID: 169a6aee_1c62158b
Bytes: 118
But according to line 3811 you only handle the location of the GetCurrentMethodInputIndex.

What else you handle here?

3808:27-3808:64
Wed Nov 11 14:41:40 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 169a6aee_1c62158b
UUID: 96865a95_c318c8c6
Bytes: 142
HX86ComputeBaseMethodAddress. We're already discussing the naming of GetCurrentMethodInputIndex() elsewhere, so don't drag the line 3811 here.

3808:27-3808:64
Mon Nov 16 16:55:47 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 96865a95_c318c8c6
UUID: 3b4e7783_a5df1e56
Bytes: 38
Hmm, I think I missed that discussion.

3824:28-3824:46
Wed Nov 11 12:08:18 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 368beea4_bdf3df5a
Bytes: 149
I think I miss something. This suggests that we GenerateStaticOrDirectCall only on slow paths which is not true. Do you need to test against nullptr?

3824:28-3824:46
Wed Nov 11 13:58:37 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 368beea4_bdf3df5a
UUID: f6bf9630_83ae9ec0
Bytes: 42
You missed the Intrinsified() check above.

3824:28-3824:46
Wed Nov 11 14:31:55 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f6bf9630_83ae9ec0
UUID: db11db43_5addd591
Bytes: 101
Right. Could you add a comment after that test? a DCHECK on slow_path with a message is equally good.

3824:28-3824:46
Wed Nov 11 14:41:40 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: db11db43_5addd591
UUID: b67fde4b_244fbcb8
Bytes: 60
I would think that the comment at line 3815 is close enough.

3824:28-3824:46
Thu Nov 12 10:45:11 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b67fde4b_244fbcb8
UUID: b67fde4b_64a9c4fc
Bytes: 17
Added a DCHECK().

3953:86-3953:88
Wed Nov 11 12:08:18 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: db11db43_7a6539c6
Bytes: 128
I know this is just a propagation of what it was before, bug could you please const-ify the magic number with a suggestive name?

3953:86-3953:88
Wed Nov 11 13:58:37 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: db11db43_7a6539c6
UUID: 169a6aee_dc30ad98
Bytes: 4
Done

File: compiler/optimizing/pc_relative_fixups_x86.cc

118:31-118:44
Wed Nov 11 12:08:18 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 368beea4_7d131742
Bytes: 136
How about we specialize this to SetCurrentMethod() ? I find InsertInputAt too generic and it's not something that we should normally do.

118:31-118:44
Wed Nov 11 13:58:37 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 368beea4_7d131742
UUID: 56278298_06865a82
Bytes: 150
I'd rather rename GetCurrentMethodInputIndex() to GetExtraArgumentsStartIndex() but that's quite invasive, so I would do it in a standalone rename CL.

118:31-118:44
Wed Nov 11 14:31:55 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 56278298_06865a82
UUID: 36220e8b_e59f7680
Bytes: 177
IMO GetExtraArgumentsStartIndex is worse. *ExtraArgument* doesn't tell me anything and suggest that anything could be there (which is not true, we know precisely what is there).

118:31-118:44
Wed Nov 11 14:41:40 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 36220e8b_e59f7680
UUID: 169a6aee_3c5fd1c1
Bytes: 220
"ExtraArgument" is deliberately supposed to _not_ tell you what it is. The very purpose of this CL is to put something else there - something architecture specific, so I wouldn't want to document that "extra" stuff here.

118:31-118:44
Mon Nov 16 16:55:47 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 169a6aee_3c5fd1c1
UUID: db11db43_00136a76
Bytes: 257
My main concern here is: "Do we document anywhere what the ExtraArgument can be?". As it is now, it's an unfortunate mix between your intention to make this opaque, and the rest of the code and method names which assumes we deal with the CurrentMethodIndex.

