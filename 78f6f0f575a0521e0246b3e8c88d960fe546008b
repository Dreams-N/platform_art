Revision: 78f6f0f575a0521e0246b3e8c88d960fe546008b
Patch-set: 1
File: compiler/optimizing/code_generator_arm64.cc

4362:24-4362:46
Thu Mar 17 19:49:23 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9cb846d6_3914cf95
Bytes: 13
Any constant.

4362:24-4362:46
Fri Mar 18 12:22:46 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 9cb846d6_3914cf95
UUID: 9ccf6672_014a2a25
Bytes: 59
I'm not sure to follow; what do you mean by "any constant"?

4362:24-4362:46
Fri Mar 18 12:41:20 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 9ccf6672_014a2a25
UUID: 5cd96e3d_5f2deb8c
Bytes: 171
ARM64EncodableConstantOrRegister() accepts only certain constants but we can use any constant here because we can encode any constant after the `& (lhs.SizeInBits() - 1)`.

4363
Thu Mar 17 19:49:23 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: fce942d0_7c18f9b6
Bytes: 191
In my opinion, this is going in the wrong direction. HRor should be unified with other shifts on all architectures. And I believe the other shifts also need to handle boolean/byte/short/char.

4363
Fri Mar 18 12:22:46 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: fce942d0_7c18f9b6
UUID: bcb50adc_da4ca544
Bytes: 141
Right; I reverted the changes in the code generators and made sure HRor's type was either int or long instead (which is admittedly simpler!).

