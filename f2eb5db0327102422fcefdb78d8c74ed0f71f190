Revision: f2eb5db0327102422fcefdb78d8c74ed0f71f190
Patch-set: 2
File: compiler/optimizing/builder.cc

409:13-409:18
Wed Jun 18 14:21:41 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 04803dc3_361498a3
Bytes: 49
Do you plan on addressing this in a new patchset?

409:13-409:18
Thu Jun 19 21:37:02 2014 +0000
Author: Dave Allison <1036486@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 04803dc3_361498a3
UUID: c4a70589_b80961ba
Bytes: 37
Yup, need to think some more about it

409:4-410:31
Thu Jun 19 17:04:25 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e47c09a6_15539416
Bytes: 77
We should add the same TODO for MOVE-WIDE instructions about long and double.

409:4-410:31
Thu Jun 19 21:37:02 2014 +0000
Author: Dave Allison <1036486@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e47c09a6_15539416
UUID: c4a70589_784529d3
Bytes: 4
Done

419:4-420:34
Thu Jun 19 17:04:25 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 246b81de_57c26c6e
Bytes: 29
What about MOVE_WIDE_FROM16 ?

419:4-420:34
Thu Jun 19 21:37:02 2014 +0000
Author: Dave Allison <1036486@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 246b81de_57c26c6e
UUID: 0443dd81_4473826b
Bytes: 4
Done

File: compiler/optimizing/code_generator.cc

54:10-54:17
Wed Jun 18 14:21:41 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 04803dc3_56bef453
Bytes: 74
I'd move this check to the visitor itself, it's very instruction specific.

54:10-54:17
Thu Jun 19 21:37:02 2014 +0000
Author: Dave Allison <1036486@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 04803dc3_56bef453
UUID: e43fa9e6_bd6c1fd9
Bytes: 4
Done

File: compiler/optimizing/code_generator_arm.cc

422:34-422:50
Wed Jun 18 14:21:41 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 04803dc3_16c87ce8
Bytes: 76
This should be Location::Any, and the register allocator will figure it out.

422:34-422:50
Thu Jun 19 21:37:02 2014 +0000
Author: Dave Allison <1036486@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 04803dc3_16c87ce8
UUID: 6471f9c6_3bf79af7
Bytes: 4
Done

428:2-428:7
Wed Jun 18 14:21:41 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 246b81de_377018eb
Bytes: 13
CHECK->DCHECK

428:2-428:7
Thu Jun 19 21:37:02 2014 +0000
Author: Dave Allison <1036486@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 246b81de_377018eb
UUID: c4a70589_d3e19ee9
Bytes: 4
Done

430:24-430:33
Wed Jun 18 14:21:41 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 04803dc3_f6ae201f
Bytes: 61
You should check if the compare instruction got materialized.

430:24-430:33
Thu Jun 19 21:37:02 2014 +0000
Author: Dave Allison <1036486@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 04803dc3_f6ae201f
UUID: c4a70589_f3de1a21
Bytes: 4
Done

File: compiler/optimizing/code_generator_arm.h

36:16-36:17
Wed Jun 18 14:21:41 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e47c09a6_555a6c63
Bytes: 48
Move this to the .cc file? It's only used there.

36:16-36:17
Thu Jun 19 21:37:02 2014 +0000
Author: Dave Allison <1036486@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e47c09a6_555a6c63
UUID: c4a70589_13117624
Bytes: 4
Done

File: compiler/optimizing/code_generator_x86.cc

419:34-419:50
Wed Jun 18 14:21:41 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 04803dc3_16e15c62
Bytes: 66
Did something broke and required to change this? It should be Any.

419:34-419:50
Thu Jun 19 21:37:02 2014 +0000
Author: Dave Allison <1036486@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 04803dc3_16e15c62
UUID: 6471f9c6_9b4a663a
Bytes: 4
Done

425:2-425:7
Wed Jun 18 14:21:41 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e47c09a6_3569f000
Bytes: 6
DCHECK

425:2-425:7
Thu Jun 19 21:37:02 2014 +0000
Author: Dave Allison <1036486@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e47c09a6_3569f000
UUID: 6471f9c6_3b3f9aa6
Bytes: 4
Done

426:11-426:14
Wed Jun 18 14:21:41 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 246b81de_9757a435
Bytes: 56
You should check if the condition has been materialized.

426:11-426:14
Thu Jun 19 21:37:02 2014 +0000
Author: Dave Allison <1036486@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 246b81de_9757a435
UUID: e43fa9e6_bde7ff4c
Bytes: 4
Done

438:13-438:14
Wed Jun 18 14:21:41 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e47c09a6_755f6852
Bytes: 197
No, this is guarded by LocationsBuilderX86::VisitCondition, which is a contract between the codegen and the register allocator. You are guaranteed to have the inputs at the locations you requested.

438:13-438:14
Thu Jun 19 21:37:02 2014 +0000
Author: Dave Allison <1036486@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e47c09a6_755f6852
UUID: e43fa9e6_fd0a273d
Bytes: 4
cool

501:34-501:44
Wed Jun 18 14:21:41 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 246b81de_3769f800
Bytes: 119
The following methods are very much alike. I'd do the same sharing as you did with LocationsBuilderX86::VisitCondition.

501:34-501:44
Thu Jun 19 21:37:02 2014 +0000
Author: Dave Allison <1036486@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 246b81de_3769f800
UUID: 6471f9c6_dbe8deca
Bytes: 34
Added Condition as in instruction.

File: compiler/optimizing/code_generator_x86.h

36:17-36:29
Wed Jun 18 14:21:41 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 04803dc3_d6da04a6
Bytes: 12
Move to .cc.

36:17-36:29
Thu Jun 19 21:37:02 2014 +0000
Author: Dave Allison <1036486@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 04803dc3_d6da04a6
UUID: e43fa9e6_3dc2cf6d
Bytes: 4
Done

File: compiler/optimizing/code_generator_x86_64.cc

298:34-298:50
Wed Jun 18 14:21:41 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 246b81de_b7542831
Bytes: 3
Any

298:34-298:50
Thu Jun 19 21:37:02 2014 +0000
Author: Dave Allison <1036486@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 246b81de_b7542831
UUID: c4a70589_53e7ee79
Bytes: 56
OK, I'll deal with the stack offset case as we do in X86

304:2-304:7
Wed Jun 18 14:21:41 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 246b81de_57434c79
Bytes: 6
DCHECK

304:2-304:7
Thu Jun 19 21:37:02 2014 +0000
Author: Dave Allison <1036486@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 246b81de_57434c79
UUID: e43fa9e6_9d55e3d8
Bytes: 4
Done

305:2-305:10
Wed Jun 18 14:21:41 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 246b81de_7748d092
Bytes: 45
Check if the condition has been materialized.

305:2-305:10
Thu Jun 19 21:37:02 2014 +0000
Author: Dave Allison <1036486@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 246b81de_7748d092
UUID: e43fa9e6_fd5227ec
Bytes: 4
Done

368:5-368:35
Wed Jun 18 14:21:41 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 246b81de_173dd4fb
Bytes: 43
Add a helper for the codegen methods below.

368:5-368:35
Thu Jun 19 21:37:02 2014 +0000
Author: Dave Allison <1036486@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 246b81de_173dd4fb
UUID: 6471f9c6_1b64169f
Bytes: 4
Done

File: compiler/optimizing/code_generator_x86_64.h

34:17-34:32
Wed Jun 18 14:21:41 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e47c09a6_d54d1ca9
Bytes: 16
Move to cc file.

34:17-34:32
Thu Jun 19 21:37:02 2014 +0000
Author: Dave Allison <1036486@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e47c09a6_d54d1ca9
UUID: e43fa9e6_3dee4fdd
Bytes: 4
done

File: compiler/optimizing/nodes.cc

450:6-450:18
Wed Jun 18 14:21:41 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e47c09a6_f54a988e
Bytes: 92
Since the uses is a linked list, I'd prefer adding a HasOnlyOneUse method in the Node class.

450:6-450:18
Thu Jun 19 21:37:02 2014 +0000
Author: Dave Allison <1036486@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e47c09a6_f54a988e
UUID: e43fa9e6_bd425f4f
Bytes: 4
Done

458:13-458:15
Wed Jun 18 14:21:41 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e47c09a6_55434c79
Bytes: 200
Maybe add a TODO that we could allow instructions in between but they should have no side effects. Alternatively, an optimization phase that moves instructions to their optimal place could also do it.

458:13-458:15
Thu Jun 19 21:37:02 2014 +0000
Author: Dave Allison <1036486@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e47c09a6_55434c79
UUID: c4a70589_938fa6d6
Bytes: 4
Done

File: compiler/optimizing/nodes.h

527:15-527:30
Wed Jun 18 14:21:41 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 246b81de_97300422
Bytes: 64
You actually already have IsCondition and IsIf defined line 530.

527:15-527:30
Thu Jun 19 21:37:02 2014 +0000
Author: Dave Allison <1036486@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 246b81de_97300422
UUID: 6471f9c6_3b9b1a66
Bytes: 4
Done

763:63-763:64
Wed Jun 18 14:21:41 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 246b81de_5ad4d156
Bytes: 25
I was told no space here.

763:63-763:64
Thu Jun 19 21:37:02 2014 +0000
Author: Dave Allison <1036486@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 246b81de_5ad4d156
UUID: c4a70589_f3fcda1e
Bytes: 38
Done, and the others in this file too.

764:26-764:27
Wed Jun 18 14:21:41 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 246b81de_7ad9958b
Bytes: 6
ditto.

764:26-764:27
Thu Jun 19 21:37:02 2014 +0000
Author: Dave Allison <1036486@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 246b81de_7ad9958b
UUID: c4a70589_9309e693
Bytes: 4
Done

839:36-839:47
Wed Jun 18 14:21:41 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 04803dc3_568834a3
Bytes: 93
Remove the IfCondition, and let the condition instruction return it (it statically knows it).

839:36-839:47
Thu Jun 19 21:37:02 2014 +0000
Author: Dave Allison <1036486@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 04803dc3_568834a3
UUID: e43fa9e6_bd837f44
Bytes: 4
Done

907:15-907:32
Wed Jun 18 14:21:41 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e47c09a6_b52d00cb
Bytes: 21
NeedsMaterialization?

907:15-907:32
Thu Jun 19 21:37:02 2014 +0000
Author: Dave Allison <1036486@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e47c09a6_b52d00cb
UUID: e43fa9e6_3d592f36
Bytes: 4
Done

