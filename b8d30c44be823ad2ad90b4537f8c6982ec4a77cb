Revision: b8d30c44be823ad2ad90b4537f8c6982ec4a77cb
Patch-set: 2
File: compiler/optimizing/graph_visualizer.cc

33:49-33:50
Thu May 14 14:56:04 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6d92d967_cbc135a0
Bytes: 7
const ?

38:68-38:70
Thu May 14 16:38:39 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ad885137_f0d5fee0
Bytes: 95
every time I read the spec for rvalue references I'm left with a bit of voodoo/magic feeling :P

40:24-40:39
Thu May 14 16:38:39 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ad885137_d0d8021a
Bytes: 66
how does this work? does it split the values in the head and tail?

78:2-79:12
Thu May 14 15:47:34 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ad885137_9003da10
Bytes: 67
What about:

  return os << "[ " << list.sstream_.str() << " ]";

?

186:6-186:35
Thu May 14 16:38:39 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 8d970d54_6fea0da3
Bytes: 61
is this a visualizer constraint or it's for the checker work?

210:18-210:19
Thu May 14 16:38:39 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 8d970d54_8fde5905
Bytes: 31
can you remind why we add this?

217:18-217:22
Thu May 14 14:56:04 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ad885137_90267ae4
Bytes: 11
unallocated

288:23-288:27
Thu May 14 14:56:04 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ad885137_7032ee21
Bytes: 1
_

File: compiler/optimizing/ssa_liveness_analysis.h

654:4-661:18
Thu May 14 15:47:34 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ad885137_b000d604
Bytes: 84
Pretty-printing ranges, uses and env_uses uses similar code; maybe try to factor it?

