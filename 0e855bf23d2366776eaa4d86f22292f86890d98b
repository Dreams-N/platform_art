Revision: 0e855bf23d2366776eaa4d86f22292f86890d98b
Patch-set: 3
File: compiler/optimizing/reference_type_propagation.cc

314:5-314:27
Fri Jun 12 13:34:35 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 79f8e0fa_dbb9b33b
Bytes: 37
Should that be compared against null?

314:5-314:27
Fri Jun 12 13:42:32 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 79f8e0fa_dbb9b33b
UUID: 99fd94eb_5c411db6
Bytes: 40
yes, you should to compare against null.

314:5-314:27
Fri Jun 12 13:55:06 2015 +0000
Author: Guillaume Sanchez <1068522@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 99fd94eb_5c411db6
UUID: 59823c52_b877a17c
Bytes: 119
Is there a technical reason for it, or do we just prefer for style reasons `if (ptr != nullptr)' instead of `if (ptr)'?

314:5-314:27
Fri Jun 12 14:09:32 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 59823c52_b877a17c
UUID: 79f8e0fa_db5ed36d
Bytes: 192
good code practices :). avoid obscure errors and adds clarity to the code. nullptr is actually typed and not implicitly convertible to integer so you can get better warnings from the compiler.

