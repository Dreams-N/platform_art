Revision: 9b982391c5d4a60e7e4d458d561f51c0927ffd0d
Patch-set: 14
File: compiler/optimizing/code_generator_x86.cc

2102:12-2102:16
Tue Nov 03 22:22:48 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 36c12e1a_6d5335c0
Bytes: 639
Ritz EAAC seems to crash on x86 for me.

It seems that the XMM7 gets clobbered occasionally in the read barrier slow path below and this hidden arg value won't be preserved for the subsequent call, because XMM7 isn't in the fp param register list. If I locally move this hidden arg loading code (lines 2101-2104) conditionally for the (kForceReadBarrier || kUseReadBarrier) case (and using temp3) to line 2125, it seems to go away.

The crash does not occur on x86_64 probably because the hidden arg RAX gets loaded after the read barrier slow path.

As this read barrier code here is planned to be removed, it may not matter now, however.

2102:12-2102:16
Wed Nov 04 15:00:57 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 36c12e1a_6d5335c0
UUID: 763d66ed_9f3153e9
Bytes: 374
Thanks for reporting this!  Indeed, I had moved this code (loading the hidden argument) in PS4 on x86-64 after the read barrier because the register where the hidden argument was loaded (RAX on x86-64) was clobbered by the read barrier slow path.

I did not think this issue could happen with XMM7 on x86, so I did not move that code for this target.  This is fixed in PS15.

