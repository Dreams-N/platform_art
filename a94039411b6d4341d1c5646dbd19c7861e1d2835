Revision: a94039411b6d4341d1c5646dbd19c7861e1d2835
Patch-set: 1
File: compiler/optimizing/register_allocator.cc

598:36-598:38
Fri Aug 21 14:15:14 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 24656596_0826a743
Bytes: 40
Nit: move to the beginning of next line.

598:36-598:38
Fri Aug 21 14:23:27 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 24656596_0826a743
UUID: 847a9131_6b5e41bf
Bytes: 96
C++ style guide says opposite, which I did not know. So we should now do at the end of the line.

930:4-930:48
Fri Aug 21 11:46:37 2015 +0000
Author: Serguei I Katkov <1040038@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a45875e6_64faea37
Bytes: 309
Do you think it is more efficient?
I thought about more complex algorithm. Say check whether deallocation will help to make a pair. for example break of non-aligned pair not definitely helps us to create a pair. If we have ecx,edx pair we always can create edi,edi pair. So no need to break ecx,edx, isn't it?

930:4-930:48
Fri Aug 21 12:43:21 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a45875e6_64faea37
UUID: 446ed97b_a972fd56
Bytes: 393
No it's not as efficient as trying to re-allocate the out register of the fuse compare. This change is fixing TrySplitNonPairOrUnalignedPairIntervalAt, which was obviously bogus.

I don't think any of our instructions involving longs now would lead us to a "Not enough registers" situation. So your other change (passing first_register_use - 1 instead) could still be a worthwile optimization.

