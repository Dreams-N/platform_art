Revision: 5cb200ffbaa33bb187358971711b1219fc6a9a75
Patch-set: 1
File: compiler/optimizing/intrinsics_x86.cc

944:77-944:82
Fri May 08 01:22:55 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 4d8435cc_da9c2d16
Bytes: 44
Just noticed this should be kCallOnSlowPath.

946:29-946:32
Fri May 08 10:53:08 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ad24d1ad_c10d723b
Bytes: 3
EDI

948:2-951:55
Fri May 08 00:50:00 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0d407d41_da30b296
Bytes: 246
The constant check could be done by checking the input value for IntConstant() with correct range, leaving it as a constant and then adding EAX as a temp.  You would then load it explicitly.  Saves a compare/branch and you can omit the slow case.

948:2-951:55
Fri May 08 01:02:13 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0d407d41_da30b296
UUID: cd24a5a6_e40aad57
Bytes: 361
If you do feel strongly, I'd suggest a follow-up CL. :-) Maybe Nicolas will override my opinion, though,.

I would have felt more strongly about it if it was possible to give the constraint to the register allocator, i.e., I could say that the input register is eax if it was a register. Else there's another register required, and x86 doesn't have that many...

948:2-951:55
Fri May 08 02:08:16 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: cd24a5a6_e40aad57
UUID: 4d36f5df_06ccaab6
Bytes: 292
You can do it programmatically by checking the input in the LocationsBuilder, and provide Location::ConstantLocation for an in range constant, else set the Location to EAX.  I think that scanning for a constant (i.e. '/') would be fairly common.  I can do it later if it seems like a problem.

953:19-953:22
Fri May 08 10:53:08 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2d62a1ee_3d9ea739
Bytes: 3
EDI

956:20-956:23
Fri May 08 10:53:08 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2d62a1ee_1da3e37f
Bytes: 3
ECX

996:5-996:23
Fri May 08 10:53:08 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ad24d1ad_2118b671
Bytes: 43
This is really: "Check if the length is 0".

1009:31-1009:34
Fri May 08 10:53:08 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2d62a1ee_fda7ef87
Bytes: 3
EDI

1042:34-1042:50
Fri May 08 00:50:00 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0d407d41_9a6c6a89
Bytes: 12
or constant?

1042:34-1042:50
Fri May 08 01:02:13 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0d407d41_9a6c6a89
UUID: 4d8435cc_f09d6c89
Bytes: 212
To wire that through, the below code becomes a bit more complicated and branch-y. Personally I don't think it's worth it, as I think it is a lot rarer than the case of the character being searched being constant.

1084:5-1084:22
Fri May 08 10:53:08 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: cd290587_c2fe9230
Bytes: 25
Check if the length is 0.

1106:37-1106:40
Fri May 08 10:53:08 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: cd290587_a2fb863e
Bytes: 3
EDI

File: compiler/optimizing/intrinsics_x86_64.cc

867:5-870:4
Fri May 08 00:50:00 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2d39c1d0_ba84d50f
Bytes: 5
ditto

867:5-870:4
Fri May 08 01:02:13 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2d39c1d0_ba84d50f
UUID: cd24a5a6_a43f15d8
Bytes: 110
Personally I think it's easier to justify here as we have more registers and don't necessarily be saving them.

915:5-915:22
Fri May 08 10:53:08 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: cd290587_821aca24
Bytes: 25
Check if the length is 0.

961:34-961:50
Fri May 08 00:50:00 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2d39c1d0_9a811100
Bytes: 5
ditto

1003:5-1003:22
Fri May 08 10:53:08 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: cd290587_621fde16
Bytes: 25
Check if the length is 0.

