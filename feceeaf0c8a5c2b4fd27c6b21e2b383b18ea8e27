Revision: feceeaf0c8a5c2b4fd27c6b21e2b383b18ea8e27
Patch-set: 5
File: dex2oat/dex2oat_test.cc

181:11-181:12
Thu Jun 30 14:59:51 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ddc00e18_10f16a03
Bytes: 35
Should be an error value, not zero.

181:11-181:12
Thu Jun 30 15:06:29 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ddc00e18_10f16a03
UUID: 20d49f7c_87f6a62e
Bytes: 4
Done

188:35-188:38
Thu Jun 30 14:59:51 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ddc00e18_30f6e6fc
Bytes: 138
read doesn't zero-terminate, and you don't leave space for it, anyways. You need to capture the result - it's the number of bytes written.

188:35-188:38
Thu Jun 30 15:00:53 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ddc00e18_30f6e6fc
UUID: ddc00e18_f0d7fe57
Bytes: 44
Plus it should be in a TEMP_FAILURE_RETRY...

188:35-188:38
Thu Jun 30 15:06:29 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ddc00e18_30f6e6fc
UUID: 20d49f7c_2706da17
Bytes: 68
I don't understand your comment. "Capture the result"? Which result?

188:35-188:38
Thu Jun 30 15:06:29 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ddc00e18_f0d7fe57
UUID: 20d49f7c_c7009efe
Bytes: 4
Done

188:35-188:38
Thu Jun 30 15:43:06 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 20d49f7c_c7009efe
UUID: ddc00e18_10e72a1c
Bytes: 805
The read call tries to read as many bytes as you tell it to:

 The read() function shall attempt to read nbyte bytes from the file associated with the open file descriptor, fildes, into the buffer pointed to by buf.

The result of the read call is the number of bytes written (if > 0).

 Upon successful completion, read() [XSI] [Option Start]  and pread() [Option End] shall return a non-negative integer indicating the number of bytes actually read. Otherwise, the functions shall return -1 and set errno to indicate the error.

The value of buffer does *not* form a C string, as it is not zero-terminated by the call (the memset will only ensure that it's correct for the very first string).

As such, you should take care of this yourself. One option is:

 output_ += std::string(buffer, read_result);

