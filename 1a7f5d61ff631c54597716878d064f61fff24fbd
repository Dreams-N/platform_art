Revision: 1a7f5d61ff631c54597716878d064f61fff24fbd
Patch-set: 3
File: runtime/thread_list.cc

112:17-112:42
Tue May 31 23:14:28 2016 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 39b855a6_47716e97
Bytes: 224
Won't this wait for 2s anytime someone has 2 threads and calls DestroyJavaVM? I suppose it might be OK, I wonder if there is a cleaner way. We could keep track of all the threads that were registered and only wait for those.

120:6-120:31
Tue May 31 23:54:38 2016 +0000
Author: Hans Boehm <1042828@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 39b855a6_877a060d
Bytes: 51
This is expected to include daemon threads plus us?

120:6-120:31
Wed Jun 01 00:02:13 2016 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 39b855a6_877a060d
UUID: 39b855a6_0aa85be6
Bytes: 13
I believe so.

122:8-122:34
Tue May 31 23:54:38 2016 +0000
Author: Hans Boehm <1042828@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 39b855a6_2a3d1f19
Bytes: 76
This presumably also includes unattached threads?  In which case this fails?

122:8-122:34
Wed Jun 01 00:02:13 2016 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 39b855a6_2a3d1f19
UUID: 39b855a6_cab1e355
Bytes: 4
yes.

