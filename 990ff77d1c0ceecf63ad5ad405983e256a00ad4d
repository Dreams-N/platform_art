Revision: 990ff77d1c0ceecf63ad5ad405983e256a00ad4d
Patch-set: 1
File: runtime/gc/accounting/card_table-inl.h

31:19-31:27
Tue Sep 06 23:38:02 2016 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 962843c7_19f577e8
Bytes: 80
This only handles the edge cases, most of the cards are still going to be CASed.

31:19-31:27
Mon Sep 12 21:54:01 2016 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 962843c7_19f577e8
UUID: 8b9bba7b_0085c43e
Bytes: 4
Done

32:7-32:14
Tue Sep 06 23:38:02 2016 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 962843c7_1921f761
Bytes: 394
I think this is broken for the case where it goes from
dirty - 1 to clean. If you don't use a CAS you can lose a write to the card table.

I.e.

old_value = kCardDirty - 1, new_value = 0 

*address == kCardDirty - 1 is true

// Mutator goes and writes card back to kCardDirty and writes some field in.

*address gets incorrectly set to 0 and doesn't get scanned even though it should have been.

32:7-32:14
Mon Sep 12 21:54:01 2016 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 962843c7_1921f761
UUID: 8b9bba7b_c0873c68
Bytes: 113
I don't believe this code is used for cleaning (you can see the uses of the code because I renamed the function).

32:7-32:14
Mon Sep 12 22:38:15 2016 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 8b9bba7b_c0873c68
UUID: 8b9bba7b_26c8209e
Bytes: 354
MarkSweep.cc calls
  heap_->ProcessCards(GetTimings(), false, true, GetGcType() != kGcTypeSticky);

Which has process_alloc_space_cards == true and clear_alloc_space_cards == false for sticky GC. This can get cause cards to get cleared for back to back sticky GC. This is done concurrently, so the non atomic version may cause objects to not get scanned.

174:30-174:56
Tue Sep 06 23:38:02 2016 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 962843c7_d9eabffe
Bytes: 17
Main CAS is here.

174:30-174:56
Mon Sep 12 21:54:01 2016 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 962843c7_d9eabffe
UUID: 8b9bba7b_e0b44040
Bytes: 4
Done

File: runtime/gc/accounting/card_table.h

102
Tue Sep 06 23:38:02 2016 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 962843c7_79d3d357
Bytes: 24
Args are misaligned now.

File: runtime/gc/heap.cc

3377
Tue Sep 06 23:38:02 2016 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 962843c7_595d2fe8
Bytes: 10
Misaligned

