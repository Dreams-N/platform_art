Revision: 12089af567bd5c2c06b387b882f00b927756ad11
Patch-set: 1
File: compiler/driver/compiler_driver.cc

562:0-562:66
Mon Aug 01 20:10:34 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: af44013b_c0e34ea1
Bytes: 63
Will there be following lookups? We only compile a method once.

562:0-562:66
Mon Aug 15 22:06:57 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: af44013b_c0e34ea1
UUID: 1e19c50e_3768981b
Bytes: 4
Done

594:0-598:3
Mon Aug 01 20:10:34 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: af44013b_a0de42d6
Bytes: 70
Please do this in the caller, and avoid passing in an inout parameter.

594:0-598:3
Mon Aug 15 22:06:57 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: af44013b_a0de42d6
UUID: 1e19c50e_f758e091
Bytes: 4
Done

559:0-601:1
Mon Aug 01 19:07:02 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6f34c9be_f65ba55c
Bytes: 131
Can we move this to some helper h or ArtMethod.h? It seems this could be shared later.

(It would also allow testing in a gtest...)

559:0-601:1
Mon Aug 15 22:06:57 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6f34c9be_f65ba55c
UUID: 7e356161_42ca32ba
Bytes: 20
Moved to ArtMethod.h

651:6-669:82
Mon Aug 01 19:07:02 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: af44013b_001d5668
Bytes: 175
I'd consider putting this into another helper function to keep this method's size at bay.

(It would also help to track not using an ArtMethod, which should be a strong TODO.)

651:6-669:82
Mon Aug 15 22:06:57 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: af44013b_001d5668
UUID: 1e19c50e_7745b09f
Bytes: 4
Done

669:0-672:68
Mon Aug 01 20:10:34 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: af44013b_e0d84aec
Bytes: 85
Could you pass the flag IsFastNative to JniCompile instead of altering the modifiers?

669:0-672:68
Mon Aug 01 20:19:42 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: af44013b_e0d84aec
UUID: af44013b_fb071b1e
Bytes: 88
Are you saying to pass it as a separate parameter or to pass it as part of access_flags?

669:0-672:68
Mon Aug 01 20:22:52 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: af44013b_fb071b1e
UUID: af44013b_1b2227ac
Bytes: 74
separate parameter. We're probably only using the access flags for IsFast?

669:0-672:68
Mon Aug 01 20:38:02 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: af44013b_1b2227ac
UUID: af44013b_dbda5f72
Bytes: 145
Ok I will do that.

I didn't do it originally because it required changing the compiler driver interface and the optimizing implementation of it.

669:0-672:68
Mon Aug 15 22:06:57 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: af44013b_dbda5f72
UUID: 1e19c50e_17423499
Bytes: 4
Done

File: compiler/jni/quick/jni_compiler.cc

432:15-432:33
Mon Aug 01 19:07:02 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: af44013b_60453a4c
Bytes: 1
?

432:0-432:56
Mon Aug 01 20:10:34 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: af44013b_80ea266e
Bytes: 29
I don't understand this TODO.

432:0-432:56
Mon Aug 01 20:19:42 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: af44013b_80ea266e
UUID: af44013b_3bfa8314
Bytes: 50
Sorry, bad merge from when I was prototyping this.

432:0-432:56
Mon Aug 15 22:06:57 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: af44013b_3bfa8314
UUID: 1e19c50e_373f3808
Bytes: 4
Done

File: runtime/class_linker.cc

679:0-680:83
Mon Aug 01 19:07:02 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: af44013b_e0b3ea51
Bytes: 94
Why do you need this as a root? It much more fits into WellKnownClasses by the usage, I think.

679:0-680:83
Mon Aug 15 22:06:57 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: af44013b_e0b3ea51
UUID: 1e19c50e_d7b27cac
Bytes: 4
Done

File: runtime/entrypoints/quick/quick_jni_entrypoints.cc

39:0-44:3
Mon Aug 01 20:10:34 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: af44013b_1b66a727
Bytes: 124
Then I'd drop this. At compile time ew knew it was fast, so don't check (or do some unsafery by looking at the annotations).

39:0-44:3
Mon Aug 15 22:06:57 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: af44013b_1b66a727
UUID: 1e19c50e_57c74c12
Bytes: 76
Fixed , it looks at annotation now instead of at the incorrect access flags.

101:0-101:103
Mon Aug 01 19:07:02 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: af44013b_c0898e86
Bytes: 146
Line too long.

I think it may have been used directly at one point, before it became thread entrypoints? Feel free to clean up in a follow-up CL.

101:0-101:103
Mon Aug 15 22:06:57 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: af44013b_c0898e86
UUID: 1e19c50e_77c4d00c
Bytes: 4
Done

