Revision: 6b579224c6e68821cfd76f01b708db842049f7cd
Patch-set: 2
File: runtime/stack.h

642
Fri Apr 25 13:32:37 2014 +0000
Author: Dmitry Petrochenko <1039576@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 65c57378_f9ee776a
Bytes: 376
Why sizeof(uint32_t) used here? There is similar code in runtime.cc:

    size_t frame_size = RoundUp((__builtin_popcount(core_spills) /* gprs */ +
                                 __builtin_popcount(fp_spills) /* fprs */ +
                                 1 /* Method* */) * kX86_64PointerSize, kStackAlignment);

It means that in runtime.cc 8 bytes added instead of 4 bytes.

642
Fri Apr 25 14:30:43 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 65c57378_f9ee776a
UUID: a56ccb48_830f1ebf
Bytes: 103
Where in runtime.cc?

The filler is due to dex considerations, and dex registers are currently 4 bytes.

642
Sat Apr 26 00:48:26 2014 +0000
Author: Dmitry Petrochenko <1039576@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a56ccb48_830f1ebf
UUID: e5fec3bb_a5455e59
Bytes: 313
I mean runtime.cc:1054, function Runtime::CreateCalleeSaveMethod. For all 64-bit archs that function sets the frame size, and the spills calculated in another way, kArm64PointerSize/kX86_64PointerSize used instead of sizeof(uint32_t) for spill size calculation, also RoundUp used for whole frame size calculation.

642
Mon Apr 28 11:03:53 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e5fec3bb_a5455e59
UUID: e52c0330_7557e8df
Bytes: 150
Code over there in runtime.cc:1054 is for computing the frame for callee save registers. It does not take care of virtual registers, contrary to here.

