Revision: 5cf3239ec82f757119ddd98d903bda55228df479
Patch-set: 8
File: compiler/optimizing/stack_map_stream.h

102:0-106:34
Fri Feb 20 11:48:18 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 88d53202_4006ee03
Bytes: 146
So you're using the dictionary in memory, but then can output either the dictionary style or the list style? Why the overhead if going list style?

File: compiler/utils/growable_array.h

95:0-95:48
Fri Feb 20 11:48:18 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 68dabe34_5fe24bda
Bytes: 58
Hmmm, I can see this tripping us for pathological cases...

File: oatdump/oatdump.cc

909:0-917:6
Fri Feb 20 11:48:18 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e8106e97_23012aeb
Bytes: 27
Why not a regular function?

File: runtime/stack_map.h

162:0-162:45
Fri Feb 20 11:48:18 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 68dabe34_bf435735
Bytes: 17
What is this for?

172:24-172:35
Fri Feb 20 11:48:18 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e8106e97_4300a6e3
Bytes: 152
I didn't find any check if we need higher indices for a method (and we will need to, if not already). So it looks like you need to handle this overflow.

412:4-412:10
Fri Feb 20 11:48:18 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e8106e97_e3d552f4
Bytes: 9
DCHECK_EQ

423:4-423:10
Fri Feb 20 11:48:18 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 88d53202_00d3060f
Bytes: 9
DCHECK_EQ

