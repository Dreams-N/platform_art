Revision: be54da44707334daaa651542c2f35c925d59c96d
Patch-set: 2
File: compiler/common_compiler_test.cc

108:9-108:20
Wed Oct 15 07:56:50 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d06fc874_89eff914
Bytes: 70
How about:

bool is_portable = code != nullptr;
if (is_portable) {
...

108:9-108:20
Wed Oct 15 10:17:11 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d06fc874_89eff914
UUID: 901b9006_0c2223ce
Bytes: 28
Sounds good, will follow up.

108:9-108:20
Thu Oct 16 05:28:22 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 901b9006_0c2223ce
UUID: 307f4423_e1432c6d
Bytes: 4
Done

File: runtime/entrypoints/interpreter/interpreter_entrypoints.cc

28:78-28:79
Wed Oct 15 07:56:50 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f06a0c65_0a1bfb94
Bytes: 30
Can this be const ref instead?

28:78-28:79
Wed Oct 15 10:17:11 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f06a0c65_0a1bfb94
UUID: 70753c3d_d447d498
Bytes: 87
The shorty code does lazy initialization, so no. But long-term, death to MethodHelpers.

File: runtime/entrypoints/interpreter/interpreter_entrypoints.h

36:56-36:68
Wed Oct 15 07:56:50 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f06a0c65_2a183f95
Bytes: 5
ditto

39:57-39:69
Wed Oct 15 07:56:50 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d06fc874_a9f43de9
Bytes: 5
ditto

File: runtime/entrypoints/runtime_asm_entrypoints.h

2:17-2:21
Wed Oct 15 07:56:50 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d06fc874_490a6149
Bytes: 4
2014

2:17-2:21
Wed Oct 15 10:17:11 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d06fc874_490a6149
UUID: b064149b_885137d8
Bytes: 39
This is a copy of code written in 2012.

28:14-28:23
Wed Oct 15 07:56:50 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f06a0c65_ca43a36d
Bytes: 54
Why isn't this one void* (like the rest in this file)?

28:14-28:23
Thu Oct 16 05:28:22 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f06a0c65_ca43a36d
UUID: 307f4423_211b7495
Bytes: 4
Done

75:14-75:18
Wed Oct 15 07:56:50 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d06fc874_09046936
Bytes: 13
const void* ?

75:14-75:18
Thu Oct 16 05:28:22 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d06fc874_09046936
UUID: 505bd8e0_f94c3fbf
Bytes: 4
Done

File: runtime/profiler.cc

20:0-22:21
Wed Oct 15 04:11:58 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 901b9006_11955cca
Bytes: 46
alpha (and aren't C supposed to be before C++)

20:0-22:21
Wed Oct 15 05:43:53 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 901b9006_11955cca
UUID: b064149b_0860e7ee
Bytes: 4
Done

