Revision: f4b3dbad413023795b92a842aad1c3f2fe4a57e9
Patch-set: 1
File: /COMMIT_MSG

9:0-10:53
Wed Jan 27 06:27:38 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d4b8d2d6_a2117fa0
Bytes: 217
As I looked this up with Richard before for his stack allocation thing: the C++ spec leaves it undefined what happens, whether signed or not. It only specifies a round-trip to be identity. (As far as we understood it)

9:0-10:53
Wed Jan 27 06:32:09 2016 +0000
Author: Stephen Hines <1010056@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d4b8d2d6_a2117fa0
UUID: 54c4e260_7ef540a7
Bytes: 293
Can you elaborate on what actually is crashing? The bug mentioned is just your tracking bug for the feature. I assume that the problem is actually compressed references (i.e. 64-bit pointers, but stored as 32-bit?), and thus you need to zero-extend instead, but please correct me if I'm wrong.

9:0-10:53
Wed Jan 27 10:12:06 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 54c4e260_7ef540a7
UUID: 94a57ac9_22cb9078
Bytes: 150
Stephen: if this fix is indeed just for app images, you wouldn't see the crash, as app images are only enabled for Mathieu (and maybe our run-tests?).

10:25-10:34
Wed Jan 27 10:12:06 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 94a57ac9_0299ac92
Bytes: 20
Why just app images?

10:25-10:34
Wed Jan 27 17:47:51 2016 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 94a57ac9_0299ac92
UUID: b4a43ebb_1acb7a77
Bytes: 139
I think it is because the app image dex2oat is the only one where the map is not in the low 2GB which caused the sign extension to show up.

10:25-10:34
Wed Jan 27 18:55:26 2016 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b4a43ebb_1acb7a77
UUID: f49a3677_79f578a7
Bytes: 196
A pointer-to-uint64 cast sign-extends but A pointer-to-uintptr_t cast doesn't? This seems error-prone. Is there a pointer to some document? Also, are there any compiler checks/warnings about this?

File: runtime/mirror/class-inl.h

211:20-211:41
Wed Jan 27 17:48:48 2016 +0000
Author: Richard Uhler <1057373@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f4b5d6da_c1d3d12c
Bytes: 27
Is this static_cast needed?

211:20-211:41
Wed Jan 27 17:50:37 2016 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f4b5d6da_c1d3d12c
UUID: 74c9e678_f1089f45
Bytes: 12
Probably not

