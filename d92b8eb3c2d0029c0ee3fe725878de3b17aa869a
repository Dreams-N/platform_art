Revision: d92b8eb3c2d0029c0ee3fe725878de3b17aa869a
Patch-set: 1
File: imgdiag/imgdiag.cc

378
Mon Apr 04 21:36:59 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: aeb870d5_6e8833e4
Bytes: 124
nit: Is this right in the middle of a function? It should probably go to the top of the file, perhaps call it DirtyClassData

378
Mon Apr 04 22:07:15 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: aeb870d5_6e8833e4
UUID: aeb870d5_ce7f7f36
Bytes: 46
I wanted to hide internals of this function...

378
Mon Apr 04 23:02:17 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: aeb870d5_ce7f7f36
UUID: aeb870d5_a58d09f5
Bytes: 178
I'm not sure if anyone really does put structs into functions like that except for macros which make anonymous classes. It makes it much harder to find them later without an IDE.

379
Mon Apr 04 21:36:59 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: aeb870d5_cec13fff
Bytes: 47
nit: could probably use an initializer

    = 0

379
Mon Apr 04 22:07:15 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: aeb870d5_cec13fff
UUID: aeb870d5_4ed9afa1
Bytes: 34
It's a struct, isn't that a given?

379
Mon Apr 04 23:02:17 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: aeb870d5_4ed9afa1
UUID: aeb870d5_e525419f
Bytes: 463
It can be initialized any number of ways 

  ClassData x; // all the primitive fields have indeterminate values
  new ClassData; // same as above

  ClassData x{}; // all the primitive fields are zeroed out
  new ClassData(); // same as above

http://en.cppreference.com/w/cpp/language/default_initialization

It probably works fine because I'm guessing "new T()" somewhere to provide the backing memory for a its keys/values, so the memory is already zeroed out.

554:51-554:84
Mon Apr 04 21:36:59 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: aeb870d5_2e671bf5
Bytes: 83
nit: Is this really necessary? It should be able to infer types from the parameters

554:51-554:84
Mon Apr 04 22:07:15 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: aeb870d5_2e671bf5
UUID: aeb870d5_eed1a377
Bytes: 46
Yeah, it doesn't seem able to infer correctly.

842
Mon Apr 04 21:36:59 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: aeb870d5_ae7a4b86
Bytes: 107
nit: Combine this with the above function somehow?

    std::function<V(const D&)> f = identity

or similar

842
Mon Apr 04 22:07:15 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: aeb870d5_ae7a4b86
UUID: aeb870d5_8219dbc3
Bytes: 4
Done

843:81-843:82
Mon Apr 04 21:36:59 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: aeb870d5_8e5bc728
Bytes: 17
nit: value_mapper

843:81-843:82
Mon Apr 04 22:07:15 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: aeb870d5_8e5bc728
UUID: aeb870d5_6224c7f6
Bytes: 4
Done

