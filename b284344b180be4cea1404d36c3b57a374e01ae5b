Revision: b284344b180be4cea1404d36c3b57a374e01ae5b
Patch-set: 3
File: compiler/optimizing/intrinsics_x86.cc

2689:8-2689:54
Wed Jul 06 15:19:27 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: fdd95270_d1cdc640
Bytes: 35
invoke->InputAt(1)->IsIntConstant()

2689:8-2689:54
Wed Jul 06 15:28:55 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: fdd95270_d1cdc640
UUID: 7d0f22b2_907a9c57
Bytes: 4
Done

2692:31-2692:32
Wed Jul 06 15:19:27 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9df776e1_e69480b3
Bytes: 172
Nit: I would give names to the input numbers to make this easier to read:

  !IsSameInput(invoke, input_pos, dest_pos) &&
  !IsSameInput(invoke, input_pos, length) &&
  â€¦

2692:31-2692:32
Wed Jul 06 15:28:55 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 9df776e1_e69480b3
UUID: fdd95270_917bbea4
Bytes: 4
Done

2808:7-2808:25
Wed Jul 06 15:19:27 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9df776e1_a6c7a8a5
Bytes: 253
This is just a matter of personal taste, but this phrasing seems odd; I think we've usually used "saving" rather than "restoring" in the code base (even if we do both) when talking about using the stack to preserve the value of a register; up to you. :)

2808:7-2808:25
Wed Jul 06 15:28:55 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 9df776e1_a6c7a8a5
UUID: fdd4f22f_fc7661ed
Bytes: 4
Done

2822:15-2822:19
Wed Jul 06 15:19:27 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: fd4792ea_21d12804
Bytes: 7
push it

2822:15-2822:19
Wed Jul 06 15:28:55 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: fd4792ea_21d12804
UUID: 1d41c6d7_e2802812
Bytes: 4
Done

2833:6-2833:49
Wed Jul 06 15:19:27 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: bde35a1e_55365e42
Bytes: 114
For the sake of uniformity, add before this before line 2833:

  // /* HeapReference<Class> */ temp1 = src->klass_

2833:6-2833:49
Wed Jul 06 15:28:55 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: bde35a1e_55365e42
UUID: 1d41c6d7_a28a202e
Bytes: 4
Done

2846:6-2846:50
Wed Jul 06 15:19:27 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: fdd4f22f_5cc43546
Bytes: 6
Ditto.

2846:6-2846:50
Wed Jul 06 15:28:55 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: fdd4f22f_5cc43546
UUID: 3d176ada_5820ddef
Bytes: 4
Done

2860:6-2860:50
Wed Jul 06 15:19:27 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: fdd4f22f_fcf9c187
Bytes: 6
Ditto.

2860:6-2860:50
Wed Jul 06 15:28:55 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: fdd4f22f_fcf9c187
UUID: 1d0c66bf_6d52b154
Bytes: 4
Done

2888:34-2888:37
Wed Jul 06 15:19:27 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1d41c6d7_bfc23764
Bytes: 5
temp1

2888:34-2888:37
Wed Jul 06 15:28:55 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1d41c6d7_bfc23764
UUID: 1d41c6d7_6295f848
Bytes: 4
Done

2898:26-2898:41
Wed Jul 06 15:19:27 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7d0f22b2_f042f82f
Bytes: 21
kObjectReferenceSize?

2898:26-2898:41
Wed Jul 06 15:28:55 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7d0f22b2_f042f82f
UUID: fdd95270_318bead1
Bytes: 103
Replace with  Primitive::ComponentSize(Primitive::kPrimNot) to make it uniform with the other backends.

