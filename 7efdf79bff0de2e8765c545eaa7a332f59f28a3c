Revision: 7efdf79bff0de2e8765c545eaa7a332f59f28a3c
Patch-set: 17
File: /COMMIT_MSG

9:20-9:36
Fri Nov 06 17:14:41 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 568ea242_69c83ea2
Bytes: 8
Grammar.

9:20-9:36
Fri Nov 06 19:39:29 2015 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 568ea242_69c83ea2
UUID: 1698aa84_c26bcb35
Bytes: 4
Done

File: runtime/art_method-inl.h

53:0-63:1
Fri Nov 06 17:14:41 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b686fe2b_555f8f24
Bytes: 147
Don't see a reason why this should be inlined. It's rare, and not performance-critical (the exception costs will eclipse the call overhead easily).

53:0-63:1
Fri Nov 06 19:39:29 2015 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b686fe2b_555f8f24
UUID: b686fe2b_35ef7b71
Bytes: 75
Done. I honestly cannot remember why I put it in here in the first place...

File: runtime/class_linker.cc

4746:3-4746:100
Fri Nov 06 17:14:41 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d69a9277_72f90d3a
Bytes: 198
Missing period. Please also extend to be more precise. This is not generically looking whether "iface has any subinterface with the specific method." There's at least an "in the given list" missing.

4746:3-4746:100
Fri Nov 06 19:39:29 2015 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d69a9277_72f90d3a
UUID: b69d1e72_6695d4b1
Bytes: 4
Done

4787:44-4787:53
Fri Nov 06 17:14:41 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 568ea242_09e17a1b
Bytes: 85
Description says it's a subtype, and that's what you're checking (and want to check).

4787:44-4787:53
Fri Nov 06 19:39:29 2015 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 568ea242_09e17a1b
UUID: b686fe2b_1538b7a8
Bytes: 4
Done

5263:70-5263:80
Fri Nov 06 17:14:41 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d683721b_9fb2070b
Bytes: 190
It's either correct or not. If it's correct but dirty, mark this as "cleanup needed." If it's incorrect, clearly state it and note a bug number here.

(Looks like it is correct, just dirty.)

5263:70-5263:80
Fri Nov 06 19:39:29 2015 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d683721b_9fb2070b
UUID: d69a9277_12ab61dd
Bytes: 4
Done

5350:66-5350:69
Fri Nov 06 17:14:41 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 36892e3b_d604755b
Bytes: 11
Lower case.

5350:66-5350:69
Fri Nov 06 19:39:29 2015 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 36892e3b_d604755b
UUID: 1698aa84_3d3bd01e
Bytes: 4
Done

5417:0-5422:38
Fri Nov 06 17:14:41 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1698aa84_a236bf8f
Bytes: 153
Maybe refactor all these duplicates? If you had an ArtMethod variable you could store the result in, you could check for found_impl after the if-else-if.

5417:0-5422:38
Fri Nov 06 19:39:29 2015 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1698aa84_a236bf8f
UUID: d69a9277_32f5c5f0
Bytes: 66
Done. Moved to a single 'if (current_impl != nullptr)' at the end.

5426:8-5426:46
Fri Nov 06 17:14:41 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 96a49abb_1ab7faa2
Bytes: 213
Can't that be nested one more, i.e., go into the preceding conditional?

Also a lot of people prefer early bail. So consider rewriting this with continues in the middle, maybe, instead of all the if (!found_impl)?

5426:8-5426:46
Fri Nov 06 19:39:29 2015 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 96a49abb_1ab7faa2
UUID: d69a9277_32c30588
Bytes: 5
Done.

5523:6-5525:77
Fri Nov 06 17:14:41 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 568ea242_24badbe2
Bytes: 58
The repeated setter looks ugly. Consider one masking step.

5523:6-5525:77
Fri Nov 06 19:39:29 2015 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 568ea242_24badbe2
UUID: 1698aa84_bd86e0c8
Bytes: 4
Done

File: runtime/class_linker.h

720:2-721:41
Fri Nov 06 17:14:41 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 568ea242_e9d34e51
Bytes: 30
Please describe the tri-state.

720:2-721:41
Fri Nov 06 19:39:29 2015 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 568ea242_e9d34e51
UUID: d683721b_5f45ef96
Bytes: 4
Done

817:47-817:54
Fri Nov 06 17:14:41 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d69a9277_7254ad06
Bytes: 36
Style for comments is mostly "null."

817:47-817:54
Fri Nov 06 19:39:29 2015 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d69a9277_7254ad06
UUID: 1698aa84_fdd30828
Bytes: 4
Done

File: runtime/common_throws.cc

249:30-249:77
Fri Nov 06 17:14:41 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 568ea242_c4d9174e
Bytes: 248
Please make the method name more precise (or change the parameter name) so it's intuitive what it does. Otherwise one must look at the implementation to see what message it will put. There are more reasons for ICCE caused by methods, as you know...

249:30-249:77
Fri Nov 06 19:39:29 2015 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 568ea242_c4d9174e
UUID: b620be2e_9c1509cc
Bytes: 62
Renamed to ThrowIncompatibleClassChangeErrorForMethodConflict.

