Revision: 90acd0ee48f61c88521215608988ea37271f2c1c
Patch-set: 1
File: compiler/optimizing/instruction_simplifier.cc

191:4-192:69
Fri Feb 05 10:57:10 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 11f8bcd1_23016a4f
Bytes: 331
Nit: I think the style we use for long `?:` statements is this one:

  HInstruction* src_left = boolean_not ?
      left->AsBooleanNot()->GetInput() :
      left->AsNot()->GetInput();

Or this one, if you prefer it:

  HInstruction* src_left = boolean_not
      ? left->AsBooleanNot()->GetInput()
      : left->AsNot()->GetInput();

191:29-192:68
Fri Feb 05 11:01:28 2016 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7176584c_2e304723
Bytes: 148
No need to branch. They're both single-input instructions.

  src_left = left->InputAt(0);

You can DCHECK that it matches the GetInput if you want.

File: test/565-checker-doublenegbitwise/src/Main.java

69
Fri Feb 05 10:57:10 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d185445a_11e80ccd
Bytes: 51
Maybe add `before` checks as well (here and below)?

84:14-84:15
Fri Feb 05 11:01:28 2016 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 918f4c7c_aff8b99f
Bytes: 80
Just out of curiosity... You're using & instead of && to avoid short-circuiting?

126:21-126:23
Fri Feb 05 10:57:10 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7176584c_0e330b33
Bytes: 3
And

127:54-127:56
Fri Feb 05 10:57:10 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f1340868_022aeabb
Bytes: 3
And

