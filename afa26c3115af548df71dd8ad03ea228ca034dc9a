Revision: afa26c3115af548df71dd8ad03ea228ca034dc9a
Patch-set: 1
File: compiler/optimizing/constant_propagation.cc

45:28-45:41
Tue Sep 02 08:21:45 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1326c99c_66ec6e2a
Bytes: 63
Maybe use IsConstant and let the FoldConstant handle the types?

45:28-45:41
Fri Sep 05 17:10:39 2014 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1326c99c_66ec6e2a
UUID: 90d1cfe4_c6ea420d
Bytes: 339
I moved most of the work done in this section to HInstruction nodes and got rid of FoldConstant.  The constant propagation pass is more orthogonal to the instruction hierarchy now.  Modifications/additions to this hierarchy (e.g. future support for multiplications or divisions) should have little or no impact on art::ConstantPropagation.

128:17-128:39
Tue Sep 02 08:21:45 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d398b1f7_7f1b0bd5
Bytes: 107
I would move this logic to the instruction itself:

class HIntConstant {
  int appy(int a, int b) { ... }
}

128:17-128:39
Fri Sep 05 17:10:39 2014 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d398b1f7_7f1b0bd5
UUID: d0a0a75c_3057b007
Bytes: 4
Done

