Revision: 7fe4bb19646dc703cc0ff6bc3bfad011b5e94080
Patch-set: 7
File: runtime/class_linker.cc

1011:4-1011:26
Fri Feb 13 16:58:09 2015 +0000
Author: Richard Uhler <1057373@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0b4cdc89_a789643e
Bytes: 83
Move this inside the following if branch, because that's the only place it is used.

1011:4-1011:26
Fri Feb 13 17:09:00 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0b4cdc89_a789643e
UUID: cbd1e4e3_d2a9a46b
Bytes: 4
Done

File: runtime/parsed_options.cc

240
Fri Feb 13 01:53:57 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: cb5e442b_0dd2955d
Bytes: 87
Minor nit, but I think all the other "-Xno" options don't have a - right after the 'no'

240
Fri Feb 13 17:09:00 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: cb5e442b_0dd2955d
UUID: cbd1e4e3_f26dc896
Bytes: 162
Yes, but it looked wrong to me. English reading kicks in for me, and so I get "nodex"-file-fallback. But I'm open to changing that if the team thinks it's better.

632
Fri Feb 13 01:53:57 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: cb5e442b_8a90abb1
Bytes: 115
Did you want to make it like the other ones and have the -Xdex-file-fallback and the -Xnodex-file-fallback options?

632
Fri Feb 13 17:09:00 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: cb5e442b_8a90abb1
UUID: cbd1e4e3_7269d884
Bytes: 126
It seemed like a special one-off thing like X:CheckJNI. I know it is now formatted like the dual options. Critique is welcome.

File: runtime/runtime.cc

388:23-388:27
Fri Feb 13 16:58:09 2015 +0000
Author: Richard Uhler <1057373@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0b4cdc89_473750dc
Bytes: 103
this = 'deleting the instance'.

I think it's worth explicitly stating that we are leaking memory here.

388:23-388:27
Fri Feb 13 17:09:00 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0b4cdc89_473750dc
UUID: cbd1e4e3_32959025
Bytes: 4
Done

771:1-771:77
Fri Feb 13 16:58:09 2015 +0000
Author: Richard Uhler <1057373@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0b4cdc89_a728447d
Bytes: 162
Why is this different from the verify_ assign statement?
Should it use runtime_options.GetOrDefault? Or should the verify_ assignment use !runtime_options.Exists?

771:1-771:77
Fri Feb 13 17:09:00 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0b4cdc89_a728447d
UUID: 0b4cdc89_0795d824
Bytes: 320
Verify has text options and is binary: you can say verification on or off. This goes into Igor's question on whether the new option should be binary, too. I used Intel's approach here, and think NoDexFileFallback is singular enough (it's like -X:CheckJni) that only turning it off is necessary (and then you use Exists).

