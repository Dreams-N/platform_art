Revision: 453294f1a6b6c3bcbb2e0673d664d423c86fa24d
Patch-set: 1
File: compiler/optimizing/code_generator_arm64.cc

2992
Mon Feb 08 16:01:42 2016 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9d3920d3_d1fc248a
Bytes: 310
I'll review this tomorrow in details. But I don't think this swapped variant will be good because CSEL cannot encode immediate values. We can use similar instructions (CSET, CINC, etc.) and the zero registers to handle 0, 1, maybe -1, but not arbitrary constants. Some handling for these likely will be useful.

2992
Mon Feb 08 16:06:39 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 9d3920d3_d1fc248a
UUID: 9162ecbe_1d96930f
Bytes: 96
David, have a look at the quick compiler, which has a lot of specialized code for these cases...

2992
Mon Feb 08 16:25:00 2016 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 9d3920d3_d1fc248a
UUID: 1d20d090_b5ce40d0
Bytes: 242
@Alexandre: Correct, vixl recognizes those three constants and moves the const to a temp reg otherwise.

@Andreas: Lol, I love how you call your code 'specialized'. Someone was pretty anally retentive about selects. I'll see what I can do. ;)

2992
Mon Feb 08 16:33:44 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1d20d090_b5ce40d0
UUID: 7179f872_7c9dd125
Bytes: 83
Not my code. Just pointing out that you have a great compiler to scavenge from. :-)

2992
Mon Feb 08 16:36:55 2016 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7179f872_7c9dd125
UUID: 7d0b8c18_b898792f
Bytes: 90
We should contribute that to vixl though. Otherwise I'm just duplicating their csel macro.

2992
Tue Feb 09 10:50:48 2016 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7d0b8c18_b898792f
UUID: bd98a490_8275bad5
Bytes: 228
Eventually VIXL will accept external contributions, but for now it is not possible. I spare you the legal details.

So I suggest you keep it simple for ARM64, and someone at ARM will pick up on this and update VIXL if necessary.

