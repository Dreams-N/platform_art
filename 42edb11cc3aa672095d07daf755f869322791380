Revision: 42edb11cc3aa672095d07daf755f869322791380
Patch-set: 6
File: compiler/optimizing/code_generator_x86_64.cc

954:28-954:59
Thu Oct 16 17:27:36 2014 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f06a0c65_5311ae72
Bytes: 92
Out of curiosity, why did you prevent the use of a stack-resident second operand for floats?

954:28-954:59
Fri Oct 17 15:14:34 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f06a0c65_5311ae72
UUID: 90d5507b_c7e37ee6
Bytes: 194
Any is for stack/register/constant, but the instruction cannot operate directly on a constant and therefore needs to move. Because we don't have a RegisterOrStack, I changed it to just register.

954:28-954:59
Tue Oct 21 10:26:41 2014 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 90d5507b_c7e37ee6
UUID: f064ccc9_6388d07d
Bytes: 127
OK, got it.  Should we consider adding a Location::RegisterOrStack routine someday?  It could be useful for CISC architectures.

1374:65-1374:72
Thu Oct 16 17:27:36 2014 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d06fc874_72e06e29
Bytes: 24
Shouldn't it be TIMES_4?

1374:65-1374:72
Fri Oct 17 15:14:34 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d06fc874_72e06e29
UUID: b0d09489_88d9973a
Bytes: 42
Good catch! I added a test for it as well.

1376:60-1376:67
Thu Oct 16 17:27:36 2014 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9069d076_d0eb523a
Bytes: 9
Likewise.

1376:60-1376:67
Fri Oct 17 15:14:34 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 9069d076_d0eb523a
UUID: 70ca9cdf_a6a2c68c
Bytes: 4
Done

1522:77-1522:84
Thu Oct 16 17:27:36 2014 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f06a0c65_131b3695
Bytes: 9
Likewise.

1522:77-1522:84
Fri Oct 17 15:14:34 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f06a0c65_131b3695
UUID: b0d09489_28c98b63
Bytes: 4
Done

1527:55-1527:62
Thu Oct 16 17:27:36 2014 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f06a0c65_3318ba95
Bytes: 9
Likewise.

1527:55-1527:62
Fri Oct 17 15:14:34 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f06a0c65_3318ba95
UUID: 90d5507b_07c63651
Bytes: 4
Done

File: compiler/optimizing/nodes.cc

366:39-366:50
Thu Oct 16 17:27:36 2014 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f06a0c65_93108643
Bytes: 58
Nit: I would have named this argument `phi', as in AddPhi.

366:39-366:50
Fri Oct 17 15:14:34 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f06a0c65_93108643
UUID: 70ca9cdf_26b7f6cd
Bytes: 4
Done

372:35-372:36
Thu Oct 16 17:27:36 2014 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9069d076_b06fbe1b
Bytes: 58
Maybe add

  DCHECK_EQ(instruction->next, nullptr);

here?

372:35-372:36
Fri Oct 17 15:14:34 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 9069d076_b06fbe1b
UUID: 70ca9cdf_266536ba
Bytes: 4
Done

File: compiler/optimizing/nodes.h

1382:20-1382:34
Thu Oct 16 17:27:36 2014 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9069d076_708b867b
Bytes: 62
Shouldn't the template parameters of this bit_cast be swapped?

1382:20-1382:34
Fri Oct 17 15:14:34 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 9069d076_708b867b
UUID: b0d09489_28f06ba3
Bytes: 136
No, it's from float to int32_t. I agree it could be not intuitive, but I could be convinced the other way around is also not intuitive..

1382:20-1382:34
Tue Oct 21 10:26:41 2014 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b0d09489_28f06ba3
UUID: 309904fa_850888c5
Bytes: 126
This seems to be the opposite of what the implementation in runtime/base/casts.h says.  Or am I looking at the wrong function?

1383:17-1383:31
Thu Oct 16 17:27:36 2014 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f06a0c65_33b43af4
Bytes: 6
Ditto.

1383:17-1383:31
Fri Oct 17 15:14:34 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f06a0c65_33b43af4
UUID: b0d09489_08eda7c9
Bytes: 5
ditto

1403:20-1403:35
Thu Oct 16 17:27:36 2014 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f06a0c65_f3a462c2
Bytes: 6
Ditto.

1403:20-1403:35
Fri Oct 17 15:14:34 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f06a0c65_f3a462c2
UUID: 90d5507b_67ea92b3
Bytes: 5
ditto

1404:17-1404:32
Thu Oct 16 17:27:36 2014 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d06fc874_7235cef9
Bytes: 6
Ditto.

1404:17-1404:32
Fri Oct 17 15:14:34 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d06fc874_7235cef9
UUID: 70ca9cdf_865ceaf0
Bytes: 5
ditto

File: compiler/optimizing/ssa_builder.cc

161:65-163:39
Thu Oct 16 17:27:36 2014 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9069d076_5be30337
Bytes: 105
Nit: move this part of the comment in the "else" branch for the sake of symmetry with GetFloatEquivalent?

161:65-163:39
Fri Oct 17 15:14:34 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 9069d076_5be30337
UUID: 90d5507b_a7a2ca8c
Bytes: 4
Done

191:40-191:45
Thu Oct 16 17:27:36 2014 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d06fc874_52420a38
Bytes: 5
graph

191:40-191:45
Fri Oct 17 15:14:34 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d06fc874_52420a38
UUID: b0d09489_a8a29b8c
Bytes: 4
Done

