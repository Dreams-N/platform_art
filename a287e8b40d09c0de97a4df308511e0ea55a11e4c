Revision: a287e8b40d09c0de97a4df308511e0ea55a11e4c
Patch-set: 1
File: runtime/gc/space/malloc_space.cc

115:0-115:59
Wed Mar 05 06:05:20 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3cae3566_6927a144
Bytes: 68
should this just be virtual and the ValgrindMallocSpace override it?

115
Wed Mar 05 19:41:08 2014 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3cae3566_6927a144
UUID: 1c7df19f_03c34d79
Bytes: 4
Done

File: runtime/gc/space/rosalloc_space.cc

67:0-67:39
Wed Mar 05 06:05:20 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3cae3566_c91575cb
Bytes: 17
Add a bug number.

67
Wed Mar 05 19:41:08 2014 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3cae3566_c91575cb
UUID: 1c7df19f_43b06507
Bytes: 4
Done

File: runtime/gc/space/valgrind_malloc_space-inl.h

41:0-41:48
Wed Mar 05 06:05:20 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dc76f9c4_6bf21cc1
Bytes: 76
I worry this will effect the heap's accounting. I don't think its necessary.

41
Wed Mar 05 19:41:08 2014 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dc76f9c4_6bf21cc1
UUID: 3cae3566_da13f574
Bytes: 4
Done

62:0-62:48
Wed Mar 05 06:05:20 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3cae3566_09570d96
Bytes: 8
and here

62
Wed Mar 05 19:41:08 2014 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3cae3566_09570d96
UUID: 3cae3566_fa10316a
Bytes: 4
Done

File: runtime/instrumentation.cc

463:2-463:29
Wed Mar 05 06:05:20 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1c7df19f_0d913c85
Bytes: 96
if you make this:

if (!runtime->IsStarted()) {
  return;
}

can you bring back the annotalysis?

463
Wed Mar 05 19:41:08 2014 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1c7df19f_0d913c85
UUID: 3cae3566_fa1b5184
Bytes: 101
That would change the behavior though, we still want to set the entrypoints for an unstarted runtime.

463
Wed Mar 05 19:58:47 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3cae3566_fa1b5184
UUID: 1c7df19f_03aeec12
Bytes: 431
Do:

if (!runtime->IsStarted()) {
    MutexLock mu(Thread::Current(), *Locks::runtime_shutdown_lock_);
    SetQuickAllocEntryPointsInstrumented(instrumented);
    ResetQuickAllocEntryPoints();
  return;
}

then? Presumably the annotalysis breakage is because you take a lock on some paths and not on others. If you duplicate the code in the middle then you are consistently taking/releasing a lock on one path and not on the other.

File: runtime/zip_archive.cc

42:0-42:20
Wed Mar 05 06:05:20 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3cae3566_09a94d2e
Bytes: 10
nice catch

