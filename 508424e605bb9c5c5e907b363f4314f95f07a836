Revision: 508424e605bb9c5c5e907b363f4314f95f07a836
Patch-set: 3
File: compiler/optimizing/code_generator_x86.cc

1212
Tue Oct 21 21:07:51 2014 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 151b126c_532144c8
Bytes: 126
RHS operand can be in memory.  Is this something that can be handled?  It would be good if constant values ended up in memory.

1212
Wed Oct 22 07:33:45 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 151b126c_532144c8
UUID: 351e565a_746ae8df
Bytes: 122
Why would it be good that constants end up in memory?

We don't have a RegisterOrMemory yet, hence the register only here.

1212
Wed Oct 22 11:40:31 2014 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 151b126c_532144c8
UUID: 150232f8_f006068a
Bytes: 251
It is good to load constants from memory when you don't have any spare registers to keep them in.  It may avoid 1 instruction by avoiding a separate load.  This also allows you to compute with something that is already in memory that has been spilled.

1212
Wed Oct 22 11:52:28 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 150232f8_f006068a
UUID: 351e565a_149054d8
Bytes: 187
This is currently done like this because the lack of RegisterOrMemory (which simplifies things in the allocator). Long term we should probably add it (for the reasons you also mentioned).

