Revision: 4680dc717bab670f90152070e685c610ae8be4a0
Patch-set: 1
File: compiler/optimizing/nodes.h

124:34-124:61
Thu May 21 09:57:20 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0d179dd9_2c27ebb0
Bytes: 26
Turn into a named constant

124:34-124:61
Thu May 21 10:24:06 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0d179dd9_2c27ebb0
UUID: ed19690f_2b63518d
Bytes: 64
Or maybe extend the InvokeType enum to include an invalid value?

124:34-124:61
Thu May 21 10:27:56 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0d179dd9_2c27ebb0
UUID: 2d20e12c_ede00d17
Bytes: 4
Done

124:34-124:61
Thu May 21 10:27:56 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ed19690f_2b63518d
UUID: 0d179dd9_0c5467d8
Bytes: 123
I wouldn't change the enum, this is very local to the graph and may be changed in the future once we support more inlining.

1134:30-1139:68
Thu May 21 09:57:20 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0d179dd9_ecc1f335
Bytes: 71
How about we create a copy constructor for this and other copies below.

1134:30-1139:68
Thu May 21 10:27:56 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0d179dd9_ecc1f335
UUID: 2d20e12c_0de6a130
Bytes: 62
It would be a precedent, I'm not a big fan of implicit things.

1134:30-1139:68
Thu May 21 10:42:08 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2d20e12c_0de6a130
UUID: ed19690f_8b3a9d44
Bytes: 157
Then maybe a HEnvironment::Copy method. There's way too many arguments here and when I see it, I'm looking through each one to figure out if they've changed.

1134:30-1139:68
Thu May 21 10:51:20 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ed19690f_8b3a9d44
UUID: ed19690f_cbe0954c
Bytes: 4
Done

File: compiler/optimizing/stack_map_test.cc

131:37-131:44
Thu May 21 09:57:20 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ed19690f_cb53b5bf
Bytes: 54
Are these just random values or have a bigger meaning?

131:37-131:44
Thu May 21 10:24:06 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ed19690f_cb53b5bf
UUID: ed19690f_cba5f52a
Bytes: 64
Shouldn't you also check the InvokeType below (around line 217)?

131:37-131:44
Thu May 21 10:27:56 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ed19690f_cb53b5bf
UUID: 2d20e12c_4dd33955
Bytes: 7
Random.

131:37-131:44
Thu May 21 10:27:56 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ed19690f_cba5f52a
UUID: 0d179dd9_8c407715
Bytes: 4
Done

File: runtime/stack_map.h

763:27-763:35
Thu May 21 10:24:06 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0d179dd9_6c5ac30c
Bytes: 26
Shouldn't this be uint8_t?

763:27-763:35
Thu May 21 10:27:56 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0d179dd9_6c5ac30c
UUID: 2d20e12c_0d0f8168
Bytes: 12
Great catch!

