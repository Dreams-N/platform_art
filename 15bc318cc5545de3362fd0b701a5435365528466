Revision: 15bc318cc5545de3362fd0b701a5435365528466
Patch-set: 10
File: /COMMIT_MSG

12:23-12:48
Fri Mar 18 16:15:41 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7cd6320e_a08dfa61
Bytes: 17
misses the table?

15
Fri Mar 18 16:50:46 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3ce03ae0_be90b9c6
Bytes: 73
Also, maybe mention that this is supported on ARM, ARM64, x86 and x86-64?

File: runtime/arch/x86/quick_entrypoints_x86.S

1416:0-1417:29
Fri Mar 18 16:50:46 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dce47ef9_5b598302
Bytes: 31
Maybe use:

  POP eax

instead?

1416:0-1417:29
Fri Mar 18 18:13:13 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dce47ef9_5b598302
UUID: 3ce03ae0_de766565
Bytes: 53
No, it adds an undesirable CFI_RESTORE(REG_VAR(reg)).

File: runtime/art_method-inl.h

266:0-272:1
Fri Mar 18 18:41:39 2016 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: fc14e289_44e6e306
Bytes: 196
This method is no longer accurate. Either update it to be (and use it in preference to IsRuntimeMethod), rename it (maybe IsImtConflictMethodDuringCompilation?), or remove it to be less confusing.

File: runtime/art_method.h

59:0-63:5
Fri Mar 18 16:15:41 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1cdb763a_9d5223de
Bytes: 26
Replace with a `for` loop?

76:4-76:9
Fri Mar 18 16:15:41 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1cdb763a_bd4fdf36
Bytes: 6
Ditto?

89:4-89:9
Fri Mar 18 16:15:41 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dce47ef9_bb1d2747
Bytes: 6
Ditto?

112:2-112:20
Fri Mar 18 16:15:41 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: bccc2a7e_820d5ad3
Bytes: 76
Replace with 

  Entry* entries_;

as this is not really a null-sized array?

112:2-112:20
Fri Mar 18 16:34:56 2016 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: bccc2a7e_820d5ad3
UUID: fc14e289_ae9e9827
Bytes: 284
> Replace with
 > 
 > Entry* entries_;
 > 
 > as this is not really a null-sized array?

Type name[0] acts as a pointer to the end of the struct (or the next field but that use is rare). Having it here is intentional since the Entry's appear in memory right at the end of this struct.

620:10-620:31
Fri Mar 18 16:15:41 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dce47ef9_1b361bcc
Bytes: 109
Maybe give another name to this member, as it serves different purposes?  What about turning it into a union?

File: runtime/asm_support.h

307:0-313:68
Fri Mar 18 16:15:41 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3ce03ae0_9e521dde
Bytes: 54
Move these after line 298 to keep the offsets ordered?

File: runtime/class_linker.cc

6101:0-6101:73
Fri Mar 18 16:34:56 2016 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: fc14e289_aec7b80f
Bytes: 303
Have you made sure that this method continues to work correctly now that there are multiple conflict methods?

This line especially seems like it could have problems.

I think you need to replace any IMT conflict methods with the generic one in the loop there or else they could call superclass methods.

