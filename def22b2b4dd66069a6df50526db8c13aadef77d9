Revision: def22b2b4dd66069a6df50526db8c13aadef77d9
Patch-set: 5
File: compiler/optimizing/constant_folding_test.cc

45:16-45:17
Tue Sep 30 15:55:14 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7029bc84_91945e1a
Bytes: 91
Indeed, that's pretty ugly. It's a bit less ugly if you actually use x86::CodeGeneratorX86.

45:16-45:17
Wed Oct 01 10:02:19 2014 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7029bc84_91945e1a
UUID: d0ec287c_a7072eb3
Bytes: 4
Done

File: compiler/optimizing/graph_checker.h

30:20-30:26
Tue Sep 30 15:55:14 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f0e76c92_cb311d0f
Bytes: 20
const char* instead?

30:20-30:26
Wed Oct 01 10:02:19 2014 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f0e76c92_cb311d0f
UUID: 7029bc84_71bfb28a
Bytes: 4
Done

File: compiler/optimizing/optimization.h

45:15-45:18
Tue Sep 30 15:55:14 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d0ec287c_870d4add
Bytes: 18
Make it protected?

45:15-45:18
Wed Oct 01 10:02:19 2014 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d0ec287c_870d4add
UUID: 7029bc84_111cee0c
Bytes: 124
OK. But then is it alright to catch errors in tests through HOptimization::Check (and hence LOG(FATAL)) instead of ASSERT()?

45:15-45:18
Wed Oct 01 10:04:40 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7029bc84_111cee0c
UUID: 504f587e_65712683
Bytes: 37
you can add FRIEND_TEST in the class.

45:15-45:18
Wed Oct 01 11:23:28 2014 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 504f587e_65712683
UUID: f083ecc2_02c6ea51
Bytes: 19
Thanks for the tip!

48:7-48:12
Tue Sep 30 15:55:14 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d0ec287c_671246fd
Bytes: 12
and private?

48:7-48:12
Wed Oct 01 10:02:19 2014 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d0ec287c_671246fd
UUID: f0e76c92_4b9aad7c
Bytes: 4
Done

65:14-65:24
Tue Sep 30 15:55:14 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7029bc84_d19ae647
Bytes: 30
Please also add a GetPassName.

65:14-65:24
Wed Oct 01 10:02:19 2014 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7029bc84_d19ae647
UUID: 7029bc84_9107beb3
Bytes: 4
Done

