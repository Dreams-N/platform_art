Revision: f192ae90317a9b6325615e62d1626df5a921c62c
Patch-set: 3
File: compiler/oat_writer.cc

354:0-355:83
Wed Apr 15 09:35:57 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 90a1e660_c2afa65d
Bytes: 25
Move to initializer list.

386:8-391:82
Wed Apr 15 09:19:55 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d080bec6_568cb48c
Bytes: 269
You can avoid the duplication. Use deduped as a flag whether things have been "handled."

  if (!debuggable_) {
    auto ...
    if (...) {
      ...
      deduped = true;
    } 
  }
  if (!deduped) {
     ... ;
     if (!debuggable) {
       dedupe_map_ ...
     }
  }

386:8-391:82
Wed Apr 15 09:23:55 2015 +0000
Author: David Srbecky <1065473@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d080bec6_568cb48c
UUID: b0926a12_435dda7a
Bytes: 143
I though of that as well... it requires the lower_bound iterator to be shared between the first and last part, which is not nice, but it works.

386:8-391:82
Wed Apr 15 09:25:33 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b0926a12_435dda7a
UUID: b07b4aac_5832a123
Bytes: 80
Maybe just factoring the duplicated code into a small function is good enough...

386:0-391:82
Wed Apr 15 09:35:57 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 709c722a_81599ee3
Bytes: 231
Move the code to a new helper function and use it:

  uint32_t NewQuickCodeOffset(CompiledMethod* compiled_method,
                              const ClassDataItemIterator& it,
                              uint32_t thumb_offset);

398:0-403:84
Wed Apr 15 09:35:57 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 90a1e660_02a6ee8b
Bytes: 28
Use the new helper function.

550:26-550:56
Wed Apr 15 09:35:57 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 90a1e660_22768a8d
Bytes: 5
const

553:7-553:18
Wed Apr 15 09:35:57 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 90a1e660_82819ed4
Bytes: 5
const

