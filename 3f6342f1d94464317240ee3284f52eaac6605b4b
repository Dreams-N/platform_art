Revision: 3f6342f1d94464317240ee3284f52eaac6605b4b
Patch-set: 1
File: runtime/gc/allocator/rosalloc.cc

996:0-996:62
Fri Sep 25 10:01:14 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: eeb7ade1_795567be
Bytes: 32
I don't understand this comment.

1956:0-1986:3
Fri Sep 25 10:01:14 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2ebd45ca_1360cc96
Bytes: 40
Why is that not calling InspectAllSlots?

File: runtime/gc/allocator/rosalloc.h

118:16-118:17
Fri Sep 25 10:01:14 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ce074951_30e7a85a
Bytes: 5
const

135:16-135:24
Fri Sep 25 10:01:14 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: eececd75_81555ac1
Bytes: 23
Why making it optional?

139:16-139:17
Fri Sep 25 10:01:14 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: eeb7ade1_f929774e
Bytes: 5
const

142:16-142:17
Fri Sep 25 10:01:14 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ce074951_10ec243b
Bytes: 5
const

146:17-146:18
Fri Sep 25 10:01:14 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 4ec27958_9422046b
Bytes: 5
const

149:10-149:16
Fri Sep 25 10:01:14 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0e9a4178_55cebe98
Bytes: 145
Maybe FetchOneSlotAndRemove?

Just calling it Remove makes me think that there must be some guarantee about whehre it removes (random/head/tail).

214:28-214:32
Fri Sep 25 10:01:14 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: eececd75_615056d0
Bytes: 9
kUseTail?

215:0-221:7
Fri Sep 25 10:01:14 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 4ec27958_d42c7c61
Bytes: 37
Move all this to if (kIsDebugBuild) ?

284:22-284:40
Fri Sep 25 10:01:14 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 4ec27958_f429784e
Bytes: 73
Why do we need this guarantee? Please add the explanation in the comment.

415:6-415:44
Fri Sep 25 10:01:14 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 4ec27958_1456f4ce
Bytes: 10
nit: drop?

477:0-483:48
Fri Sep 25 10:01:14 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2ebd45ca_938cdcbe
Bytes: 38
What are these Java-conventions named?

