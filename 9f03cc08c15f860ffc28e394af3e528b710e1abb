Revision: 9f03cc08c15f860ffc28e394af3e528b710e1abb
Patch-set: 3
File: /COMMIT_MSG

11:17-11:28
Fri Aug 26 17:31:03 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c56d9e44_245f521f
Bytes: 18
Technically wrong.

17:8-18:17
Wed Aug 31 17:08:04 2016 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7104b94d_11b9cc83
Bytes: 53
I don't get his comment. Could you give more details?

17:8-18:17
Thu Sep 01 15:53:51 2016 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7104b94d_11b9cc83
UUID: 310a415e_d25bc280
Bytes: 645
Sure, this is about file management and the fact that we look for VDEX in the same folder as ART/OAT.

Patchoat takes an input ART/OAT file, relocates it and writes into an output file. If the input/output paths are the same ("self-relocation"), we're done. If they're not, we need to symlink the VDEX into the same folder, under the same name as the ART/OAT only with ".vdex" extension.

Patchoat already does that for PIC OAT files, btw...

Maybe another point here. Please look at the changes to patchoat and installd. We need to agree what to do when installd gives patchoat FDs rather than filenames. You cannot create a symlink from an FD.

17:8-18:17
Fri Sep 02 11:59:10 2016 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 310a415e_d25bc280
UUID: 91668dcf_3ad0c1be
Bytes: 440
Got it.

That's a tricky point. I don't think the symlink strategy is viable. As you said installd always passes descriptors and that's unlikely to change. Also, you'll not have the permissions to create links there (unlikely to change as well).

I think we'll need to accept a hard copy for now. Or be prepared to handle the complexity of a different vdex location.

Given that a hard copy is not actually a regression I'd start with that.

File: build/Android.oat.mk

279:44-280:45
Wed Aug 31 17:08:04 2016 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 111c5dae_4641d259
Bytes: 340
I suggest we derive the vdex-location from the oat-location. Or better said the other way around. We have way too many locations, and I don't see a good reason to specify them separately. Thoughts?

I don't think we can do the same with --oat-file and --vdex-file because at some point we have to pass in descriptors. But that's ok I guess.

279:44-280:45
Thu Sep 01 15:53:51 2016 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 111c5dae_4641d259
UUID: 111c5dae_26a016a5
Bytes: 109
Yeah, I was thinking the same, but I'd rather not get stuck in nitty-gritty nice-to-have refactors right now.

279:44-280:45
Fri Sep 02 11:59:10 2016 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 111c5dae_26a016a5
UUID: 1191bdce_dec8a51b
Bytes: 640
I think this qualifies for more than nitty-gritty details.

Once you introduce the concept is hard to get rid of it. Based on my personal experience wil "*-location" I think this will be a headache. (dex-location, oat-location, vdex-location...)

Particular places were the management of different keys will be tricky and complex:

- class linker: once you move to implement vdex without having an oat file things will get tricky. What's the plan forward for that?

- profiling: different keys will make profiling matching a pain. Right now we're based on the dex location, but I expect we might need to change that in the presence of vdex.

File: compiler/image_test.cc

124:19-124:27
Fri Aug 26 17:44:58 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c56d9e44_8476469a
Bytes: 14
Separate line.

124:19-124:27
Thu Sep 01 15:53:51 2016 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: c56d9e44_8476469a
UUID: 312321ee_caf0235b
Bytes: 74
This was just a quick way of making it compile. Gtests now passing in PS4.

File: compiler/oat_test.cc

187:49-187:58
Fri Aug 26 17:44:58 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c56d9e44_a47342a9
Bytes: 14
Separate line.

187:49-187:58
Thu Sep 01 15:53:51 2016 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: c56d9e44_a47342a9
UUID: 111c5dae_e6c55e85
Bytes: 5
ditto

File: compiler/oat_writer.cc

444:29-444:30
Fri Aug 26 17:44:58 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c56d9e44_44b60e3f
Bytes: 19
Period, same below.

444:29-444:30
Thu Sep 01 15:53:51 2016 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: c56d9e44_44b60e3f
UUID: b160f11c_f6307e5b
Bytes: 4
Done

463:5-463:8
Wed Aug 31 17:08:04 2016 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5105f548_b0e43837
Bytes: 26
Misleading. Get or Record?

463:5-463:8
Thu Sep 01 15:53:51 2016 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5105f548_b0e43837
UUID: f1efc9c0_50419259
Bytes: 4
Done

File: compiler/oat_writer.h

110:4-110:26
Fri Aug 26 17:44:58 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c56d9e44_e46d3ac6
Bytes: 63
Tracking bug? You're changing the default without any mentions.

110:4-110:26
Wed Aug 31 17:08:04 2016 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: c56d9e44_e46d3ac6
UUID: d163a525_9445c43f
Bytes: 28
Could you provide rationale?

110:4-110:26
Thu Sep 01 15:53:51 2016 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d163a525_9445c43f
UUID: f1efc9c0_f04fde83
Bytes: 221
Yep, sorry about not pointing this out. No reason why this wouldn't work. I disabled it because the tables are written into the OAT through the DEX mmap (which I'm moving to the VDEX). Fixed in PS4, pending go/aog/267355.

File: dex2oat/dex2oat.cc

954:1-965:11
Wed Aug 31 17:08:04 2016 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 310a415e_6f84b164
Bytes: 54
can you write a helper? it's getting quite repetitive.

954:1-965:11
Thu Sep 01 15:53:51 2016 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 310a415e_6f84b164
UUID: f1efc9c0_f097de94
Bytes: 4
Done

1283:6-1283:98
Wed Aug 31 17:08:04 2016 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 11f37dac_8ec8fb9e
Bytes: 12
no truncate?

1283:6-1283:98
Thu Sep 01 15:53:51 2016 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 11f37dac_8ec8fb9e
UUID: b160f11c_16fffa51
Bytes: 60
Good catch, we still need it. I'm getting ahead of myself ;)

1348:0-1352:5
Wed Aug 31 17:08:04 2016 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d163a525_74fbc8db
Bytes: 12
add helpers.

1348:0-1352:5
Thu Sep 01 15:53:51 2016 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d163a525_74fbc8db
UUID: d1272549_74528869
Bytes: 42
Went with a loop over the storage vectors.

1875:0-1881:9
Wed Aug 31 17:08:04 2016 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 91ff6d6b_9587660d
Bytes: 5
ditto

1875:0-1881:9
Thu Sep 01 15:53:51 2016 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 91ff6d6b_9587660d
UUID: 91ff6d6b_3544bafd
Bytes: 4
Done

1951:0-1959:5
Wed Aug 31 17:08:04 2016 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7104b94d_d14c6492
Bytes: 5
ditto

1951:0-1959:5
Thu Sep 01 15:53:51 2016 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7104b94d_d14c6492
UUID: d163a525_f726bad3
Bytes: 4
Done

File: patchoat/patchoat.cc

453:4-453:7
Wed Aug 31 17:08:04 2016 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b160f11c_338a0874
Bytes: 40
PLOG(), and without strerror at the end.

453:4-453:7
Thu Sep 01 15:53:51 2016 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b160f11c_338a0874
UUID: 5105f548_b36e02f6
Bytes: 4
Done

File: runtime/image.h

183:0-189:25
Wed Aug 31 17:08:04 2016 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 111c5dae_c675c2c2
Bytes: 7
helper?

183:0-189:25
Thu Sep 01 15:53:51 2016 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 111c5dae_c675c2c2
UUID: 7104b94d_f1dfe825
Bytes: 4
Done

File: runtime/oat_file.cc

970:19-970:31
Wed Aug 31 17:08:04 2016 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b160f11c_5389847a
Bytes: 68
Document. I'm sure I've seen this function somewhere else in the CL.

970:19-970:31
Thu Sep 01 15:53:51 2016 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b160f11c_5389847a
UUID: f1efc9c0_102eeab2
Bytes: 14
Now in utils.h

File: runtime/oat_file.h

283:1-283:34
Fri Aug 26 16:59:53 2016 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 45052e49_1088a485
Bytes: 139
maybe you should reverse the dependency?

Vdex will contain the dex file, which means you can run without the oat but not without the vdex.

283:1-283:34
Fri Aug 26 17:24:40 2016 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 45052e49_1088a485
UUID: 45052e49_b076f899
Bytes: 783
Thanks for raising this. I thought about doing that but decided against it. Definitely something we can revisit, though I'd try to avoid it for now (as explained below) and it would also be a major refactor.

The reason why is that I'd like to keep the VDEX as simple as possible (so we minimize the risk of having to change the format at any point in the future). OAT actually provides the runtime with a lot of support, OatDexFile instances to name just one example, but that's tied to the runtime internals. We don't want that in or near the VDEX.

So you are absolutely correct that interpret-only technically won't need an OAT once quickening info is in the VDEX, but I'd rather think of that scenario as running out of an uncompressed+quickened APK than the VDEX replacing OAT.

283:1-283:34
Fri Aug 26 17:44:58 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 45052e49_b076f899
UUID: c56d9e44_44352e88
Bytes: 426
quickening is runtime internals. :-)

How are you imagining to limit the complexity in places like the class-linker? Where is the management of "plain dex" vs "vdex-only" vs "oat+vdex" gonna happen, and how? Do you plan to drop the vdex parts and just use the existing dex & oat vectors? Do you plan to add a third vector (please don't)?

I think that design has an impact and who depends on what, or where parts are stored...

File: runtime/oat_file_assistant.cc

35:0-50:1
Wed Aug 31 17:08:04 2016 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b160f11c_b39d78bb
Bytes: 89
Add these as utilities as use them in the other parts where you do filename manipulation.

35:0-50:1
Thu Sep 01 15:53:51 2016 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b160f11c_b39d78bb
UUID: 310a415e_d232a248
Bytes: 10
Yep, done.

File: runtime/vdex_file.h

43:59-43:60
Wed Aug 31 17:08:04 2016 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7104b94d_513874f5
Bytes: 5
1? :)

43:59-43:60
Thu Sep 01 15:53:51 2016 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7104b94d_513874f5
UUID: f1efc9c0_302966ab
Bytes: 18
Meh, still in beta

