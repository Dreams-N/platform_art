Revision: fe8a1d4e5b4683529583ee01ae67a34c053b6173
Patch-set: 2
File: compiler/optimizing/intrinsics_arm64.cc

292:0-293:71
Fri Jan 29 11:03:45 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b140d043_50182cc4
Bytes: 280
It's a matter of personal taste, but I'd use the RegisterFrom helper here, as we do in compiler/optimizing/code_generator_arm64.cc:

  Register op1_reg = RegisterFrom(op1, type);
  Register op2_reg = RegisterFrom(op2, type);

(and pass `type` instead of `is_long` to this method).

296
Fri Jan 29 12:05:57 2016 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f1116843_5a7955a3
Bytes: 312
Three instructions are necessary, but we can spare one conditional instruction by using an arithmetic shift.

__ Sub(out, op1, op2, SetFlags);
__ Asr(out, out, op1.size() - 1);
// At this point `out` contains:
//   * -1 if op1 < op2
//   * 0 otherwise
// Now fix the result when op1 > op2.
__ Cinc(out, out, gt);

296
Fri Jan 29 12:17:50 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f1116843_5a7955a3
UUID: 112fdc8d_6b8ea11e
Bytes: 100
This doesn't work due to arithmetic overflows: INT_MIN < INT_MAX but (INT_MIN - INT_MAX) >> 31 == 0.

297:18-297:28
Fri Jan 29 11:03:45 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d139c4d1_712578ec
Bytes: 23
Nit: extra white space.

