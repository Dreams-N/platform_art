Revision: cbb2e7ca967ea23571aba6a7341e9a7ba4bb66fe
Patch-set: 5
File: compiler/optimizing/code_generator_arm64.cc

1592
Tue Jul 07 14:05:23 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d829ca86_ce2fe342
Bytes: 81
Missing line:

  // `InstructionSimplifierArm64::TryExtractArrayAccessAddress()`.

1592
Wed Jul 15 07:52:51 2015 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d829ca86_ce2fe342
UUID: 389bc68e_c4abd091
Bytes: 4
Done

File: compiler/optimizing/code_generator_arm64.h

185:2-186:84
Tue Jul 07 14:05:23 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1840c241_b0af581a
Bytes: 33
Where is this method implemented?

185:2-186:84
Wed Jul 15 07:52:51 2015 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1840c241_b0af581a
UUID: d88d4a46_718032d2
Bytes: 41
Removed.
(Left over after modifications.)

File: compiler/optimizing/common_arm64.h

206:6-207:89
Tue Jul 07 14:05:23 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 18f28255_23b1d4ff
Bytes: 13
One per line?

206:6-207:89
Wed Jul 15 07:52:51 2015 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 18f28255_23b1d4ff
UUID: 389bc68e_a4b0ccfc
Bytes: 4
Done

File: compiler/optimizing/instruction_simplifier_arch.cc

23:2-23:33
Tue Jul 07 14:05:23 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d829ca86_0e6f2b77
Bytes: 57
I know it's a bit premature, but maybe use a switch here?

23:2-23:33
Wed Jul 15 07:52:51 2015 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d829ca86_0e6f2b77
UUID: b8a6d6d3_9d8f6381
Bytes: 4
Done

File: compiler/optimizing/instruction_simplifier_arch.h

24
Tue Jul 07 14:05:23 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1840c241_3095a8c1
Bytes: 104
Add a comment saying that this class implements arch-specific instruction simplifications/optimizations.

24
Wed Jul 15 07:52:51 2015 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1840c241_3095a8c1
UUID: 389bc68e_e48ff431
Bytes: 4
Done

File: compiler/optimizing/instruction_simplifier_arm64.cc

29:0-43:2
Tue Jul 07 14:05:23 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 18f28255_838b0028
Bytes: 169
Turn `array`, `index` and `access_size` into arguments of TryExtractArrayAccessAddress and let VisitArrayGet and VisitArraySet pass them to TryExtractArrayAccessAddress?

29:0-43:2
Wed Jul 15 07:52:51 2015 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 18f28255_838b0028
UUID: d8470aeb_5ec8d597
Bytes: 10
Yes. Done.

72:30-72:31
Tue Jul 07 14:05:23 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 18f28255_6390fc51
Bytes: 17
Nit: extra space.

72:30-72:31
Wed Jul 15 07:52:51 2015 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 18f28255_6390fc51
UUID: 985112ab_9cbd0506
Bytes: 4
Done

File: compiler/optimizing/nodes_arm64.h

24:6-24:31
Tue Jul 07 14:05:23 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d829ca86_ae7db729
Bytes: 53
Briefly document the purpose of this new instruction?

24:6-24:31
Wed Jul 15 07:52:51 2015 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d829ca86_ae7db729
UUID: d8470aeb_7ec5917e
Bytes: 4
Done

File: compiler/optimizing/optimizing_compiler.cc

358:2-358:32
Tue Jul 07 14:05:23 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d829ca86_6e490f07
Bytes: 29
Likewise, introduce a switch?

358:2-358:32
Wed Jul 15 07:52:51 2015 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d829ca86_6e490f07
UUID: 18f0c2db_30d2c846
Bytes: 4
Done

File: test/511-checker-arm64-array-access-split/info.txt

1:33-1:45
Tue Jul 07 14:05:23 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d8fb8a32_9e291d3f
Bytes: 12
optimization

1:33-1:45
Wed Jul 15 07:52:51 2015 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d8fb8a32_9e291d3f
UUID: b8fdf6c1_65f1a6de
Bytes: 4
Done

File: test/511-checker-arm64-array-access-split/src/Main.java

2:0-15:2
Tue Jul 07 14:05:23 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1840c241_b08878a6
Bytes: 19
Indentation is off.

2:0-15:2
Wed Jul 15 07:52:51 2015 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1840c241_b08878a6
UUID: 18f0c2db_10cfc49e
Bytes: 4
Done

210:64-210:74
Tue Jul 07 14:05:23 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f8f4ce42_df2f9b42
Bytes: 10
simplifier

210:64-210:74
Wed Jul 15 07:52:51 2015 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f8f4ce42_df2f9b42
UUID: 985112ab_bcc24179
Bytes: 4
Done

215:54-215:56
Tue Jul 07 14:05:23 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d829ca86_ce5923d2
Bytes: 49
Is this relevant to check that this offset is 12?

215:54-215:56
Wed Jul 15 07:52:51 2015 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d829ca86_ce5923d2
UUID: 38e906fb_31d2d046
Bytes: 242
It is not. Unluckily it otherwise often breaks if I don't specify the value.
If there is any other `IntConstant` between the `IntConstant 1` and the one we care about, checker matches that one, and it fails the DAG checks.

I added a comment.

228:54-228:56
Tue Jul 07 14:05:23 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1840c241_302fe818
Bytes: 9
Likewise?

228:54-228:56
Wed Jul 15 07:52:51 2015 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1840c241_302fe818
UUID: 38e906fb_11cfcc9e
Bytes: 10
See above.

266:54-266:56
Tue Jul 07 14:05:23 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d829ca86_6eb22f89
Bytes: 9
Likewise?

266:54-266:56
Wed Jul 15 07:52:51 2015 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d829ca86_6eb22f89
UUID: 985112ab_7cc5997e
Bytes: 10
See above.

282:54-282:56
Tue Jul 07 14:05:23 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d8fb8a32_fe73815d
Bytes: 9
Likewise?

282:54-282:56
Wed Jul 15 07:52:51 2015 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d8fb8a32_fe73815d
UUID: d8470aeb_3ecf099f
Bytes: 10
See above.

289
Tue Jul 07 14:05:23 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d829ca86_2ebc2757
Bytes: 45
Add

  CHECK-NOT: Arm64IntermediateAddress

?

289
Wed Jul 15 07:52:51 2015 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d829ca86_2ebc2757
UUID: 18f0c2db_d0e13c15
Bytes: 4
Done

291
Tue Jul 07 14:05:23 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1840c241_d0453cc9
Bytes: 45
Add

  CHECK-NOT: Arm64IntermediateAddress

?

291
Wed Jul 15 07:52:51 2015 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1840c241_d0453cc9
UUID: b8fdf6c1_25ebaef0
Bytes: 4
Done

