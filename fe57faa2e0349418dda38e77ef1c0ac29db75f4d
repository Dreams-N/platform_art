Revision: fe57faa2e0349418dda38e77ef1c0ac29db75f4d
Patch-set: 2
File: compiler/optimizing/builder.cc

1741:28-1742:77
Wed Sep 23 09:31:56 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 29f8dff9_db0a535f
Bytes: 17
Nit: one per line

1741:28-1742:77
Thu Sep 24 12:39:03 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 29f8dff9_db0a535f
UUID: 0e5fa128_ed01817c
Bytes: 4
Done

File: compiler/optimizing/code_generator_arm64.cc

3551
Mon Sep 21 19:31:22 2015 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 69dad736_5fe96627
Bytes: 91
Nit: what about

    for (int32_t case_value = lower_boud; case_value < lower_bound +; ...)

3551
Mon Sep 21 19:52:15 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 69dad736_5fe96627
UUID: 692bb717_8941492c
Bytes: 165
I need the value of i for the successors too.  Works out to be about the same.  You will discard all this for a jump table later, and then you won't need the values.

3551
Mon Sep 21 20:00:42 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 692bb717_8941492c
UUID: c9ae6393_75f0ff9e
Bytes: 74
Also doesn't work when the last value is MAX because of overflow, does it?

File: compiler/optimizing/nodes.h

2406:3-2406:28
Wed Sep 23 09:31:56 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e90b27d5_59f763c2
Bytes: 66
This feels very codegen detail. Why not just making it a HSwitch ?

2406:3-2406:28
Wed Sep 23 15:52:15 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e90b27d5_59f763c2
UUID: a905afc4_7ac695d2
Bytes: 175
I disagree. Switches are significantly different enough. If you remove a branch from a packed switch, it's no longer a packed switch. So making it explicit is better, I think.

2406:3-2406:28
Wed Sep 23 15:54:08 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a905afc4_7ac695d2
UUID: 69ee5738_1d2af359
Bytes: 129
So at the high-level, a switch is just a branch instruction with multiple successors. Why does the HIR need to care about packed?

2406:3-2406:28
Thu Sep 24 12:39:03 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 69ee5738_1d2af359
UUID: 2e2e2591_8ec55bc7
Bytes: 143
This was originally HSwitch, but Andreas asked for HPackedSwitch, to differentiate from a possible HSparseSwitch.  Do you want it changed back?

2406:3-2406:28
Thu Sep 24 15:53:18 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2e2e2591_8ec55bc7
UUID: 8e52b121_293429bf
Bytes: 175
Nicolas, by your argument all invokes are equal, because at the high level they dispatch to different methods, passing some parameters along. Why have different HInstructions?

2406:3-2406:28
Thu Sep 24 16:45:31 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 8e52b121_293429bf
UUID: 0e9a4178_d211e418
Bytes: 308
No. They are going to be optimized differently at the HIR level. See VisitInvokeStatic/VisitInvokeVirtual/VisitInvokeInterface in optimzations, where their implementation differ.

That's the level at which we need to think for instructions. What would be the optimziations you do at a HIR level on a HSwitch?

2406:3-2406:28
Thu Sep 24 16:56:08 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0e9a4178_d211e418
UUID: 4e4c398b_aab48bb4
Bytes: 405
The only difference is the DCE handling of Switch.  I would be happy with HSwitch, and let the BE decide whether to generate jumping or successive tests based on the BE's needs.  For eaxmple, I would remove the arbitrary 'only do this if there are more than 5 items to test' and let each BE generate the code it wants

Do we want to move this discussion to https://android-review.googlesource.com/172695 ?

2406:3-2406:28
Thu Sep 24 16:57:25 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0e9a4178_d211e418
UUID: ce582944_4ee3e7c3
Bytes: 135
Removing unnecessary cases (can be determined by range analysis, for example), should behave differently for the switches, for example.

2411:16-2412:42
Wed Sep 23 09:31:56 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a9612fbd_77f7b0c2
Bytes: 12
one per line

2411:16-2412:42
Thu Sep 24 12:39:03 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a9612fbd_77f7b0c2
UUID: ee616dea_6f30e51d
Bytes: 4
Done

2432:0-2433:23
Wed Sep 23 09:31:56 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 09095bdd_7a133994
Bytes: 6
const?

2432:0-2433:23
Thu Sep 24 12:39:03 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 09095bdd_7a133994
UUID: 6e4d7d85_a84933fc
Bytes: 4
Done

