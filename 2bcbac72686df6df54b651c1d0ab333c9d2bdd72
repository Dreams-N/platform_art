Revision: 2bcbac72686df6df54b651c1d0ab333c9d2bdd72
Patch-set: 2
File: compiler/jni/quick/arm64/calling_convention_arm64.cc

192:0-198:16
Fri Mar 27 07:09:30 2015 +0000
Author: Zheng Xu <1042649@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 83cfde46_0cb637f0
Bytes: 91
This is for stack visitor art test. So far, I haven't found a good solution to remove this.

192:0-198:16
Fri Mar 27 09:05:22 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 83cfde46_0cb637f0
UUID: c3c55625_ce882324
Bytes: 57
Why do you want to remove this? We need it for debugging.

192:0-198:16
Fri Mar 27 09:28:43 2015 +0000
Author: Zheng Xu <1042649@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: c3c55625_ce882324
UUID: 63caea3a_cb5a5554
Bytes: 247
For Java debug, we won't break in JNI function. When we need to deliver exception or de-optimization, there should always be a callee-save frame(SaveAll) as top quick frame.

I think currently this is only necessary for the stack visitor art test.

192:0-198:16
Fri Mar 27 09:30:31 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 63caea3a_cb5a5554
UUID: 83cfde46_6cf7bba5
Bytes: 168
We won't break into a JNI function, but the debugger can still investigate values of DEX registers. This code ensures the stack walker knows where to find those values.

192:0-198:16
Fri Mar 27 09:34:46 2015 +0000
Author: Zheng Xu <1042649@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 83cfde46_6cf7bba5
UUID: 63caea3a_6bb1e1f6
Bytes: 165
Ok, I got it. This is for the case JAVA_method_1->JNI_function->JAVA_method_2. When we break on JAVA_method_2, we still need to find out the values in JAVA_method_1.

File: runtime/arch/arm64/quick_entrypoints_arm64.S

672:0-674:28
Fri Mar 27 07:09:30 2015 +0000
Author: Zheng Xu <1042649@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 83cfde46_2cbbf3d6
Bytes: 142
This comment just reflect the current implementation. I not clear about the history why we adding this. But I don't think these are necessary.

672:0-674:28
Fri Mar 27 09:05:22 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 83cfde46_2cbbf3d6
UUID: 83cfde46_0c8f172e
Bytes: 88
Probably me that added this. It is so we don't force ourselves following the native ABI.

672:0-674:28
Fri Mar 27 09:28:43 2015 +0000
Author: Zheng Xu <1042649@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 83cfde46_0c8f172e
UUID: 83cfde46_ac7fe38c
Bytes: 73
Now optimizing compiler supports callee-saves. Should we still keep this?

672:0-674:28
Fri Mar 27 09:31:27 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 83cfde46_ac7fe38c
UUID: 83cfde46_0cfcf784
Bytes: 4
Yes.

File: runtime/asm_support.h

31:0-32:25
Fri Mar 27 09:05:22 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c3c55625_ee85df0a
Bytes: 44
I think you can remove this for arm as well.

31:0-32:25
Fri Mar 27 09:28:43 2015 +0000
Author: Zheng Xu <1042649@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: c3c55625_ee85df0a
UUID: 83cfde46_8c822700
Bytes: 72
It is controlled by ARM_R4_SUSPEND_FLAG? Should we entirely remove that?

31:0-32:25
Fri Mar 27 09:31:27 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 83cfde46_8c822700
UUID: 63caea3a_ab510937
Bytes: 84
Isn't that set to false now? Bill/Vladimir/Andreas: should we get rid of that macro?

