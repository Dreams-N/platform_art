Revision: 7bda3b600d74c9a5746840ebb8534443e486615a
Patch-set: 4
File: runtime/base/arena_allocator.h

183:8-183:41
Wed Oct 07 17:02:04 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5061411e_a7dc127c
Bytes: 272
Could you disassemble and see what happens to this, please?

In the past, the builtin_unlikely sometimes stopped constant evaluation, and as ASAN seems to be the actual "memory tool" we're supporting (valgrind being still/again broken), this could be fully optimized away.

183:8-183:41
Wed Oct 07 17:30:26 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5061411e_a7dc127c
UUID: 70700519_e4f0da53
Bytes: 85
Seriously? That would also prevent optimizing away CHECK()s with constant conditions.

183:8-183:41
Wed Oct 07 17:33:17 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 70700519_e4f0da53
UUID: 704d65ae_d0e74c0a
Bytes: 150
I never figured out under which conditions, but I did see them. Admittedly it was last year. This is really only to make sure that it's going right...

183:8-183:41
Wed Oct 07 18:43:37 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 704d65ae_d0e74c0a
UUID: 459c212a_5ba5c3de
Bytes: 378
If I compile with SANITIZE_HOST=true FORCE_BUILD_LLVM_COMPONENTS=true, the host global_value_numbering.o have no references to DoMakeInaccessible. The target global_value_numbering.o still does because it's compiled against valgrind.

The one thing left to do is to change makefiles and memory_tool.h so that the default configuration does _not_ assume we can run with valgrind.

