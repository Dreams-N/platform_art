Revision: 007ecd3f7dc002c7d4d82bca97605b8d68caf288
Patch-set: 2
File: runtime/gc/reference_queue.cc

157:6-157:55
Wed Jan 27 00:54:58 2016 +0000
Author: Hans Boehm <1042828@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 94b2daf4_4c429b98
Bytes: 34
Why is it safe to remove the test?

157:6-157:55
Wed Jan 27 21:14:47 2016 +0000
Author: Richard Uhler <1057373@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 94b2daf4_4c429b98
UUID: 7431e681_b6bee8ca
Bytes: 162
There is a check on the Java side to ensure a reference isn't put on its (Java) ReferenceQueue multiple times, so we don't have to check or worry about that here.

File: runtime/gc/reference_queue.h

63:2-63:86
Wed Jan 27 00:54:58 2016 +0000
Author: Hans Boehm <1042828@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 34c3ee5c_d1d5633a
Bytes: 106
I would have inlined the two line implementation, thus removing the need for at least most of the comment.

63:2-63:86
Wed Jan 27 21:14:47 2016 +0000
Author: Richard Uhler <1057373@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 34c3ee5c_d1d5633a
UUID: b4a43ebb_ad6f9ad0
Bytes: 42
I merged the two implementations into one.

65:5-65:61
Mon Jan 25 20:26:34 2016 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 74c9e678_5699545f
Bytes: 288
We shouldn't enqueue a reference that's already pending-enqueued, correct? If so, is the original comment better phrased ("without checking" for a performance reason) because this new comment would make it sound like it's valid to enqueue a reference that may already be pending-enqueued?

65:5-65:61
Mon Jan 25 23:31:21 2016 +0000
Author: Richard Uhler <1057373@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 74c9e678_5699545f
UUID: f49a3677_55f23e89
Bytes: 215
I think EnqueuePendingReference should be a private function, that is used only internally. It may currently be used in a few places instead of EnqueueReference to improve performance. I'll look into this some more.

65:5-65:61
Wed Jan 27 21:14:47 2016 +0000
Author: Richard Uhler <1057373@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f49a3677_55f23e89
UUID: 14beeac6_b521b38d
Bytes: 4
Done

File: runtime/mirror/reference.h

92
Mon Jan 25 20:26:34 2016 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 74c9e678_f6fc208a
Bytes: 142
Does this sort depends on the discussion in bug 26647823?

How about keeping the comment "once enqueued, the pending next is always non-null"?

92
Mon Jan 25 23:31:21 2016 +0000
Author: Richard Uhler <1057373@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 74c9e678_f6fc208a
UUID: b4afde8e_fb524bb6
Bytes: 105
This does not depend on the answer to the question in b/26647823. I'll update the comment as you suggest.

92
Wed Jan 27 00:54:58 2016 +0000
Author: Hans Boehm <1042828@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b4afde8e_fb524bb6
UUID: f4b5d6da_b450e05a
Bytes: 185
In light of Jeremy's comment in the other discussion is "WasPendingEnqueued" or just "PendingEnqueued" a better name?

This returns true even if the reference is no longer on any queue.

92
Wed Jan 27 21:14:47 2016 +0000
Author: Richard Uhler <1057373@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f4b5d6da_b450e05a
UUID: 34c3ee5c_a66ee895
Bytes: 86
I switched the polarity and renamed it to IsUnprocessed. Hopefully that is more clear.

92
Thu Jan 28 01:46:48 2016 +0000
Author: Hans Boehm <1042828@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 34c3ee5c_a66ee895
UUID: 941ada01_c0f7143e
Bytes: 27
Sounds good to me.  Thanks.

