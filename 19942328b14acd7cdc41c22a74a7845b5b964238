Revision: 19942328b14acd7cdc41c22a74a7845b5b964238
Patch-set: 7
File: build/Android.common_build.mk

236:0-236:82
Tue Aug 18 12:37:05 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 04a781c0_af95d913
Bytes: 58
Not sure I understand this TODO. Why can't you fix it now?

236:0-236:82
Tue Aug 18 15:23:16 2015 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 04a781c0_af95d913
UUID: 243ac5f6_4a6c2427
Bytes: 53
This is a note to myself I forgot to remove.

Removed

242:0-242:35
Tue Aug 18 12:37:05 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 04a781c0_cf921d29
Bytes: 27
Why does this affect tests?

242:0-242:35
Tue Aug 18 15:23:16 2015 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 04a781c0_cf921d29
UUID: 64591d73_8b2ab2af
Bytes: 81
Many of the compiler gtests hit architecture specific code. We need to handle it.

File: build/Android.gtest.mk

571:0-571:69
Tue Aug 18 12:37:05 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 04a781c0_ef8fe1ff
Bytes: 28
why is svelte an issue here?

571:0-571:69
Tue Aug 18 15:23:16 2015 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 04a781c0_ef8fe1ff
UUID: c471e91c_19547b2a
Bytes: 279
Many compiler gtests hit architecture specific code. Since this is only meant to be used for release builds I felt that disabling these tests was an acceptable workaround. 

If you want I could try to separate out each test so only those usable on the current arch will be built.

580:0-580:67
Tue Aug 18 12:37:05 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 4486d92e_a95ebdf3
Bytes: 5
ditto

580:0-580:67
Tue Aug 18 15:23:16 2015 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 4486d92e_a95ebdf3
UUID: 64591d73_ab5e9646
Bytes: 9
see above

File: compiler/Android.mk

124:0-125:37
Tue Aug 18 12:37:05 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 04a781c0_cf6bfd90
Bytes: 21
Why not doing it now?

124:0-125:37
Tue Aug 18 15:23:16 2015 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 04a781c0_cf6bfd90
UUID: e4aeed64_81950999
Bytes: 469
The dependencies between 64 and 32 bit versions of the same architecture are complex. I would need to basically explore the graph manually to find all of them. I didn't want to spend my time doing this and since there really is no reason why one would only want the 64 bit version when the phone can also use the 32bit version I just made the 64 bit version have a hard dependency on the 32 bit one.

This todo is simply to note that this might be a future improvement.

124:0-125:37
Tue Aug 18 15:35:28 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e4aeed64_81950999
UUID: 04a781c0_cff69d51
Bytes: 348
This should be quite simple. For arm/arm64, only the relative_patcher_arm_base should be shared. For x86/x86-64, it's the relative_patcher_x86_base and the Quick backend. For mips/mips64 it's only the Quick backend.

The question is whether the code is actually properly separated the way we think it is. Maybe we would hit some issues to clean up.

