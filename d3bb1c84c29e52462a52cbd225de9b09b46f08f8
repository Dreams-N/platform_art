Revision: d3bb1c84c29e52462a52cbd225de9b09b46f08f8
Patch-set: 2
File: compiler/optimizing/allocation.h

18:0-18:45
Tue Feb 18 17:39:45 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ef293d20_1d3017ce
Bytes: 76
It seems this should be moved to compiler/utils as its more general purpose.

18:0-18:45
Tue Feb 18 23:02:07 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ef293d20_1d3017ce
UUID: af81054e_784859e9
Bytes: 4
Done

25:0-25:45
Tue Feb 18 17:39:45 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: cf26394f_9cae69ab
Bytes: 120
use logging.h instead, LOG(FATAL) << "UNREACHABLE" I think is the pattern that's in use. Try to avoid the use of macros.

25:0-25:45
Tue Feb 18 23:02:07 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: cf26394f_9cae69ab
UUID: 6f646d9a_ee255b3a
Bytes: 4
Done

File: compiler/optimizing/builder.cc

46:2-46:20
Tue Feb 18 17:39:45 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: cf26394f_7cbd8de5
Bytes: 75
We've been gradually trying to remove DecodeInstruction from the code base.

46:2-46:20
Tue Feb 18 17:51:14 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: cf26394f_7cbd8de5
UUID: 6f8b8d70_79e4dbc1
Bytes: 236
Some explanation, DecodedInstruction isn't fast and its use is often error prone, for example reading the wrong variant of a decoded register. It exists to make the quick compiler's life easy but we've successfully removed it elsewhere.

46:2-46:20
Tue Feb 18 18:37:56 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6f8b8d70_79e4dbc1
UUID: ef7e9d24_ac6be372
Bytes: 225
Using Instruction is preferred and there's also an "easy to use" API for that where you can go VRegA() rather than say VRegA_10t() where you must know the instruction conforms to form 10t (something asserted on debug builds).

46:2-46:20
Tue Feb 18 23:02:07 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: cf26394f_7cbd8de5
UUID: af81054e_f873e9fe
Bytes: 4
Done

File: compiler/optimizing/builder.h

41:0-41:68
Tue Feb 18 17:39:45 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: cf26394f_3cc71582
Bytes: 37
Comment on what the result signifies.

41:0-41:68
Tue Feb 18 23:02:07 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: cf26394f_3cc71582
UUID: 6f646d9a_2e7a93ce
Bytes: 4
Done

43:17-43:18
Tue Feb 18 17:39:45 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ef577db2_e4ba5ac3
Bytes: 5
const

43:17-43:18
Tue Feb 18 23:02:07 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ef577db2_e4ba5ac3
UUID: af81054e_b86d6118
Bytes: 4
Done

47:9-47:10
Tue Feb 18 17:39:45 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: afdf457e_82d4daff
Bytes: 5
const

47:9-47:10
Tue Feb 18 23:02:07 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: afdf457e_82d4daff
UUID: 8f860164_fa551d18
Bytes: 45
Not on this one it's allocated in BuildGraph.

File: compiler/optimizing/nodes.h

29:0-29:35
Tue Feb 18 17:39:45 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: afdf457e_a2a3de95
Bytes: 285
It'd be useful to add an explanation ahead of each class as to what purpose it serves. Some are more meaningful than others,  say HBasicBlock, but the distinction between HExit and HReturnVoid could confuse. Having a style of a comment ahead of each class declaration would abate this.

29:0-29:35
Tue Feb 18 23:02:07 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: afdf457e_a2a3de95
UUID: 6f646d9a_ae62031f
Bytes: 4
Done

33:23-33:24
Tue Feb 18 17:39:45 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6f8b8d70_99989f67
Bytes: 73
We should at least comment where seemingly arbitrary constants come from.

33:23-33:24
Tue Feb 18 23:02:07 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6f8b8d70_99989f67
UUID: 8f860164_9a4ad173
Bytes: 32
I added named constants instead.

41:16-41:17
Tue Feb 18 17:39:45 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: afdf457e_c29ee253
Bytes: 5
const

41:16-41:17
Tue Feb 18 23:02:07 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: afdf457e_c29ee253
UUID: af81054e_387ad1ce
Bytes: 4
Done

81:9-81:10
Tue Feb 18 17:39:45 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: afdf457e_62d1d60d
Bytes: 5
const

81:9-81:10
Tue Feb 18 23:02:07 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: afdf457e_62d1d60d
UUID: 8f860164_ba4f9582
Bytes: 4
Done

