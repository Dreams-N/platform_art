Revision: 824db2e92f698d132014f9aa7c37b0439419cf17
Patch-set: 1
File: compiler/optimizing/instruction_simplifier.cc

361:19-361:39
Tue Nov 17 18:11:46 2015 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7b6aafda_a0bb80e5
Bytes: 101
we have something similar in the boolean_simplifier
perhaps time to move this to a more general place

361:19-361:39
Tue Nov 17 18:24:46 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7b6aafda_a0bb80e5
UUID: 5b816bc7_791a03bd
Bytes: 44
Do you have a suggestion on where to put it?

361:19-361:39
Tue Nov 17 18:39:37 2015 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5b816bc7_791a03bd
UUID: fb75bfb9_965eca51
Bytes: 172
More experienced team members may chime in here, but right now nodes.h/cc seem to be the only place we have for this; we should consider having a general util place perhaps

361:56-361:61
Tue Nov 17 18:59:58 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b67fde4b_957d144c
Bytes: 102
You don't need to pass the arena in, btw. Just get it from

  cond->GetBlock()->GetGraph()->GetArena()

364:27-364:28
Tue Nov 17 18:11:46 2015 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3b2597a9_fbdff154
Bytes: 171
I find doing the opposite this way a bit more error prone than using our built in  GetOppositeCondition() and simply generating the same condition as reflected by the enum

364:27-364:28
Tue Nov 17 18:24:46 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3b2597a9_fbdff154
UUID: 7b6aafda_6015688c
Bytes: 51
Will use the common code from boolean_simplifier.cc

364:27-364:28
Tue Nov 17 18:39:37 2015 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7b6aafda_6015688c
UUID: 7b6aafda_80767ce3
Bytes: 6
thanks

364:27-364:28
Tue Nov 17 18:59:58 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7b6aafda_6015688c
UUID: 56278298_4c5cf3ca
Bytes: 611
If you cannot find a suitable common place, I suggest duplicating because I intend to turn BooleanSimplifier into a SelectGenerator and move the condition simplification here anyway.

That said, could you make this completely general, just like it is in BooleanSimplifier? You'd have three cases:
- `cond` is an HIntConstant => return opposite bool
- `cond` is a non-float HCondition => do the switch and generate opposite cond
- otherwise generate HBooleanNot

This would also reduce the changes in VisitEqual to:

  if (input_const->IsZero) {
    ReplaceAndRemoveWith(equal, GetOppositeCond(input_value));
  }

364:27-364:28
Tue Nov 17 19:09:25 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 56278298_4c5cf3ca
UUID: 76d4867d_47c00f50
Bytes: 63
You still have to ensure that it isn't FP.  Reversing FP is bad

364:27-364:28
Tue Nov 17 19:21:30 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 76d4867d_47c00f50
UUID: 96865a95_3487e8c7
Bytes: 49
I know, that's what I said in the case listing...

364:27-364:28
Tue Nov 17 19:27:26 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 96865a95_3487e8c7
UUID: 1b3453db_1e606b80
Bytes: 4
Done

410:8-412:9
Tue Nov 17 18:59:58 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 169a6aee_e5f6acb9
Bytes: 189
Please leave this to dead code elimination. I know it is safe to remove here, but the instruction simplifier is getting pretty bloated so let's aim to keep it as simple/compact as possible.

410:8-412:9
Tue Nov 17 19:09:25 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 169a6aee_e5f6acb9
UUID: 5b2a4b7b_9c958766
Bytes: 4
Done

438:0-438:47
Tue Nov 17 18:59:58 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 169a6aee_45de802d
Bytes: 29
Wanna do the same thing here?

438:0-438:47
Tue Nov 17 19:09:25 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 169a6aee_45de802d
UUID: db847bce_09b28a0d
Bytes: 4
Done

