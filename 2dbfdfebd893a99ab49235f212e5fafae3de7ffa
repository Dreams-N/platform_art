Revision: 2dbfdfebd893a99ab49235f212e5fafae3de7ffa
Patch-set: 2
File: runtime/hprof/hprof.cc

639:53-639:57
Mon Jul 07 07:55:41 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c498e5f7_229c0ae1
Bytes: 111
Why would that be the proper way? Can't you use sizeof(HeapReference<Object>) (or something like that) instead?

639:53-639:57
Mon Jul 07 10:16:01 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: c498e5f7_229c0ae1
UUID: c498e5f7_e5794ca1
Bytes: 350
Now I see that our references are 32 bits only which means that there's no reason to store sizeof(void*). using sizeof(HeapReference<Object>) might be the proper way but I'm concerned that if we update it in anyway way that modifies the size this will break. (is it a valid concern?). 

I will update the comment to better reflect the way things are.

