Revision: bfb470d89b8f5d16581118a5b58f862b79496558
Patch-set: 4
File: /COMMIT_MSG

7:4-7:12
Wed Jul 08 14:58:57 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 782e1e92_eb0f3137
Bytes: 80
Explain what the HContext is in the commit comments and how it is gonna be used.

File: compiler/optimizing/context.h

10:52-10:79
Wed Jul 08 14:58:57 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 782e1e92_4b2ac588
Bytes: 176
this imply that nit HContext will traverse the graph for me which is not and should not be the case. It might be just a limitation of my language skills, but I'd rephrase this.

10:0-10:2
Wed Jul 08 14:58:57 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d829ca86_f4f030dc
Bytes: 52
style:
/*
 * docs...
 */

here, and everywhere else.

32:4-34:5
Wed Jul 08 14:58:57 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 782e1e92_4b908551
Bytes: 127
We should not eagerly allocate stuff. What if we decide to skip blocks?

We need a lazy solution for this and only when needed.

46:11-46:13
Wed Jul 08 14:58:57 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 782e1e92_cb92355e
Bytes: 40
who is `ni`? i think you want `property`

54:11-54:13
Wed Jul 08 14:58:57 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f8f4ce42_6296b8a0
Bytes: 5
ditto

59:39-59:42
Wed Jul 08 14:58:57 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 18f28255_e659bad1
Bytes: 45
what does res stand for? Maybe use old_value?

109:6-109:34
Wed Jul 08 14:58:57 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1840c241_d60c1445
Bytes: 76
resize will not give you the exact requested size. check the implementation.

111:0-113:7
Wed Jul 08 14:58:57 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d829ca86_1415fc77
Bytes: 73
see my comment in the ctor of this function about wasting space for this.

118:6-118:16
Wed Jul 08 14:58:57 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f8f4ce42_c2c584a0
Bytes: 210
What's the rationale for storing the current block?

I don't think it's ok to hold the state here. I can see a lot of confusion from this and imo is better to pass it as an argument when you set/get properties.

File: compiler/optimizing/reference_type_propagation.cc

347:44-347:70
Wed Jul 08 14:58:57 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1840c241_d63534e3
Bytes: 10
IsStatic()

348:4-348:47
Wed Jul 08 14:58:57 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d829ca86_345a3851
Bytes: 194
Hmm, is this correct?

a.foo() -> a can be null at this point
a.bar() -> a cannot be null at this point

yet after this call the context will think that a cannot be null during the entire block.

File: compiler/optimizing/reference_type_propagation.h

30:43-30:48
Wed Jul 08 14:58:57 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1840c241_96168c4f
Bytes: 67
Shouldn't this be true? the default value should be the safe value.

35:2-35:6
Wed Jul 08 14:58:57 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d829ca86_342918c2
Bytes: 5
const

