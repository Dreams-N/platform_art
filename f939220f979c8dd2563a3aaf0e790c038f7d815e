Revision: f939220f979c8dd2563a3aaf0e790c038f7d815e
Patch-set: 1
File: compiler/optimizing/code_generator.h

214:19-214:34
Tue Jul 12 12:54:00 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1ab2acf6_f738a0dc
Bytes: 89
Please document this (especially since it's the default implementation, "doing nothing").

214:19-214:34
Tue Jul 12 14:08:42 2016 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1ab2acf6_f738a0dc
UUID: 1ab2acf6_97a76421
Bytes: 5
Done.

File: compiler/optimizing/code_generator_arm64.h

425:43-425:59
Tue Jul 12 08:57:52 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1ab2acf6_77e1f0d4
Bytes: 103
So this is 8 right? Worth just making it a GetRegSizeFor...() and put this RoundUp logic in the caller?

425:43-425:59
Tue Jul 12 14:08:42 2016 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1ab2acf6_77e1f0d4
UUID: 1ab2acf6_77a3b016
Bytes: 140
It is 8 indeed.

I don't think we want to push the RoundUp in the caller: I am not sure other archs want to round up that part of the stack.

425:43-425:59
Tue Jul 12 14:15:21 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1ab2acf6_77a3b016
UUID: 1ab2acf6_777c9053
Bytes: 80
But RoundUp(slots_size, 4) should return you slots_slize for other archs, right?

425:43-425:59
Tue Jul 12 14:34:56 2016 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1ab2acf6_777c9053
UUID: 1ab2acf6_37d4d851
Bytes: 501
Oh I think see what you mean now. Your suggestion would of course work.

I am not a fan of introducing a `RoundUp` call for all archs. Even if it does nothing, it looks like it enforces something (when no alignment is actually needed). In that way I like that the current default implementation clearly does nothing.

Note that I also tried to not have any `if (isa == arm64)` in arch-independent code. Otherwise we could just have a few lines under `if (isa == arm64)` at the call site if you prefer.

425:43-425:59
Tue Jul 12 14:46:49 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1ab2acf6_37d4d851
UUID: 1ab2acf6_575b0ce0
Bytes: 152
That would make things local, instead of introducing a new virtual for only one specific use. I think whatever we choose, having things local is better.

425:43-425:59
Tue Jul 12 14:55:29 2016 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1ab2acf6_575b0ce0
UUID: 1ab2acf6_f70420c0
Bytes: 117
Ok, sounds good to me. I was worried we'd be shouted at for introducing arm64-specific code in arch-independent code!

425:43-425:59
Tue Jul 12 14:56:51 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1ab2acf6_f70420c0
UUID: 1ab2acf6_b723884b
Bytes: 88
Yes, and I felt the RoundUp(slots_size, GetPreferedAlignment()) was a good compromise :)

425:43-425:59
Tue Jul 12 14:59:26 2016 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1ab2acf6_b723884b
UUID: 1ab2acf6_77ebb0e5
Bytes: 105
Ok, so in the end I go for the `if (arm64)`, right? Or you prefer the `GetPreferredAllignment()` version?

425:43-425:59
Tue Jul 12 15:02:37 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1ab2acf6_77ebb0e5
UUID: 1ab2acf6_b7ec68fc
Bytes: 157
No strong preference really. Maybe I prefer the GetPreferedAlignment (name being just a suggestion), but I'd understand why you wouldn't want a virtual call.

