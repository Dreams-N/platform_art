Revision: 3e55ae631a107442a33b260add724f0baf198940
Patch-set: 3
File: compiler/dwarf/expression.h

28:6-28:16
Mon Jan 18 09:27:00 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 07931a6b_91ad9ca8
Bytes: 31
Comments on all methods please.

28:6-28:16
Mon Jan 18 11:53:10 2016 +0000
Author: David Srbecky <1065473@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 07931a6b_91ad9ca8
UUID: 47727221_68603bb0
Bytes: 199
I am assuming in most of the DWARF code that the developer is either familiar with DWARF, or at least has the specification at hand to lookup the opcode behavior.
(http://dwarfstd.org/doc/DWARF4.pdf)

28:6-28:16
Mon Jan 18 12:16:36 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 47727221_68603bb0
UUID: e783661b_4d138deb
Bytes: 117
Hmmm, that code is in the ART directory. Not sure any ART member is familiar with that spec, not wants to look it up.

28:6-28:16
Mon Jan 18 12:24:19 2016 +0000
Author: David Srbecky <1065473@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e783661b_4d138deb
UUID: 076cfa46_69184105
Bytes: 325
This file is in the dwarf directory.
If anyone wants to modify the dwarf generating code, I think that knowledge of the dwarf spec might be reasonable to require.
In general, all the files in the dwarf/ directory are intended to be dull helpers to handle the binary encoding of the dwarf opcodes without any high-level logic.

28:6-28:16
Mon Jan 18 12:29:08 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 076cfa46_69184105
UUID: 076cfa46_a90959b6
Bytes: 164
It's not really about modifying, but readability...

IMO the all mighty dwarf api should be hidden, it's areadly obscure enough to not add upper case version of it.

28:6-28:16
Mon Jan 18 16:43:29 2016 +0000
Author: Tamas Berghammer <1059813@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 076cfa46_a90959b6
UUID: 2771fe1c_2a7abbc3
Bytes: 473
From readability perspective the developer who reads or modifies code writing out dwarf expressions has to know quite a bit about dwarf expressions and about the stack machine behind it independently of how we name the methods because he/she have to read/write opcodes for the stack machine. Because of it I would suggest naming the methods to EmitOpConsts (EmitOpConstS), EmitOpConstu, EmitOpReg, etc. because it will make it clear that we are only emitting dwarf opcodes.

28:6-28:16
Mon Jan 18 17:21:34 2016 +0000
Author: David Srbecky <1065473@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2771fe1c_2a7abbc3
UUID: 07931a6b_7112f037
Bytes: 285
Done.

I have added bunch of simple comments.  It does not remove the need to know the spec, but hopefully it should allow people to skim the code and kind of follow it without the spec.

I have added prefix as per Tamas' suggestion.  I do not know if that helps, but it does not hurt.

33:7-33:13
Mon Jan 18 09:27:00 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 8780ea14_0a389baa
Bytes: 11
ConstSigned

33:7-33:13
Mon Jan 18 11:53:10 2016 +0000
Author: David Srbecky <1065473@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 8780ea14_0a389baa
UUID: c786622d_ec5523a3
Bytes: 158
...which means I definitely want to preserve the names as used in the spec so that it is easier to look them up, and obvious to people familiar with the spec.

42:7-42:13
Mon Jan 18 09:27:00 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 47727221_a834f3d4
Bytes: 13
ConstUnsigned

51:7-51:10
Mon Jan 18 09:27:00 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a77deeee_ae01634f
Bytes: 16
MachineRegister?

60:7-60:12
Mon Jan 18 09:27:00 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c786622d_ac87ab81
Bytes: 1
?

65:7-65:12
Mon Jan 18 09:27:00 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c786622d_cc84df7f
Bytes: 1
?

70:7-70:12
Mon Jan 18 09:27:00 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 07931a6b_71a9109a
Bytes: 19
DereferencePointer?

72:7-72:16
Mon Jan 18 09:27:00 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6777760f_89265d92
Bytes: 1
?

77:7-77:11
Mon Jan 18 09:27:00 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2771fe1c_472c503c
Bytes: 4
Add?

79:7-79:17
Mon Jan 18 09:27:00 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2771fe1c_67314c95
Bytes: 20
AddUnsignedConstant?

84:7-84:10
Mon Jan 18 09:27:00 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e783661b_4d98eded
Bytes: 7
Negate?

