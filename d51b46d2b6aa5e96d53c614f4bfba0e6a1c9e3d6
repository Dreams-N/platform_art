Revision: d51b46d2b6aa5e96d53c614f4bfba0e6a1c9e3d6
Patch-set: 1
File: runtime/entrypoints/entrypoint_utils-inl.h

152:6-152:97
Tue Jul 26 01:02:23 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6a4bd746_59b754d3
Bytes: 52
Consider ThrowIllegalAccessError from common_throws.

152:6-152:97
Tue Jul 26 01:25:47 2016 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6a4bd746_59b754d3
UUID: 6a4bd746_b92040b7
Bytes: 109
That one needs a referrer for a very specific message (see here below L158), which applies less to this error

152:6-152:97
Tue Jul 26 01:29:42 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6a4bd746_b92040b7
UUID: 6a4bd746_1935ccdc
Bytes: 138
This one fits:

 void ThrowIllegalAccessError(mirror::Class* referrer, const char* fmt, ...)

You can leave referrer null, if you want to.

File: runtime/verifier/method_verifier.cc

1263:9-1263:39
Tue Jul 26 01:02:23 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6a4bd746_39e8d0aa
Bytes: 149
That's the first time we use it outside of lambdas. This error wasn't meant to be used outside of testing. Not sure we have something better, though.

1263:9-1263:39
Tue Jul 26 01:25:47 2016 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6a4bd746_39e8d0aa
UUID: 6a4bd746_39153050
Bytes: 144
I did notice :-)

But yes, what else is there? Alternatively, I could try to make interpreter *and* compiler handle this and not do this change.

1263:9-1263:39
Tue Jul 26 10:43:45 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6a4bd746_39153050
UUID: 8f473d8f_bb16e7a3
Bytes: 62
We do have needs access check to force the interpreter, right?

