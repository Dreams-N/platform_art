Revision: 701c203f7d8f03d48dd734ebbe30c687f157c08c
Patch-set: 4
File: compiler/elf_writer_debug.cc

709:10-709:36
Tue Dec 15 08:58:29 2015 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 4568aa02_b5856033
Bytes: 99
Why this test if you DCHECK(type_descriptor != nullptr) first? Unless the DCHECK should be removed.

709:10-709:36
Tue Dec 15 11:10:13 2015 +0000
Author: David Srbecky <1065473@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 4568aa02_b5856033
UUID: 85a702bf_cf0cddc4
Bytes: 148
The dex spec says the type can be null.
However, I would still be interested to see a case whether it actually happens.
I can just remove the DCHECK

709:10-709:36
Tue Dec 15 11:31:06 2015 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 85a702bf_cf0cddc4
UUID: 65acceb5_1e58edd1
Bytes: 70
OK, If the spec says the type can be null, the DCHECK must be removed.

709:10-709:36
Tue Dec 15 11:53:09 2015 +0000
Author: David Srbecky <1065473@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 65acceb5_1e58edd1
UUID: 85a702bf_afb95906
Bytes: 4
Done

File: runtime/dex_file.cc

870:16-870:21
Tue Dec 15 08:58:29 2015 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 85a702bf_6fc211ac
Bytes: 3
all

870:16-870:21
Tue Dec 15 11:53:09 2015 +0000
Author: David Srbecky <1065473@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 85a702bf_6fc211ac
UUID: e59a7e77_3297906c
Bytes: 4
Done

File: runtime/dex_file.h

824:10-825:54
Tue Dec 15 08:58:29 2015 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 85b2a2f4_7aab9599
Bytes: 43
One per line if they don't fit on one line.

824:10-825:54
Tue Dec 15 11:53:09 2015 +0000
Author: David Srbecky <1065473@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 85b2a2f4_7aab9599
UUID: 65acceb5_1ef10dfc
Bytes: 4
Done

840:10-841:70
Tue Dec 15 08:58:29 2015 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 85a702bf_4fbd4d23
Bytes: 5
ditto

840:10-841:70
Tue Dec 15 11:53:09 2015 +0000
Author: David Srbecky <1065473@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 85a702bf_4fbd4d23
UUID: 85b2a2f4_1a7379f4
Bytes: 4
Done

1087:7-1087:27
Tue Dec 15 08:58:29 2015 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e59a7e77_b25d40c7
Bytes: 34
Please document the returned value

1087:7-1087:27
Tue Dec 15 11:53:09 2015 +0000
Author: David Srbecky <1065473@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e59a7e77_b25d40c7
UUID: 85b2a2f4_3a783dcc
Bytes: 4
Done

1089:7-1089:30
Tue Dec 15 08:58:29 2015 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 4568aa02_9582e426
Bytes: 5
ditto

1089:7-1089:30
Tue Dec 15 11:53:09 2015 +0000
Author: David Srbecky <1065473@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 4568aa02_9582e426
UUID: 25673634_f7d23a24
Bytes: 4
Done

