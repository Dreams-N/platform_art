Revision: 75eb39eeeb909504828887b8f9886260575aada3
Patch-set: 3
File: /COMMIT_MSG

11:32-11:37
Thu Jul 28 20:51:20 2016 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2f62d18f_11b56eca
Bytes: 6
assert

11:32-11:37
Thu Jul 28 20:55:03 2016 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2f62d18f_11b56eca
UUID: 2f62d18f_b1dd82da
Bytes: 4
Done

File: runtime/gc/collector/concurrent_copying.cc

1934
Thu Jul 28 20:51:20 2016 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2f62d18f_113fae0b
Bytes: 234
Maybe clarify what the failure case would be like in the comment?

Is the failure case that if we do a read barrier while holding this lock, we could do a nested call to AllocateInSkippedBlock (and try to acquire the same lock again)?

1934
Thu Jul 28 20:55:03 2016 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2f62d18f_113fae0b
UUID: 2f62d18f_31eaf270
Bytes: 4
Done

