Revision: bd1c9fc4c3400d2c334836e3499b2f4150783e3b
Patch-set: 27
File: runtime/mirror/class.cc

545
Tue Jan 12 22:39:38 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 87562a44_469a5c89
Bytes: 134
Consider adding: 

Conflict methods are copied into each subtype from the supertype, don't need to do any indirect method checks here.

562
Tue Jan 12 22:39:38 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c75ca266_c8b83732
Bytes: 141
Consider being more clear about order:

  Order matters, traverse in reverse topological order; most subtypiest interfaces get visited first.

567:63-567:90
Tue Jan 12 22:39:38 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 678e9643_ce6a232c
Bytes: 113
Remove or reword:

  Each direct method's name/signature is unique so the order of the inner loop doesn't matter.

573
Tue Jan 12 22:39:38 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 07495aa4_8aaab33e
Bytes: 294
Consider adding clarification:

   // Handle JLS soft errors, a default method from another superinterface tree can "override" an abstract method(s) from another superinterface tree(s).
   // To do this, ignore any [default] method which are dominated by the abstract methods we've seen so far.

585
Tue Jan 12 22:39:38 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 676db610_a5e08826
Bytes: 34
Consider adding: // Is not default

