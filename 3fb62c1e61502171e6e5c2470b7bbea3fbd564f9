Revision: 3fb62c1e61502171e6e5c2470b7bbea3fbd564f9
Patch-set: 2
File: compiler/optimizing/code_generator_arm64.cc

734:20-734:29
Fri Nov 07 16:14:28 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 956382c3_dd2edb2f
Bytes: 28
Do you really hit this case?

734:20-734:29
Mon Nov 10 10:37:51 2014 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 956382c3_dd2edb2f
UUID: 956382c3_1d85b396
Bytes: 8
Removed.

735:32-735:33
Fri Nov 07 16:14:28 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d5697aa3_7f5ea732
Bytes: 72
I think you need some kind of FALLTHROUGH_INTENDED macro here and below.

735:32-735:33
Mon Nov 10 10:37:51 2014 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d5697aa3_7f5ea732
UUID: 3a0563fe_5c3b9d72
Bytes: 256
I don't think we need it because the fall-through is obvious.
The compilation does not give me an error here, and I tested that when there is a non-obvious fall-through (eg. return in an 'if' branch but not in the 'else') the compiler does warn about this.

736:20-736:29
Fri Nov 07 16:14:28 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7578ce6f_5c33b517
Bytes: 44
for readability, I'd prefer a new line here.

736:20-736:29
Mon Nov 10 10:37:51 2014 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7578ce6f_5c33b517
UUID: 7578ce6f_9ca0edb0
Bytes: 4
Done

744:4-744:11
Fri Nov 07 16:14:28 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d5697aa3_bfbcbfe3
Bytes: 47
Do you need this? You've handled all the cases.

744:4-744:11
Mon Nov 10 10:37:51 2014 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d5697aa3_bfbcbfe3
UUID: 956382c3_3d82778f
Bytes: 70
After removing kPrimVoid we need this or the compiler gives a warning.

744:4-744:11
Mon Nov 10 10:39:57 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 956382c3_3d82778f
UUID: 3a0563fe_3c30d18a
Bytes: 44
Yeah, just change default to case kPrimVoid.

815:34-815:38
Fri Nov 07 16:14:28 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 956382c3_fd339f98
Bytes: 18
Remove extra line.

815:34-815:38
Mon Nov 10 10:37:51 2014 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 956382c3_fd339f98
UUID: 956382c3_5d7f2b02
Bytes: 4
Done

824:28-824:33
Fri Nov 07 16:14:28 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 956382c3_1d293326
Bytes: 55
Why can't you just ask a temp in the locations builder?

824:28-824:33
Mon Nov 10 10:37:51 2014 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 956382c3_1d293326
UUID: d5697aa3_5f3d63b0
Bytes: 194
We can. When the use of the temp is very local using a VIXL reg allows not to require a temp from the allocator and can decrease a little the register pressure. I just got used to do this in v8.

824:28-824:33
Mon Nov 10 10:39:57 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d5697aa3_5f3d63b0
UUID: 3a0563fe_1c35157b
Bytes: 93
So what's the consequences of using a vixl reg? vixl is going to spill and restore it, right?

1050:91-1050:102
Fri Nov 07 16:14:28 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7578ce6f_7c30710a
Bytes: 14
Line too long.

1050:91-1050:102
Mon Nov 10 10:37:51 2014 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7578ce6f_7c30710a
UUID: 7578ce6f_dc9a657a
Bytes: 68
Fixed.
Also shortened lines longer than 100 characters in this file.

