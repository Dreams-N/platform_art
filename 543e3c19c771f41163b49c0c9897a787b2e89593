Revision: 543e3c19c771f41163b49c0c9897a787b2e89593
Patch-set: 1
File: compiler/optimizing/optimization.h

24:0-28:71
Fri Feb 20 04:14:59 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 488dfa43_2e3807ca
Bytes: 256
I am actually not sure whether this change is correct. Tests still succeed. But I think some of the cc files try pointer comparisons (which still means the static was wrong before, just that the compiler didn't use its freedom).

Why are these not an enum?

24:0-28:71
Fri Feb 20 10:42:39 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 488dfa43_2e3807ca
UUID: e8106e97_63be82e0
Bytes: 20
string enums in c++?

24:0-28:71
Fri Feb 20 16:46:49 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e8106e97_63be82e0
UUID: 48ab3a9e_9ee63deb
Bytes: 324
No. Why are we using strings to distinguish passes? What's wrong with a standard enum, and a string array if you need to ever write out the name?

In the printer, we have, for example,

 pass_name_ == kLivenessPassName

That is pretty broken whenever you use "static," which says that things are local to a compilation unit.

24:0-28:71
Sat Feb 21 14:53:34 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 48ab3a9e_9ee63deb
UUID: 085862e4_240b924d
Bytes: 106
It is indeed broken. Any fix works for me. Given this is only used in the printer, strcmp could even work.

