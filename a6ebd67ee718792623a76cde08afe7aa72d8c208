Revision: a6ebd67ee718792623a76cde08afe7aa72d8c208
Patch-set: 4
File: runtime/profiler.cc

297:0-304:3
Thu Jun 12 10:54:55 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5f6920a1_7cbeb5ed
Bytes: 814
sorry to come back to this. 

There are some CLs which fix the SELinux policy for profiler files. The files are created by installd and their permission is update to restrict access just to the system server and the app (https://android-review.googlesource.com/#/c/97674/2). I fear that creating the file like this will actually leak details. I'll check with nnk@ as there are some details regarding permissions that I'm no fully familiar with.

As a side note:
I'm thinking that it might be cleaner and easier actually to update the original format and store the dex_pc in the current profile file. The disadvantage is that we'll take more space but I don't think we'll have so many different PC per functions to worry about it. One way to compact this is: "method/total_count/size/[pc_1:count_1,pc_2:count_2...]"

297:0-304:3
Thu Jun 12 16:43:44 2014 +0000
Author: Wei Jin <1047393@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5f6920a1_7cbeb5ed
UUID: bfc3fcc9_182e9580
Bytes: 879
Yes, I have already noticed that the normal profile files are created by app installd. For all app installed into the device, the profile file can be read and written by apps and can be world readable for system user to read the file. This condition of creating new profile files will only happen when profile options are provided through a dalvikvm command. To my understanding, only the root user can directly invoke dalvikvm command to create a runtime, in this case, only the root user can read and write the create file (0660). I suspect this part will be only used when we test the functionality of the profiler as it will not be executed and change the permission in a normal routine.

For the side note, I agree that appending the original format would make it cleaner and compact. I was afraid it might break some dependencies in dex2oat when it loads the profile files.

297:0-304:3
Thu Jun 12 17:07:41 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: bfc3fcc9_182e9580
UUID: bf713c8e_176676a8
Bytes: 102
What's the plan to get this change merged here? Factor this code out.. Calin/Dave what's your opinion?

297:0-304:3
Thu Jun 12 17:15:04 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: bf713c8e_176676a8
UUID: 7fd6e483_13631699
Bytes: 91
What are the plans regarding this file? Who will have access to it and how will it be used?

297:0-304:3
Thu Jun 12 17:45:01 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7fd6e483_13631699
UUID: 1fd5e878_102e6a80
Bytes: 459
As discussed offline, this needs further analysis w.r.t. access rights of this file.

We also decided that, in the meantime, depending on how fast you want this, you can feel free to add the extra data in the existing file. This should be behind a flag. (you should also restore the file creation in the runtime). 

I already suggested previously on how I think the lines can look like but if you think of a more efficient representation feel free to adapt :)

