Revision: eda2f790e638272503a32fdc1fc58571e00e364a
Patch-set: 1
File: compiler/optimizing/induction_var_analysis.cc

709:48-709:50
Tue Dec 29 19:22:38 2015 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ca2ae7be_7e99f5f1
Bytes: 278
I would remove this comment altogether since it provides a lot of detail that seems not needed here (BCE calls induction range analysis which calls this method). 

Or if you keep it, just say we don't check dominance so the method can be used on graphs that are not in SSA form.

709:48-709:50
Wed Dec 30 15:09:56 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ca2ae7be_7e99f5f1
UUID: 2ab62305_9c72c5e8
Bytes: 105
Sort of done, I still like to give the context/reason, so I changed to "(for example, when running BCE)".

709:48-709:50
Wed Dec 30 18:45:42 2015 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2ab62305_9c72c5e8
UUID: 2afc637c_06b98eea
Bytes: 495
Please allow me to be a bit more difficult than usual :-), but since I wrote this code I feel stronger about what comments say, especially given the history of the code.

Originally this code did not have dom check at all. Then I was asked to make a general utility with dom check, then we removed the dom check and moved the dom check back here. Now we remove it again and spend two lines of comments to explain why there is no dom check. It distracts a bit from what the method really does :-)

709:48-709:50
Thu Dec 31 15:32:12 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2afc637c_06b98eea
UUID: 8aa54fc9_1f92230a
Bytes: 53
I feel the frustration :) I removed the comment then.

File: test/559-bce-ssa/src/Main.java

25
Tue Dec 29 19:22:38 2015 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 8a0b8f60_635dea2d
Bytes: 199
is it custom to make a whole new directory for just one test? It seems such a regression test could be easily added to the already existing bce or loop tests? I would like such grouping a bit better.

25
Wed Dec 30 15:09:56 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 8a0b8f60_635dea2d
UUID: 4a727721_25cd8e3e
Bytes: 253
We can chat offline about why I strongly think we should not group tests in one Java file / one run-test. Main reason being that our unit for disabling tests is at the run-test level, so by disabling one run-test, you disable all regression tests in it.

25
Wed Dec 30 18:45:42 2015 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 4a727721_25cd8e3e
UUID: 8a0b8f60_fe07ad2e
Bytes: 241
Ok that is fine, did not know about this policy (note that we could also make disabling tests harder ;-). I personally prefer to group related tests together for other reasons we can discuss offline, but will adhere to the group policy here.

25
Thu Dec 31 15:32:12 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 8a0b8f60_fe07ad2e
UUID: 0ab15f0d_7b2dbf65
Bytes: 491
TBH, I don't think there's ever been a policy within the ART group. I know other engineers who would actually prefer fewer Java tests (to avoid eg spinning a new runtime).

Disabling tests is part of the game, I don't think making it harder will solve it.

Another argument in case is that it makes it easier to diagnose the problem if the test fails again (say you have a segfault and no meaningful backtrace, you need to figure out which method/line within a big Java file is responsible).

