Revision: b03017c3b53181c3577be225d773d35495cde4e1
Patch-set: 1
File: runtime/debugger.cc

2090:13-2090:23
Mon Aug 11 16:18:25 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f672031f_a86dd33e
Bytes: 113
Maybe use a different method for capturing the information? Do already started threads have no Jni peers anymore?

2090:13-2090:23
Mon Aug 11 17:15:26 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f672031f_a86dd33e
UUID: 56a3cfb2_a4db3a37
Bytes: 554
All started threads have no JNI peer. The JNI peer is only used when starting thread from Java. It is deleted before calling Thread.run method.

However, having a null jpeer doesn't mean the thread is started. From the debugger POV, it just an indication we are still in the process of starting up a thread.

This is really a special case for the debugger so I think we could keep such name. I just prefer to avoid any name related to thread state because this could be confusing about its use. I'm thinking about a better naming. I accept suggestions :)

2090:13-2090:23
Mon Aug 11 17:18:40 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 56a3cfb2_a4db3a37
UUID: 56a10fb9_40632e92
Bytes: 133
Maybe it would be easier to understand if things were negated. Could it be !HasOPeer() || opeer->no_started

(or something like that)

2090:13-2090:23
Mon Aug 11 17:22:01 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 56a10fb9_40632e92
UUID: 56a3cfb2_640b12f9
Bytes: 73
Thread::opeer is checked after that. I'll see how to make things clearer.

2090:13-2090:23
Mon Aug 11 18:11:39 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 56a3cfb2_640b12f9
UUID: 36a65bd4_c2a624dd
Bytes: 188
I'd prefer we weren't using jpeer_, and side-effects there on, as a way of implying thread state. It would be more intention revealing to just call GetState, or have a Thread::IsStarted().

