Revision: fcb6d2c149fc063ef964b559f22eef1de83de57d
Patch-set: 13
File: dex2oat/dex2oat.cc

540
Thu Oct 22 18:07:10 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 194a9a42_277268cf
Bytes: 52
Why? This seems to introduce unnecessary complexity.

540
Thu Oct 22 18:41:48 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 194a9a42_277268cf
UUID: d6661112_18aae5aa
Bytes: 8
Clarify?

540
Thu Oct 22 18:49:51 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d6661112_18aae5aa
UUID: b60d1d2e_9761043c
Bytes: 333
If you looked at diff PS8 PS13 and see this as changed, it's because PS9 was rebased across my CL that touched it. See diff against base.

(This is the reason why I recommend rebasing only when necessary. It makes incremental reviews easier. I often rebase onto the parent of the previous PS before upload if there are no conflicts.)

540
Thu Oct 22 20:05:58 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b60d1d2e_9761043c
UUID: 56a1415d_bc67219e
Bytes: 23
Ah, yeah, rebase.. fun.

File: runtime/base/scoped_arena_allocator.h

35:5-35:17
Thu Oct 22 18:07:10 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d953a2fb_4485aed1
Bytes: 94
nit: enum class for new code

it probably wouldn't hurt to specify the exact type size either.

35:5-35:17
Thu Oct 22 18:41:48 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d953a2fb_4485aed1
UUID: f66f95e4_99bd9bee
Bytes: 4
Done

File: runtime/base/scoped_arena_containers.h

216
Thu Oct 22 18:07:10 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3942fe30_7f67979d
Bytes: 160
Would you mind explaining how this will help? There's nothing here that checks for kMagicFill, are we just hoping this will corrupt the data leading to a crash?

216
Thu Oct 22 18:41:48 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3942fe30_7f67979d
UUID: 369ccd29_9b082b6b
Bytes: 30
Yes, hopefully it would crash.

224
Thu Oct 22 18:07:10 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 369ccd29_5bc9438a
Bytes: 85
.

  void operator()(T* ptr) const = delete

would likely have a better error message

224
Thu Oct 22 18:41:48 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 369ccd29_5bc9438a
UUID: 56a1415d_5c1b7dba
Bytes: 51
Seems fien to me, not sure if vmarko will complain.

File: runtime/verifier/reg_type_cache.cc

166
Thu Oct 22 18:07:10 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 56a1415d_9cd6e524
Bytes: 39
Can you wrap this with ArenaUniquePtr ?

166
Thu Oct 22 18:41:48 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 56a1415d_9cd6e524
UUID: f66f95e4_7920c7e3
Bytes: 114
You mean return ArenaUniquePtr? That doesnt help much since we don't have a StringPiece that holds ArenaUniquePtr.

166
Thu Oct 22 20:05:58 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f66f95e4_7920c7e3
UUID: 56a1415d_5cc61dd7
Bytes: 548
This is just very scary because the "ptr" on 167 is never freed explicitly so I'm worried about dangling pointers to the arena's memory pool later.

------

What if we had an ArenaStringPiece that e.g. held an ArenaUniquePtr?

For example

   struct ArenaStringPiece : public StringPiece {
       ArenaStringPiece() {
           StringPiece::ptr_ = string_data_.get();
           StringPiece::length_ = strlen(StringPiece::ptr_);
       }
       // + move and assign-move operators
     private:
       ArenaUniquePtr<const char> string_data_;
   }

346
Thu Oct 22 18:07:10 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d953a2fb_44e20e89
Bytes: 19
nit: magic number 8

346
Thu Oct 22 18:41:48 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d953a2fb_44e20e89
UUID: f935c6bb_2340a66b
Bytes: 4
Done

