Revision: bb6c530b95c10716364dde984dc152c0e38c9b95
Patch-set: 30
File: compiler/optimizing/register_allocator_graph_color.cc

67:5-67:8
Thu Aug 04 22:01:27 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 145606ee_52d3b2d0
Bytes: 4
Used

129:2-131:58
Thu Aug 04 22:01:27 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 145606ee_72e7d6a9
Bytes: 85
So why don't you cache it, given that compile times are high? Does it have an impact?

141:63-141:64
Thu Aug 04 22:01:27 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 145606ee_9286fabe
Bytes: 1
&

282:13-282:17
Thu Aug 04 22:01:27 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 145606ee_92227abf
Bytes: 26
/* log_fatal_on_failure */

500:0-500:31
Thu Aug 04 22:01:27 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 145606ee_723fd6b8
Bytes: 152
Add a comment.

Did you check all the places where the search cache is being used? Because you're not linear scan, this optimization won't work for you.

597:17-597:23
Thu Aug 04 22:01:27 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 145606ee_b2adbef1
Bytes: 8
Revisit?

732:52-732:56
Thu Aug 04 22:01:27 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 145606ee_32a1ceef
Bytes: 5
drop?

921:2-922:8
Thu Aug 04 22:01:27 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 145606ee_f2e02627
Bytes: 9
else if ?

950:0-951:40
Thu Aug 04 22:01:27 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 145606ee_92443a21
Bytes: 44
No, is that what we're doing in linear scan?

