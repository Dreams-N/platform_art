Revision: 4be65d2ef6c8b93cf19cdce50b80cfc1f9a9679d
Patch-set: 8
File: compiler/optimizing/nodes.h

5445:28-5445:49
Mon Apr 18 09:21:11 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0b732e96_daec25e1
Bytes: 254
Hmmm, don't we have a problem if we start saying Foo.class is the Object class if Foo is erroneous? For example:

if (a instanceof Foo) ...

Won't optimizing the instanceof say always true?

So maybe we can live with an invalid ReferenceTypeInfo instead?

5445:28-5445:49
Mon Apr 18 16:53:03 2016 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0b732e96_daec25e1
UUID: 287c78a3_58094112
Bytes: 139
does that optimization look at exactness?

are you proposing now to go back to the erroneous type, or make this invalid?

Calin, any input?

5445:28-5445:49
Mon Apr 18 17:02:34 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 287c78a3_58094112
UUID: 0b732e96_7aa07115
Bytes: 317
We discussed this quite a bit with Calin. We already special case the LoadedClassRti to check invalid if the class is unresolved.

So I'd suggest special casing the HLoadClass to either get a) an invalid RTI if the class is erroneous/unresolved, or b) a boolean flag in HLoadClass. I think I have a preference for a).

