Revision: 3c8db7664411b0ed7441428e7ddd66569bb23430
Patch-set: 8
File: compiler/optimizing/inliner.cc

214:0-214:102
Thu Apr 09 16:21:46 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 03d12e8c_0b4e41c5
Bytes: 15
Nit: long line.

214:0-214:102
Thu Apr 09 19:10:42 2015 +0000
Author: Jean Christophe Beyler <1016743@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 03d12e8c_0b4e41c5
UUID: 4365e6c2_da2a65a8
Bytes: 4
Done

241:33-242:35
Thu Apr 09 16:21:46 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 63a66a29_f111208c
Bytes: 89
Maybe try to fit this part on a single line?  Or better, move it to a predicate function?

242:48-242:67
Thu Apr 09 16:21:46 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 03d12e8c_aeb90312
Bytes: 27
conservative approximation?

242:48-242:67
Thu Apr 09 19:10:42 2015 +0000
Author: Jean Christophe Beyler <1016743@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 03d12e8c_aeb90312
UUID: 2368f29d_d9fb538d
Bytes: 4
Done

241:33-242:35
Thu Apr 09 19:10:42 2015 +0000
Author: Jean Christophe Beyler <1016743@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 63a66a29_f111208c
UUID: 2368f29d_994c7b53
Bytes: 141
I've left this one, do you have an example of exactly what you would want as a predicate function? I was unsure of exactly what you wanted :)

248:8-248:47
Thu Apr 09 16:21:46 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 63a66a29_d16ce404
Bytes: 22
Is this really needed?

248:8-248:47
Thu Apr 09 19:10:42 2015 +0000
Author: Jean Christophe Beyler <1016743@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 63a66a29_d16ce404
UUID: 4365e6c2_1a25bdd6
Bytes: 4
Done

251:13-251:36
Thu Apr 09 16:21:46 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a3c5c2ce_2816a3d1
Bytes: 438
I think it would be more natural to have this `if' be the outermost one:

  if (current->CanThrow()) {
    if (ends_callee_context && /* ... */) {
      // ...
    } else {
      VLOG(compiler) << "Method " << PrettyMethod(method_index, caller_dex_file)
                     << " could not be inlined because " << current->DebugName()
                     << " can throw";
      return false;
    }
  }

and remove the DCHECK on line 247.

251:13-251:36
Thu Apr 09 19:10:42 2015 +0000
Author: Jean Christophe Beyler <1016743@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a3c5c2ce_2816a3d1
UUID: 83999efb_1ca0559e
Bytes: 4
Done

File: compiler/optimizing/nodes.cc

328:5-328:9
Thu Apr 09 16:21:46 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a3c5c2ce_083c8741
Bytes: 5
TODO:

328:5-328:9
Thu Apr 09 19:10:42 2015 +0000
Author: Jean Christophe Beyler <1016743@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a3c5c2ce_083c8741
UUID: 83999efb_bcb041f5
Bytes: 4
Done

File: test/472-checker-inliner-throw/src/Main.java

2:16-2:20
Thu Apr 09 16:21:46 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a3c5c2ce_88d4f774
Bytes: 4
2015

2:16-2:20
Thu Apr 09 19:10:42 2015 +0000
Author: Jean Christophe Beyler <1016743@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a3c5c2ce_88d4f774
UUID: 2368f29d_f993b758
Bytes: 4
Done

60:0-60:1
Thu Apr 09 16:21:46 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a3c5c2ce_e8d92bab
Bytes: 43
Please indent using spaces instead of tabs.

60:0-60:1
Thu Apr 09 19:10:42 2015 +0000
Author: Jean Christophe Beyler <1016743@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a3c5c2ce_e8d92bab
UUID: 2368f29d_39860f17
Bytes: 4
Done

76:10-76:55
Thu Apr 09 16:21:46 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a3c5c2ce_28c4e3bd
Bytes: 37
!(ex instanceof NullPointerException)

76:10-76:55
Thu Apr 09 19:10:42 2015 +0000
Author: Jean Christophe Beyler <1016743@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a3c5c2ce_28c4e3bd
UUID: 2368f29d_798087f8
Bytes: 4
Done

93:11-93:65
Thu Apr 09 16:21:46 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 03d12e8c_2ef7d3da
Bytes: 47
!(ex instanceof ArrayIndexOutOfBoundsException)

93:11-93:65
Thu Apr 09 19:10:42 2015 +0000
Author: Jean Christophe Beyler <1016743@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 03d12e8c_2ef7d3da
UUID: 4365e6c2_ba35b10d
Bytes: 4
Done

106:10-106:54
Thu Apr 09 16:21:46 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 03d12e8c_0ef48fd2
Bytes: 36
!(ex instanceof ArithmeticException)

106:10-106:54
Thu Apr 09 19:10:42 2015 +0000
Author: Jean Christophe Beyler <1016743@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 03d12e8c_0ef48fd2
UUID: 83999efb_fcbac9d0
Bytes: 4
Done

