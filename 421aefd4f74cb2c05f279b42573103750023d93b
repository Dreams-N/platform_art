Revision: 421aefd4f74cb2c05f279b42573103750023d93b
Patch-set: 3
File: test/004-ThreadStress/src/Main.java

405:51-405:77
Thu Jun 23 23:55:16 2016 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 639dc16f_e5637eee
Bytes: 20
Does this mean OOME?

524:29-524:40
Thu Jun 23 23:55:16 2016 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 639dc16f_25f3c641
Bytes: 72
Does this expect an OOME? Or is this just a catch-all for any throwable?

678:32-678:43
Thu Jun 23 23:55:16 2016 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 639dc16f_c52afa6d
Bytes: 18
typo: surprisingly

680
Thu Jun 23 23:55:16 2016 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 639dc16f_e527fea2
Bytes: 15
4-space indent?

686:0-690:9
Thu Jun 23 23:55:16 2016 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 639dc16f_053c02b1
Bytes: 176
I think wait() should be surrounded by a loop in case of a spurious wakeup. So, maybe

if (count != 0) {
  do {
    wait();
  } while (count != 0);
} else {
  notifyAll();
}

?

693
Thu Jun 23 23:55:16 2016 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 639dc16f_2541062a
Bytes: 8
private?

