Revision: 2028e8d30f6cc7bf0d2f997d713e985f3507593f
Patch-set: 2
File: runtime/verifier/method_verifier.cc

4530:8-4530:27
Fri Feb 12 22:47:59 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: bdc1846e_a98f8917
Bytes: 139
Hm. I think it's necessary to emit a soft failure when the field is null, so that this does get tested again at runtime. What do you think?

4530:8-4530:27
Fri Feb 12 23:02:10 2016 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: bdc1846e_a98f8917
UUID: 1dd53033_657f61b4
Bytes: 108
Good point. Otherwise we might not force access-checks on it which could cause it to be accepted at runtime.

4530:8-4530:27
Fri Feb 12 23:09:53 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1dd53033_657f61b4
UUID: 7df0ecdc_8d5036d9
Bytes: 491
Not so much concerned about the AC interpreter. I don't know what the right semantics are there. If you're concerned about the interpreter, then all of this is wrong already and we should not fail hard. That would be a change we should not make now, though...

I was more worried that it would pass with the unresolved reference at compile time, setting the status to verified, and at runtime the class could be resolved (e.g., extradex etc).

The current solution looks in line with that...

