Revision: af193923b929a21e9b48c0ecb75ca81fc94d7cf4
Patch-set: 3
File: compiler/optimizing/builder.cc

881:7-881:16
Fri Nov 20 11:15:25 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3b4e7783_4eb0871f
Bytes: 62
needs_access_check (also rename the variables in HNewInstance)

881:7-881:16
Fri Nov 20 18:14:20 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3b4e7783_4eb0871f
UUID: 9b8e83ee_14e704d4
Bytes: 4
Done

881:7-881:16
Fri Nov 20 22:17:26 2015 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 9b8e83ee_14e704d4
UUID: 7b246ff3_2a71ffec
Bytes: 254
Actually NeedsAccessCheck isn't that accurate. It's calling CanAccessInstantiableTypeWithoutChecks(), so it's checking both accessibility and instantiability, both can cause NewInstance to throw. Maybe we should find a better name for NeedsAccessCheck().

881:7-881:16
Fri Nov 20 22:20:16 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7b246ff3_2a71ffec
UUID: 7bb2aff7_77ad70aa
Bytes: 59
Good point, done. Will consider renaming in another change.

936
Thu Nov 19 23:18:07 2015 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7b6aafda_69c1c753
Bytes: 186
One of the optimization here can be:
if (GetOutermostCompilingClass().IsSubClass(cls.Get())) {
  return true;
}
since all super classes must be initialized before a class is initialized.

936
Fri Nov 20 18:14:20 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7b6aafda_69c1c753
UUID: 169a6aee_10a034c2
Bytes: 41
Yes, I'll reserve this to a follow-up CL.

File: compiler/optimizing/code_generator_arm.cc

3194:2-3194:89
Fri Nov 20 11:15:25 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3b4e7783_ee83b329
Bytes: 113
Why are you no longer loading the type index and instead passing the class?
(Same for mips, mips64, x86, x86-64.)

3194:2-3194:89
Fri Nov 20 18:14:20 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3b4e7783_ee83b329
UUID: 9b8e83ee_b4f3b896
Bytes: 153
Note that it may also be the type index. Some entrypoints (resolved and initialized) take a class, others (generic and access_check) take the type index.

File: compiler/optimizing/code_generator_arm64.cc

3375:2-3375:75
Fri Nov 20 11:15:25 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: db11db43_8e88cb0a
Bytes: 82
Why do you need to pass the class when it's immediately overwritten by type index?

3375:2-3375:75
Fri Nov 20 18:14:20 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: db11db43_8e88cb0a
UUID: 56278298_1a6eadd7
Bytes: 37
Oversight, I removed the overwriting.

File: compiler/optimizing/prepare_for_register_allocation.cc

93:68-93:74
Thu Nov 19 23:18:07 2015 +0000
Author: Mingyao Yang <1043514@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5b25eb9e_44dde12d
Bytes: 22
Need update here also.

93:68-93:74
Fri Nov 20 18:14:20 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5b25eb9e_44dde12d
UUID: d67c5259_16502c08
Bytes: 4
Done

