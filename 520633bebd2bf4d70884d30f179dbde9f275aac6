Revision: 520633bebd2bf4d70884d30f179dbde9f275aac6
Patch-set: 4
File: runtime/debugger.cc

3542:78-3543:37
Thu Sep 10 15:50:09 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6442fedf_fd4207d9
Bytes: 57
Not true anymore? Why did you remove this "optimization"?

3543:48-3543:56
Thu Sep 10 15:50:09 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6442fedf_dd3dcb59
Bytes: 20
executed -> execute.

3542:78-3543:37
Thu Sep 10 16:10:18 2015 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6442fedf_fd4207d9
UUID: e41fceee_f96c5743
Bytes: 241
I removed it because, now this is called before the FindCatch, I no longer know which frame is a catch handler.

I could recompute that in the visitor but I wonder if this is really a benefit. I can take a look in a follow-up CL if you want.

File: runtime/interpreter/interpreter.cc

410:0-412:31
Thu Sep 10 15:50:09 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 44517aa7_1f4fa756
Bytes: 43
Feels kind of magic. How about just a flag?

410:0-412:31
Thu Sep 10 16:10:18 2015 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 44517aa7_1f4fa756
UUID: c4164adc_38a5e9e6
Bytes: 270
Yeah, I'm not really proud about that... but it's the only way I see to avoid the double reporting (which is incorrect from the debugger point of view at least).

An alternative would be to move that logic into the debugger but IMO it's even more complex to detect that.

