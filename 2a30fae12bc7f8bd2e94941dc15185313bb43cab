Revision: 2a30fae12bc7f8bd2e94941dc15185313bb43cab
Patch-set: 1
File: compiler/optimizing/code_generator_x86_64.cc

1142:23-1142:24
Mon Feb 01 20:04:27 2016 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9489faaa_34e7e641
Bytes: 180
I recently introduced the Load32BitValue() for this, so we don't have to repeat this logic every time (and we can later also improve moving other immediate values in shorter ways).

1142:23-1142:24
Tue Feb 02 01:22:04 2016 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 9489faaa_34e7e641
UUID: b486fe94_876c054c
Bytes: 4
Done

1164:19-1164:23
Mon Feb 01 20:04:27 2016 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d468d2a0_56062569
Bytes: 34
introduce a similar method for FP?

1164:19-1164:23
Tue Feb 02 01:22:04 2016 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d468d2a0_56062569
UUID: 548b02a3_55e547c6
Bytes: 4
Done

1643:0-1643:70
Tue Feb 02 10:15:29 2016 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d139c4d1_549142c8
Bytes: 242
Why not? Isn't

  CMP <bool val>, #0
  CMOV

still better than doing the same with jumps? You're also depriving yourself of being able to use EFLAGS set by a materialized condition just before the Select (just like on line 1541 in this file).

File: test/566-checker-codegen-select/src/Main.java

48:19-48:27
Mon Feb 01 20:04:27 2016 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5422228b_f472c676
Bytes: 13
period at end

48:19-48:27
Tue Feb 02 01:22:04 2016 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5422228b_f472c676
UUID: f465d6c4_50ad49a7
Bytes: 4
Done

62:11-62:15
Mon Feb 01 20:04:27 2016 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 749006cb_4538390f
Bytes: 13
period at end

62:11-62:15
Tue Feb 02 01:22:04 2016 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 749006cb_4538390f
UUID: d468d2a0_2c479efe
Bytes: 4
Done

