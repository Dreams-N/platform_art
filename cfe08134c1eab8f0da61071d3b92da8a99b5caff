Revision: cfe08134c1eab8f0da61071d3b92da8a99b5caff
Patch-set: 6
File: runtime/arch/arm64/quick_entrypoints_arm64.S

930
Wed Mar 19 13:16:41 2014 +0000
Author: Stuart Monteith <1037216@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1cffb1b9_2e426bcb
Bytes: 237
SP _must_ be 16 byte aligned. It isn't just a convention - the processor will trap on accesses using an unaligned SP.
Consequently, the result of:
  add sp, sp, #8
  add x9, sp, x0 
  add sp, x9, #136

must be that SP is 16 byte aligned.

930
Wed Mar 19 15:17:03 2014 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1cffb1b9_2e426bcb
UUID: 9c13a1db_72804e6c
Bytes: 174
Thanks, will fix this to use x9 earlier. Overall, the C++ code makes sure that the region with the register values is 16B aligned, so the arithmetic will work out in the end.

File: runtime/entrypoints/quick/quick_trampoline_entrypoints.cc

93
Wed Mar 19 14:43:13 2014 +0000
Author: Stuart Monteith <1037216@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: fcfbbdcb_0752f84f
Bytes: 106
This is set to 7, yet art_quick_generic_jni_trampoline loads x0-x7.
Could this be the source of the error?

93
Wed Mar 19 15:17:03 2014 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: fcfbbdcb_0752f84f
UUID: 9c13a1db_527d4ac4
Bytes: 445
This defines how many arguments are used in the Quick ABI. As the first argument is always the method, we only have 7 parameters passed in GPRs. The assembly code also "only" pushes x1-x7 in the SETUP_REF_AND_ARGS_CALLEE_SAVE_FRAME_INTERNAL.

For me, the error occurs not in the generic JNI code, but in the quick_invoke_stub, where the arg array is pushed into the registers. The generic JNI code picks up those wrong numbers correctly, itself.

93
Wed Mar 19 15:52:04 2014 +0000
Author: Stuart Monteith <1037216@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 9c13a1db_527d4ac4
UUID: 9c13a1db_724baea2
Bytes: 263
The quick_invoke_stub loads registers x1-x7 and d0-d7. The generic JNI code loads x0 to x7, d0-x7. Yet, the number of registers it uses for its calculations are kNumNativeFprArgs=8 and kNumNativeGprArgs=7. My guess was that disparity was causing alignment issues.

93
Wed Mar 19 17:41:44 2014 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 9c13a1db_724baea2
UUID: dcca7990_397aa7ce
Bytes: 88
It is in fact not alignment issues, but wrong API use. I'll upload a new patch set soon.

