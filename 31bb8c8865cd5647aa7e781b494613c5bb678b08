Revision: 31bb8c8865cd5647aa7e781b494613c5bb678b08
Patch-set: 3
File: runtime/barrier.h

45:61-45:63
Tue Dec 31 01:53:04 2013 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e89853f7_91c9a6ec
Bytes: 21
LOCKS_EXCLUDED(lock_)

47:14-47:25
Tue Dec 31 01:53:04 2013 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e89853f7_71cc1afb
Bytes: 21
LOCKS_EXCLUDED(lock_)

File: runtime/native/dalvik_system_VMRuntime.cc

492:11-492:13
Tue Dec 31 01:53:04 2013 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e89853f7_b1806275
Bytes: 2
ws

File: runtime/profiler.cc

90:2-90:11
Tue Dec 31 01:53:04 2013 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e89853f7_b167823f
Bytes: 15
Profiler* const

104:12-104:27
Tue Dec 31 01:53:04 2013 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 886997a4_d386ccb6
Bytes: 6
units?

105:15-105:26
Tue Dec 31 01:53:04 2013 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c8954fbe_155f4421
Bytes: 12
kMaxBackOffS

121:6-121:13
Tue Dec 31 01:53:04 2013 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c8954fbe_357440a5
Bytes: 8
uint64_t

149:13-149:18
Tue Dec 31 01:53:04 2013 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 886997a4_1381249d
Bytes: 8
start_us

150:13-150:16
Tue Dec 31 01:53:04 2013 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e89853f7_317c52ce
Bytes: 6
end_us

150:49-150:58
Tue Dec 31 01:53:04 2013 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 886997a4_3376281f
Bytes: 48
There's probably a MsToNs style helper for this.

151:13-151:16
Tue Dec 31 01:53:04 2013 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 886997a4_53739c2d
Bytes: 6
now_us

156:10-156:11
Tue Dec 31 01:53:04 2013 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 886997a4_7370a020
Bytes: 7
Thread*

156:0-157:0
Tue Dec 31 01:53:04 2013 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e89853f7_d16c0e26
Bytes: 41
Thread*, hoist to top of loop and re-use.

164:0-165:0
Tue Dec 31 01:53:04 2013 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e89853f7_1167563e
Bytes: 197
there should at least be a TODO here. We should be using wake lock information from the system, I worry the profiler will drain battery and samples when all apps are asleep aren't very interesting.

176:0-177:0
Tue Dec 31 01:53:04 2013 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e89853f7_5179dedc
Bytes: 15
yay units! int?

179:15-179:24
Tue Dec 31 01:53:04 2013 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 886997a4_f37bd007
Bytes: 12
waitstart_us

209:34-209:55
Tue Dec 31 01:53:04 2013 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 886997a4_b3e4f894
Bytes: 37
on the declaration not the definition

249:31-249:45
Tue Dec 31 01:53:04 2013 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e89853f7_917366fb
Bytes: 87
needs to be a LOCKS_EXCLUDED(Locks::profiler_lock_) on the declaration because of this.

262:0-263:0
Tue Dec 31 01:53:04 2013 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c8954fbe_5571ccb3
Bytes: 9
Profiler*

265:43-265:64
Tue Dec 31 01:53:04 2013 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 886997a4_d3e96c6d
Bytes: 14
LOCKS_EXCLUDED

266:15-266:24
Tue Dec 31 01:53:04 2013 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c8954fbe_956b54c6
Bytes: 79
profiler_ = nullptr; // ie clear the profiler_ field to avoid use after delete.

273:0-274:0
Tue Dec 31 01:53:04 2013 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c8954fbe_756ec8d8
Bytes: 26
LOCKS_EXCLUDED(wait_lock_)

305:55-305:76
Tue Dec 31 01:53:04 2013 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 886997a4_f3ee7072
Bytes: 29
on declaration not definition

File: runtime/profiler.h

44:6-44:18
Tue Dec 31 01:53:04 2013 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c8954fbe_95943470
Bytes: 37
A better name and description please.

49:7-49:10
Tue Dec 31 01:53:04 2013 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 886997a4_13f4c43d
Bytes: 3
Put

50:11-50:16
Tue Dec 31 01:53:04 2013 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c8954fbe_b5ca108c
Bytes: 5
Write

51:7-51:12
Tue Dec 31 01:53:04 2013 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 886997a4_13aa0427
Bytes: 5
Clear

52:11-52:26
Tue Dec 31 01:53:04 2013 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e89853f7_d185ee83
Bytes: 21
GetNumSamples() const

56:11-56:15
Tue Dec 31 01:53:04 2013 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 886997a4_33f9c837
Bytes: 4
Hash

58:7-58:8
Tue Dec 31 01:53:04 2013 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c8954fbe_7597a874
Bytes: 105
& ?
why doesn't ProfileTable provide its own Mutex? This should be documented as to what the behavior is.

66:0-67:0
Tue Dec 31 01:53:04 2013 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c8954fbe_558aac51
Bytes: 164
Could we disambiguate this from the other kinds of profiling, perhaps ContinualBackgroundProfiler? A comment on the class declaration explaining what's here please.

95:14-95:26
Tue Dec 31 01:53:04 2013 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 886997a4_b38158a2
Bytes: 37
LOCKS_EXCLUDED(Locks::profiler_lock_)

108:51-108:55
Tue Dec 31 01:53:04 2013 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 886997a4_538c7cdb
Bytes: 5
empty

112:2-112:5
Tue Dec 31 01:53:04 2013 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e89853f7_f18aea92
Bytes: 145
size_t or uint32_t, or does negative make sense?
I prefer, period_s_, that is place the units in the name so that in uses of the field its clear.

114:7-114:25
Tue Dec 31 01:53:04 2013 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c8954fbe_b55f7022
Bytes: 14
comment please

116:2-116:5
Tue Dec 31 01:53:04 2013 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 886997a4_338f08d3
Bytes: 19
int? comment please

126:6-126:15
Tue Dec 31 01:53:04 2013 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 886997a4_73998018
Bytes: 61
units? So after duration the file will be written regardless?

File: runtime/runtime.cc

916:0-917:0
Tue Dec 31 01:53:04 2013 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c8954fbe_d564fcfc
Bytes: 104
Can you back out all the whitespace changes in this file and keep the changes that are profiler related.

File: runtime/runtime.h

580:0-581:0
Tue Dec 31 01:53:04 2013 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c8954fbe_f559f83d
Bytes: 129
can you fix the types (unsigned) and place the units into the field names, especially as the units vary for the different fields.

