Revision: a97b56916632bdf565720f0339b73a42aa46d8a1
Patch-set: 4
File: runtime/interpreter/interpreter_common.h

281
Thu Aug 11 18:03:57 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7ee9e168_d789be25
Bytes: 41
nit: 1 parameter per line if it overflows

File: runtime/mirror/class-inl.h

906:61-906:69
Thu Aug 11 18:03:57 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7ee9e168_a97b7e20
Bytes: 47
Can we replace this with decltype(field name) ?

File: runtime/mirror/dex_cache.h

163
Thu Aug 11 18:03:57 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7ee9e168_e998666c
Bytes: 44
What does the magic combination of 0/1 mean?

163
Thu Aug 11 18:19:09 2016 +0000
Author: Christina Wadsworth <1109993@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7ee9e168_e998666c
UUID: 7ee9e168_e974e6cb
Bytes: 797
The above comment attempts to explain the following:

In the assembly entrypoints, we check to see if the index we are looking for is the same as the index loaded from the dex cache. If it is the same, we just return the pointer. To spare an additional check and potential branch in the assembly (when the 0th index (which is initialized to 0) has a pointer that is null, but still matches a string index of 0 if we are looking for that string index). So, when we SetStrings, I initialize the first index to 1 instead to avoid a: returning a pointer that is equal to 0 and b: needing to add an extra assembly branch which adds more time to the entrypoints.

Does that make sense? 

The pointer is initialized to 0 because anything other than a valid pointer or 0 throws a GCException in MarkSweep.

163
Thu Aug 11 18:24:27 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7ee9e168_e974e6cb
UUID: 7ee9e168_297e4e46
Bytes: 38
What are the valid/invalid bit states?

File: runtime/utils/dex_cache_arrays_layout-inl.h

52
Thu Aug 11 18:03:57 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7ee9e168_e9af4674
Bytes: 77
Shouldn't this be alignof(StringDexCachePair) or something like that instead?

53:16-53:24
Thu Aug 11 18:03:57 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7ee9e168_a9c93e5c
Bytes: 4
Same

100
Thu Aug 11 18:03:57 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7ee9e168_09170aa5
Bytes: 20
alignof(field name?)

File: runtime/utils/dex_cache_arrays_layout.h

55
Thu Aug 11 18:03:57 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7ee9e168_2961ae39
Bytes: 10
constexpr?

