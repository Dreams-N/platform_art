Revision: 53664992ebe461cd0eb847926e619402582f2035
Patch-set: 3
File: tools/javafuzz/javafuzz.cc

44:75-44:78
Wed Aug 10 22:43:18 2016 +0000
Author: David Sehr <1103743@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 79665bd2_bd104b53
Bytes: 14
nit: missing .

44:75-44:78
Wed Aug 10 23:03:03 2016 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 79665bd2_bd104b53
UUID: 79665bd2_204dee97
Bytes: 4
Done

96:11-96:12
Wed Aug 10 22:43:18 2016 +0000
Author: David Sehr <1103743@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 79665bd2_9d3467e4
Bytes: 13
no trailing ,

96:11-96:12
Wed Aug 10 23:03:03 2016 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 79665bd2_9d3467e4
UUID: 79665bd2_80595a31
Bytes: 4
Done

167:6-167:44
Wed Aug 10 22:43:18 2016 +0000
Author: David Sehr <1103743@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 79665bd2_bd8beb7e
Bytes: 19
maybe put a "!" in?

167:6-167:44
Wed Aug 10 23:03:03 2016 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 79665bd2_bd8beb7e
UUID: 79665bd2_80f6ba2a
Bytes: 131
That is true, but it would only work as pre-increment. I don't think it's worth it to special case (! is covered as unary operator)

180:8-185:42
Wed Aug 10 22:43:18 2016 +0000
Author: David Sehr <1103743@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 79665bd2_3deb5b11
Bytes: 319
This idiom seems hard to maintain.  I think you've pretty well covered the list of operators here and elsewhere, but how about something like:

static const char* operators[] = { " && ", " || ", ... };
fputs(operators[random1(array_size(operators))], out_);

Then adding an operator just involves adding it to the list.

180:8-185:42
Wed Aug 10 23:03:03 2016 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 79665bd2_3deb5b11
UUID: 79665bd2_c08b527e
Bytes: 22
I like this suggestion

270:8-270:51
Wed Aug 10 22:43:18 2016 +0000
Author: David Sehr <1103743@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 79665bd2_bd484b34
Bytes: 65
an array of structs would be required to do my idiom replacement.

270:8-270:51
Wed Aug 10 23:03:03 2016 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 79665bd2_bd484b34
UUID: 79665bd2_e02e9691
Bytes: 118
For such cases (contrast with the operators above) it will become a bit hard to keep the right type in/out consistent.

675:4-675:21
Wed Aug 10 22:43:18 2016 +0000
Author: David Sehr <1103743@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 79665bd2_bd9f6b58
Bytes: 63
Use RAII to manage your indent levels by scoping in the source?

675:4-675:21
Wed Aug 10 23:03:03 2016 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 79665bd2_bd9f6b58
UUID: 79665bd2_40782289
Bytes: 88
I am on the fence using this. Seems to make it a bit more complex than what we have now.

749:4-749:14
Wed Aug 10 22:43:18 2016 +0000
Author: David Sehr <1103743@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 79665bd2_a07bbe21
Bytes: 72
Don't our coding conventions prefer prefix inc/dec?  Here and elsewhere.

749:4-749:14
Wed Aug 10 23:03:03 2016 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 79665bd2_a07bbe21
UUID: 79665bd2_60752690
Bytes: 17
changed to prefix

