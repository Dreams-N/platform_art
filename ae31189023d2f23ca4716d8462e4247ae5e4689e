Revision: ae31189023d2f23ca4716d8462e4247ae5e4689e
Patch-set: 22
File: compiler/optimizing/register_allocator_graph_color.cc

26:0-26:41
Sat Jul 30 16:00:47 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6f34c9be_fb89cd85
Bytes: 69
Comment. I assume that's the highest of all the platforms we support?

33:72-33:73
Sat Jul 30 16:00:47 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6f34c9be_1b7f8177
Bytes: 1
&

33:0-33:91
Sat Jul 30 16:00:47 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6f34c9be_3b84456b
Bytes: 32
Put this method in LiveInterval?

84:18-84:46
Sat Jul 30 16:00:47 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6f34c9be_5b79f98e
Bytes: 48
Add a IsBlockedCoreRegister(i) to CodeGenerator.

94:18-94:50
Sat Jul 30 16:00:47 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6f34c9be_7b76bda1
Bytes: 5
ditto

104:19-106:29
Sat Jul 30 16:00:47 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6f34c9be_9b7371af
Bytes: 9
One line?

108:10-108:14
Sat Jul 30 16:00:47 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6f34c9be_bb7035a3
Bytes: 72
adjacent_nodes_

If too long, consider neighboors_ or something similar.

133
Sat Jul 30 16:00:47 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6f34c9be_fbae2de8
Bytes: 16
Missing new line

136
Sat Jul 30 16:00:47 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6f34c9be_1bb4e139
Bytes: 5
ditto

139
Sat Jul 30 16:00:47 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6f34c9be_3bb9a531
Bytes: 5
ditto

157:0-158:33
Sat Jul 30 16:00:47 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6f34c9be_5bbe5919
Bytes: 109
Looks off. Can you comment what degree is for, and then your constraints (like what you're currently saying?)

161:0-161:39
Sat Jul 30 16:00:47 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6f34c9be_9bc8d1bd
Bytes: 56
Only used to avoid pointer comparisons in the set right?

164:2-164:61
Sat Jul 30 16:00:47 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6f34c9be_fb970d92
Bytes: 29
Why? Please add more context.

236:0-239:72
Sat Jul 30 16:00:47 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6f34c9be_9ba1b1ef
Bytes: 77
Looks odd, how are we making sure we're successful before such many attempts?

260:14-260:15
Sat Jul 30 16:00:47 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6f34c9be_bb9e75a7
Bytes: 5
avoid

318:27-318:46
Sat Jul 30 16:00:47 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6f34c9be_dbf7a9f7
Bytes: 22
new line for this one.

336:34-336:52
Sat Jul 30 16:00:47 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6f34c9be_9bf611f6
Bytes: 137
Please upload a change where ProcessInstruction is shared between LinearScan and GraphColoring. The code involved looks awfully the same.

342:0-347:11
Sat Jul 30 16:00:47 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6f34c9be_fbfc6ddc
Bytes: 53
So did this solve your problem with the SuspendCheck?

363:0-366:3
Sat Jul 30 16:00:47 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6f34c9be_1b0221da
Bytes: 14
Add a comment.

380:6-383:19
Sat Jul 30 16:00:47 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6f34c9be_3b07e5e9
Bytes: 111
Add a comment that the HasSpillSlot is at this stage equivalent to being a parameter (or the ArtMethod, right?)

419
Sat Jul 30 16:00:47 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6f34c9be_7be95d14
Bytes: 40
Top level comment like the method above.

662:6-664:56
Sat Jul 30 16:00:47 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6f34c9be_bbf3d505
Bytes: 153
Memory wise, this looks scary, since we can do many attemps to build the interference graph. Consider creating a ArenaAllocator dedicated for each round.

689:2-689:16
Sat Jul 30 16:00:47 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6f34c9be_5bd5793f
Bytes: 20
What does that mean?

693:0-693:58
Sat Jul 30 16:00:47 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6f34c9be_7bd23d5a
Bytes: 49
English comment please on what you're doing here.

703:11-703:27
Sat Jul 30 16:00:47 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6f34c9be_9bcff1ab
Bytes: 48
Move this to else body, and say // end of range.

711:54-712:12
Sat Jul 30 16:00:47 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6f34c9be_bbccb5b7
Bytes: 47
Expand. I assume that's to avoid infinite loop?

764:21-764:36
Sat Jul 30 16:00:47 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6f34c9be_db45e91b
Bytes: 12
one per line

770:27-770:30
Sat Jul 30 16:00:47 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6f34c9be_fb4aad28
Bytes: 8
adjacent

781:10-781:65
Sat Jul 30 16:00:47 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6f34c9be_1b5061da
Bytes: 62
You never introduced the notion of high degree and low degree.

835:8-835:9
Sat Jul 30 16:00:47 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6f34c9be_3b5525ca
Bytes: 5
avoid

File: compiler/optimizing/register_allocator_graph_color.h

61:18-61:25
Sat Jul 30 16:00:47 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6f34c9be_78596392
Bytes: 8
requires

98:54-98:57
Sat Jul 30 16:00:47 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6f34c9be_7b579dd0
Bytes: 105
As a rule, please make reference const, and what you cannot make const, make it '*'. It avoids confusion.

102:66-104:16
Sat Jul 30 16:00:47 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6f34c9be_1b66a1f9
Bytes: 34
Why is that not the returned type?

119:40-119:46
Sat Jul 30 16:00:47 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6f34c9be_bb5755fd
Bytes: 34
avoid, make that the return value.

150:0-150:72
Sat Jul 30 16:00:47 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6f34c9be_db840971
Bytes: 70
Say that it's either one or two depending on whether 32bits or 64bits.

File: compiler/optimizing/ssa_liveness_analysis.h

510:24-510:35
Sat Jul 30 16:00:47 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6f34c9be_5b5ad9f9
Bytes: 10
definition

