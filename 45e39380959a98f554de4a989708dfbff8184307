Revision: 45e39380959a98f554de4a989708dfbff8184307
Patch-set: 3
File: compiler/optimizing/instruction_simplifier.cc

1065:13-1065:72
Thu Oct 08 17:13:50 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3065adc4_9a71cd6f
Bytes: 69
I think it's time to use helper methods for the different intrinsics.

File: compiler/optimizing/intrinsics_x86_64.cc

925:7-925:14
Thu Oct 08 17:13:50 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a5307d7f_56875410
Bytes: 38
when can src_pos or dest_post be null?

951:4-951:55
Thu Oct 08 16:28:46 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 704d65ae_63cf918b
Bytes: 14
This is weird.

951:4-951:55
Thu Oct 08 16:41:10 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 704d65ae_63cf918b
UUID: 30fe8d70_b25a80b6
Bytes: 27
You want "primitive array"?

1159:0-1168:17
Thu Oct 08 16:31:57 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 30592d74_75cf3f8b
Bytes: 137
Intel usually prefers a "rep xyz" for this, as performance is similar as long as you don't unroll heavily, but the code is a lot tighter.

1159:0-1168:17
Thu Oct 08 16:41:10 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 30592d74_75cf3f8b
UUID: 3065adc4_7a387999
Bytes: 185
Isn't there are lot of requirements for using rep (fixed registers, ...). For now, I'd rather keep it our own implementation in case I say bogus things about read barrier and poisoning.

File: compiler/optimizing/nodes.h

1686:11-1686:82
Thu Oct 08 17:13:50 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f00235ba_185845be
Bytes: 50
Isn't this equivalent to !IsPrimitiveArrayClass()?

1698:4-1698:6
Thu Oct 08 17:13:50 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 459c212a_bbd087d3
Bytes: 49
I'd use a big && with one condition on each line.

