Revision: f43894bf82f67780791fca8c629c41aab0a4ecd2
Patch-set: 2
File: compiler/optimizing/dead_code_elimination.cc

30:41-30:45
Fri Sep 25 09:05:09 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 8ec8f176_d6272491
Bytes: 25
Nit: new line after that.

30:41-30:45
Fri Sep 25 09:17:30 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 8ec8f176_d6272491
UUID: ceae6993_1be53fe0
Bytes: 4
Done

37:17-37:35
Fri Sep 25 09:05:09 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0e9a4178_126a8c29
Bytes: 15
live_successor?

37:17-37:35
Fri Sep 25 09:17:30 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0e9a4178_126a8c29
UUID: 8ec8f176_76ec908a
Bytes: 4
Done

57:27-57:82
Fri Sep 25 09:33:22 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ce074951_904c940d
Bytes: 36
Argh, why isn't NumEntries unsigned?

57:27-57:82
Fri Sep 25 11:25:21 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ce074951_904c940d
UUID: 0eb5e1d9_ba4c510d
Bytes: 4
Done

57:27-57:82
Fri Sep 25 13:17:04 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0eb5e1d9_ba4c510d
UUID: 2ebd45ca_f3e1903d
Bytes: 62
Heads up: Mark's changing it in his follow up CL go/aog/172695

57:0-61:9
Fri Sep 25 09:05:09 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 8ec8f176_16dd1cd3
Bytes: 104
Please add comments around this. What's odd is that the previous code was not breaking the loop line 51.

57:0-61:9
Fri Sep 25 09:17:30 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 8ec8f176_16dd1cd3
UUID: 8ec8f176_56e794a6
Bytes: 278
Not sure what I should comment on, the code seems very obvious to me.

In the previous code, if (case_value == last_value), it was the last iteration and there was almost no reason to break... other than avoiding infinite loop if last_value==std::numeric_limits<int32_t>::max().

68:0-69:56
Fri Sep 25 09:05:09 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0e9a4178_326f903a
Bytes: 207
Wouldn't that make more sense to do line 36 (just like before, at the entry of the marking of a block). Then I think you wouldn't need that selected_successor logic and could just push_back in the work list.

68:0-69:56
Fri Sep 25 09:17:30 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0e9a4178_326f903a
UUID: ceae6993_3bea03b1
Bytes: 128
I don't want to have multiple copies of the same block in the worklist. And I don't want to copy the 4-line if-block everywhere.

68:0-69:56
Fri Sep 25 09:33:22 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ceae6993_3bea03b1
UUID: eeb7ade1_f90ed7f9
Bytes: 252
+1. At least add comments. This looks pretty scary despite doing simple work. 
Or maybe a helper static function with the current loop body, and the same if/elseif/else structure as before that either calls it on `selected_successor` or all successors.

68:0-69:56
Fri Sep 25 11:25:21 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: eeb7ade1_f90ed7f9
UUID: 6ec3bd5a_d5439c08
Bytes: 197
I don't want to have the same structure as before. It requires code duplication - the "IF" branch had to explicitly handle the non-const path when the default handling would have been perfectly OK.

