Revision: 5202e4e86fdae676375f5b60aaa9b589855e77bd
Patch-set: 9
File: compiler/optimizing/code_generator.h

295:29-296:54
Mon Aug 10 15:49:50 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 87c9b39e_b635a601
Bytes: 13
Nit: one line

295:29-296:54
Mon Aug 10 16:10:50 2015 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 87c9b39e_b635a601
UUID: 6782ff52_12280c36
Bytes: 4
Done

File: compiler/optimizing/code_generator_arm.cc

960:0-963:29
Mon Aug 10 15:49:50 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 47e97bf9_3183f0a8
Bytes: 38
Can you move this to the Validate too?

960:0-963:29
Mon Aug 10 16:10:50 2015 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 47e97bf9_3183f0a8
UUID: 271727da_98fbd5ed
Bytes: 84
The arm backend has the extra `CanCall()`. Is it ok to generalise it to other archs?

File: compiler/optimizing/nodes.h

1234:11-1234:75
Tue Aug 11 11:58:48 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 47e33b4a_e13a06f0
Bytes: 117
it took me a while to figure what what this line represents... could you add a short description of the line formats?

1234:11-1234:75
Tue Aug 11 12:23:05 2015 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 47e33b4a_e13a06f0
UUID: 47e33b4a_214d0e94
Bytes: 4
Done

1235:10-1235:55
Tue Aug 11 11:58:48 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 27eac720_204d0a94
Bytes: 108
Why is the GC intermixed with read-writes? and not at one end or the other.

Why is "Depends on GC" value 9?

1235:10-1235:55
Tue Aug 11 12:23:05 2015 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 27eac720_204d0a94
UUID: 27eac720_409bee7f
Bytes: 218
Because of the way GVN flags work. The bottom bits are the 'changes' bits, and the top bits are the 'depends on' bits.
This way you can check relations by shifting and anding the bitfield.
The `9` was a mistake. Fixed.

1235:10-1235:55
Tue Aug 11 12:47:17 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 27eac720_409bee7f
UUID: 271727da_7b603baf
Bytes: 128
Thanks. I will take a closer look to refresh my memory on this. I don't see why GVN would care how we order the bits internally.

2740:0-2742:3
Mon Aug 10 15:49:50 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 07bea3e2_d706dc92
Bytes: 68
Do we really invoke the runtime on a HCompare? Please add a comment.

2740:0-2742:3
Mon Aug 10 16:10:50 2015 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 07bea3e2_d706dc92
UUID: a72a3712_34b2d07c
Bytes: 110
MIPS64 uses a runtime call. Add a comment. This will go away in an incoming patch listing GC-safe entrypoints.

2740:0-2742:3
Tue Aug 11 11:58:48 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a72a3712_34b2d07c
UUID: 27eac720_804a167a
Bytes: 40
huh... that's unfortunate, I wonder why.

4593:0-4593:10
Mon Aug 10 15:49:50 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 87c9b39e_96074a25
Bytes: 19
2 more space indent

4593:0-4593:10
Mon Aug 10 16:10:50 2015 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 87c9b39e_96074a25
UUID: a72a3712_74a84810
Bytes: 41
Done.
Fixed in other places in the patch.

4615:8-4615:19
Mon Aug 10 15:49:50 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 47c41b7d_b997dfcb
Bytes: 5
ditto

4615:8-4615:19
Mon Aug 10 16:10:50 2015 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 47c41b7d_b997dfcb
UUID: e7750f3f_ee3ebf75
Bytes: 4
Done

