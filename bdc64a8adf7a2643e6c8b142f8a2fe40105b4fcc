Revision: bdc64a8adf7a2643e6c8b142f8a2fe40105b4fcc
Patch-set: 6
File: compiler/image_writer.cc

251:15-251:16
Wed Dec 09 11:09:03 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 00c060be_43014648
Bytes: 9
add space

251:15-251:16
Wed Dec 09 18:58:42 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 00c060be_43014648
UUID: 253496db_ec350bd4
Bytes: 4
Done

264:36-264:46
Wed Dec 09 11:09:03 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 00c060be_a338fa1f
Bytes: 17
image file header

264:36-264:46
Wed Dec 09 18:58:42 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 00c060be_a338fa1f
UUID: c562daed_6970e5be
Bytes: 4
Done

272:36-272:46
Wed Dec 09 11:09:03 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 60cbdce2_e60f9e79
Bytes: 15
image file data

272:36-272:46
Wed Dec 09 18:58:42 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 60cbdce2_e60f9e79
UUID: a5596647_a8bc9b84
Bytes: 4
Done

File: dex2oat/dex2oat.cc

631:60-631:66
Wed Dec 09 11:09:03 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 20c564ce_c4fa5e64
Bytes: 55
This insanity is spreading... I'll have to clean it up.

631:60-631:66
Wed Dec 09 16:41:55 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 20c564ce_c4fa5e64
UUID: 254d7687_24421294
Bytes: 67
You know that the proper fix is the command-line parser, right? :-)

631:60-631:66
Wed Dec 09 18:58:42 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 20c564ce_c4fa5e64
UUID: a5596647_6870e3be
Bytes: 40
I delete the .data() it was unnecessary.

File: runtime/gc/space/image_space.cc

682:24-682:50
Wed Dec 09 11:09:03 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 40c6d8da_4554aa46
Bytes: 23
header size + data size

682:24-682:50
Wed Dec 09 18:58:42 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 40c6d8da_4554aa46
UUID: e55fde25_4a8d13aa
Bytes: 4
Done

705:0-706:42
Wed Dec 09 11:09:03 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 00c060be_e342f291
Bytes: 172
This comment does not reflect the RoundUp() above. And I think it's an unnecessary comment, the code is obvious anyway, just add the bitmap section size to its file offset.

705:0-706:42
Wed Dec 09 18:58:42 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 00c060be_e342f291
UUID: 253496db_6c2b5b75
Bytes: 4
Done

740:6-740:65
Wed Dec 09 11:09:03 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 408b38a3_3d318f2d
Bytes: 155
Is there no API to decompress from file descriptor straight to memory? Do we need to allocate this huge buffer?

Alternatively, can we mmap() this instead?

740:6-740:65
Wed Dec 09 18:58:42 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 408b38a3_3d318f2d
UUID: 253496db_cc1b6f58
Bytes: 67
I suppose MemMap::MapFile would possibly reduce dirty memory usage.

