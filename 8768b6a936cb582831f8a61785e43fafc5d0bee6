Revision: 8768b6a936cb582831f8a61785e43fafc5d0bee6
Patch-set: 7
File: /COMMIT_MSG

14:0-15:16
Thu Jun 04 11:28:59 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b9ec18cf_41ff027a
Bytes: 4
Yay!

File: runtime/check_reference_map_visitor.h

78:0-82:55
Thu Jun 04 08:33:29 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d9f1cca3_745ac07c
Bytes: 70
Nit: move the call to the same line, and move arguments to a new line.

File: runtime/stack_map.cc

182:6-184:93
Thu Jun 04 08:56:12 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 99fbd485_75bbda63
Bytes: 162
somethings is off with this pattern (used everywhere now)
- extract the StackMapEncoding from the code_info
- pass it again to the code_indo to compute something.

182:6-184:93
Thu Jun 04 08:57:40 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 99fbd485_75bbda63
UUID: b9ec18cf_76e7665d
Bytes: 107
I think it's forced by the design of having CodeInfo and StackMap just be abstractions over a MemoryRegion.

182:6-184:93
Thu Jun 04 09:03:24 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b9ec18cf_76e7665d
UUID: b9ec18cf_b6d0ae70
Bytes: 248
yea, and mostly because our design uses the same objects to create and read the stack maps. It still look silly. Don't have an immediate suggestion how to fix it (except having methods with and without the encoding parameter but that seem overkill)

File: runtime/stack_map.h

640:2-640:23
Thu Jun 04 08:56:12 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b9ec18cf_76300676
Bytes: 18
when is this used?

655:26-655:33
Thu Jun 04 08:33:29 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 99fbd485_75447aec
Bytes: 17
Compute -> Create

735:0-740:34
Thu Jun 04 08:33:29 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d9f1cca3_b4538863
Bytes: 10
all const?

759:25-759:45
Thu Jun 04 08:33:29 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 99fbd485_955ac6c6
Bytes: 151
I'd like to keep the stack map as an abstraction over a memory region. Hence make it state-less. Why didn't you keep the extra argument to all methods?

759:25-759:45
Thu Jun 04 11:28:59 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 99fbd485_955ac6c6
UUID: d9f1cca3_97400e06
Bytes: 146
+1, it does not follow the state-less design used so far.  (BTW we should probably state this design choice explicitly in a comment in this file.)

865:25-865:31
Thu Jun 04 08:56:12 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 99fbd485_359832fc
Bytes: 10
move to cc

