Revision: ba6596b6051c0d586cee10a85298a9ed860a0d96
Patch-set: 2
File: runtime/common_runtime_test.cc

58:5-58:11
Thu Nov 05 00:27:01 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 568ea242_d78636f8
Bytes: 1
?

File: runtime/interpreter/interpreter_common.h

890:24-890:30
Thu Nov 05 00:27:01 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d69a9277_389051c2
Bytes: 33
Why not just use the constructor?

911:10-911:38
Thu Nov 05 00:27:01 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 96a49abb_56316498
Bytes: 36
Use CHECK instead of log fatal here?

917:10-917:39
Thu Nov 05 00:27:01 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b686fe2b_8f9e59d4
Bytes: 8
And here

929:5-929:12
Thu Nov 05 00:27:01 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 96a49abb_d64474fa
Bytes: 66
I thought the correct indentation here was 4, is 8 actually right?

930:6-930:40
Thu Nov 05 00:27:01 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d683721b_edb4410f
Bytes: 22
AssertPendingException

File: runtime/lambda/box_class_table.cc

35:2-35:8
Thu Nov 05 00:27:01 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d683721b_6d77711e
Bytes: 78
I think we prefer ATTRIBUTE_UNUSED. Also what do you mean by delete the class?

86:9-86:13
Thu Nov 05 00:27:01 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d683721b_d0bc74e1
Bytes: 13
That is safe.

106:4-106:15
Thu Nov 05 00:27:01 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b69d1e72_1770bce6
Bytes: 105
You don't need to manually free heap objects. Having the destructor be completely empty seems OK with me.

File: runtime/lambda/box_class_table.h

84:36-84:76
Thu Nov 05 00:27:01 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f6923665_91eafc99
Bytes: 76
You can just leave this uncommented, it works with NO_THREAD_SAFETY_ANALYSIS

101:22-101:24
Thu Nov 05 00:27:01 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 568ea242_f79fb21c
Bytes: 8
2 spaces

110:19-110:54
Thu Nov 05 00:27:01 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b69d1e72_f72c18d6
Bytes: 19
Strange indentation

File: runtime/lambda/box_table.cc

117:8-117:29
Thu Nov 05 00:27:01 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 36892e3b_536a5cf6
Bytes: 52
This means that class_loader may be a stale pointer.

File: runtime/lambda/box_table.h

145:19-145:61
Thu Nov 05 00:27:01 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b69d1e72_3775c0d7
Bytes: 37
Is indenting the GUARDED_BY required?

File: runtime/lambda/shorty_field_type.h

316:3-318:2
Thu Nov 05 00:27:01 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b686fe2b_0fc0a9a0
Bytes: 11
Indentation

File: runtime/mirror/class.h

369:27-369:45
Thu Nov 05 00:27:01 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1698aa84_db581f81
Bytes: 34
What is the point of these parens?

File: runtime/modifiers.h

53:66-53:67
Thu Nov 05 00:27:01 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f6923665_b1953801
Bytes: 12
Extra spaace

File: runtime/native/java_lang_reflect_Method.cc

82:97-82:109
Thu Nov 05 00:27:01 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 568ea242_772742a4
Bytes: 18
Line too long now.

