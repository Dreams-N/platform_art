Revision: 9468be294f9ab40be5a80faa87ebe892a88b43d7
Patch-set: 9
File: compiler/optimizing/code_generator.cc

192:0-192:46
Mon Jun 15 13:18:29 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 79bf0033_23d1aa74
Bytes: 98
We should also check with Vladimir how this is going to be affected by the relocation he is doing.

237:0-237:25
Mon Jun 15 13:18:29 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 397f484e_e1b4e643
Bytes: 15
Why doing this?

File: compiler/optimizing/code_generator.h

142:0-142:70
Mon Jun 15 13:18:29 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b9733893_d5823c50
Bytes: 28
Why can't you use the field?

142:0-142:70
Mon Jun 15 13:37:12 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b9733893_d5823c50
UUID: 799460c1_3ba357ff
Bytes: 149
Actually, I suggested to Alexandre that he should get rid of the field entirely because it is not used anywhere outside the CompileInternal function.

142:0-142:70
Mon Jun 15 13:39:38 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 799460c1_3ba357ff
UUID: 79bf0033_43c666a8
Bytes: 5
sgtm.

143:51-143:95
Mon Jun 15 13:18:29 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 79bf0033_03ce2ed2
Bytes: 5
ditto

350:26-350:39
Mon Jun 15 13:18:29 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 397f484e_a1aadedd
Bytes: 18
GetDisassemblyInfo

462:23-462:58
Mon Jun 15 13:18:29 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 397f484e_c1afe2ec
Bytes: 31
Why are we not using the field?

File: compiler/optimizing/code_generator_arm.h

122:27-122:32
Mon Jun 15 13:18:29 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b9733893_356a9013
Bytes: 94
Consider moving all the slow paths changes in another CL. It would make this CL a lot shorter.

File: compiler/optimizing/graph_visualizer.cc

19:0-21:18
Mon Jun 15 15:41:44 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 397f484e_243a5cd6
Bytes: 6
Ditto.

96:3-98:95
Mon Jun 15 13:18:29 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 799460c1_5bf2e313
Bytes: 112
I think there is some expcataion we could run dex2oat on the mac. We should have helpers for doing that already.

113:8-113:30
Mon Jun 15 13:18:29 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 79bf0033_63dba294
Bytes: 22
Nit: move this one up?

162:45-162:46
Mon Jun 15 13:18:29 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 397f484e_41bcb227
Bytes: 47
Nit: '?' and ':' at the beginning of each line.

509:17-510:17
Mon Jun 15 13:18:29 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 397f484e_61c9b6b8
Bytes: 66
Does that work in c1visualizer? I thought it was unhappy about it.

File: compiler/optimizing/optimizing_compiler.cc

424:40-424:87
Mon Jun 15 13:18:29 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 799460c1_bbaf67ed
Bytes: 120
Can't you just pass it to the CodeGenerator constructor instead? Also, won't that record unconditionnally the dump info?

