Revision: 9285c199b0604eed2805b4fdbcf670e627c3d341
Patch-set: 2
File: runtime/gc/heap.cc

904
Tue Jun 24 00:14:12 2014 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 24a8e18f_d5ae2c86
Bytes: 137
Use ScopedThreadStateChange outside of the if statement instead of TransitionFromRunnableToSuspended / TransitionFromSuspendedToRunnable?

904
Tue Jun 24 12:51:21 2014 +0000
Author: Zuo Wang <1012361@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 24a8e18f_d5ae2c86
UUID: a493f168_4bae2574
Bytes: 264
After thread is changed to suspended, we need get mutator_lock_ excursively to prevent other threads perform Ros2Ros compaction at the same time. Btw, keeping exclusive lock/unlock but replace TransitionFromxxx with ScopedThreadStateChange triggers compiler error.

949
Tue Jun 24 00:14:12 2014 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c4c1c553_a82883ec
Bytes: 16
Indents are off.

949
Tue Jun 24 12:51:21 2014 +0000
Author: Zuo Wang <1012361@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: c4c1c553_a82883ec
UUID: 84826d17_0d40b5c3
Bytes: 4
Done

1294
Tue Jun 24 00:14:12 2014 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 240c6177_a9fcd11d
Bytes: 56
Use Atomic<> class instead of android_atomic_inc please.

1294
Tue Jun 24 12:51:21 2014 +0000
Author: Zuo Wang <1012361@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 240c6177_a9fcd11d
UUID: 84826d17_ed09a1b9
Bytes: 4
Done

1546
Tue Jun 24 00:14:12 2014 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e4ede9ca_614e7e7f
Bytes: 50
I'd prefer if we avoided using string comparisons.

1546
Tue Jun 24 12:51:21 2014 +0000
Author: Zuo Wang <1012361@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e4ede9ca_614e7e7f
UUID: 84826d17_ad0fa9be
Bytes: 4
Done

1556
Tue Jun 24 00:14:12 2014 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a4be91c4_362bf6a4
Bytes: 16
Indents are off.

1556
Tue Jun 24 12:51:21 2014 +0000
Author: Zuo Wang <1012361@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a4be91c4_362bf6a4
UUID: c4962558_8c84a786
Bytes: 4
Done

File: runtime/gc/heap.h

42
Tue Jun 24 00:14:12 2014 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 649e596e_37f1404a
Bytes: 68
Use namespaces + declarations instead of including this header file.

42
Tue Jun 24 12:51:21 2014 +0000
Author: Zuo Wang <1012361@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 649e596e_37f1404a
UUID: a493f168_2ba9d96a
Bytes: 4
Done

996
Tue Jun 24 00:14:12 2014 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 24a8e18f_b5b448bf
Bytes: 152
Is there any reason that this only works for RosAlloc? I don't see why we couldn't generalize the logic to work both when kUseRosAlloc is true or false.

996
Tue Jun 24 12:51:21 2014 +0000
Author: Zuo Wang <1012361@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 24a8e18f_b5b448bf
UUID: c4962558_4c92bfd2
Bytes: 378
I may not understand your comment.
We implement ros2ros compact-GC. During heap initialization, we calculate use_Ros2Ros_compact_ by (kUseRosAlloc && use_Ros2Ros_compact && background_collector_type_ == kCollectorTypeCMS && foreground_collector_type_ == kCollectorTypeCMS). If kUseRosAlloc is set false, Ros2Ros is disabled and its related initialization codes will be bypassed.

File: runtime/parsed_options.cc

202
Tue Jun 24 00:14:12 2014 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c4c1c553_28a1d39c
Bytes: 59
Why was this changed to none, I assume it is unintentional?

202
Tue Jun 24 12:51:21 2014 +0000
Author: Zuo Wang <1012361@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: c4c1c553_28a1d39c
UUID: 84826d17_8de025ae
Bytes: 625
This change reverts the background_collector to CMS.
As I explain in commit message, Ros2Ros compaction is applied in two cases:
1. one compaction before before OOM.
2. one compaction after application is switched background.
The 2nd case assumes that the background collector is CMS, and its benefit is to avoid the copying from bump pointer space to Ros space when app is switched foreground. It conflicts with the design to use SemiSpace(SS) collector as background collector. In my view, "CMS as background collector + Ros2Ros compaction" is alternative to "SS as background collector". Let me know your comments, thanks!

207
Tue Jun 24 00:14:12 2014 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e4c40963_af7de53b
Bytes: 66
I believe the convention is to have all lower case variable names.

207
Tue Jun 24 12:51:21 2014 +0000
Author: Zuo Wang <1012361@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e4c40963_af7de53b
UUID: 84826d17_cdae9d86
Bytes: 4
Done

