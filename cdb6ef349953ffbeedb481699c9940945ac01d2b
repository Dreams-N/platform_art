Revision: cdb6ef349953ffbeedb481699c9940945ac01d2b
Patch-set: 2
File: compiler/optimizing/code_generator_arm.cc

2135:55-2135:59
Fri Nov 21 09:12:49 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9f448158_6f47d17e
Bytes: 60
Explain the magic constant and put it in a kFoobar variable.

2135:55-2135:59
Fri Nov 21 12:15:04 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 9f448158_6f47d17e
UUID: df3a79c4_71a338be
Bytes: 4
Done

File: compiler/optimizing/code_generator_x86.cc

2179:10-2179:12
Fri Nov 21 09:12:49 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: df3a79c4_b1e9a017
Bytes: 19
indentation is off.

2179:10-2179:12
Fri Nov 21 12:15:04 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: df3a79c4_b1e9a017
UUID: 9f448158_cf3d9db2
Bytes: 4
Done

File: compiler/optimizing/code_generator_x86_64.cc

2092:24-2092:37
Fri Nov 21 09:12:49 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7f526d24_c678e2b2
Bytes: 77
Can this really happen? Don't the instructions and inputs have the same type?

2092:24-2092:37
Fri Nov 21 12:15:04 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7f526d24_c678e2b2
UUID: df3a79c4_51a83496
Bytes: 120
It shouldn't. There is a bug somewhere and this happens. This is here to enable testing. I'll debug the issue separably.

File: compiler/optimizing/nodes.h

1871:4-1871:49
Thu Nov 20 19:04:34 2014 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9ff64148_8547867d
Bytes: 93
Isn't converting to uint32_t, doing the shift, and converting back, easier and more readable?

1871:4-1871:49
Thu Nov 20 19:08:50 2014 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 9ff64148_8547867d
UUID: ffe73d92_4883d3e7
Bytes: 285
I'm not deep enough in the code. But does this take Java semantics (preserved by dex) into account, i.e., is y in the right range when this is called? y is implicitly masked by 0x1f...

This has an impact here as you are not ensuring that y is non-negative, which is required in C/C++.

1871:4-1871:49
Fri Nov 21 00:22:23 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ffe73d92_4883d3e7
UUID: fa32ebd1_edb92171
Bytes: 139
It doesn't. C++ has undefined behaviour when the shift count is out of range. I figured it after uploading but didn't have time to fix it:)

1871:4-1871:49
Fri Nov 21 00:22:23 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 9ff64148_8547867d
UUID: fa32ebd1_0d9f55f0
Bytes: 77
Maybe. I don't have a strong preference. I tried to match the Java spec here.

1871:4-1871:49
Fri Nov 21 00:26:49 2014 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: fa32ebd1_0d9f55f0
UUID: 5ff84938_71a56097
Bytes: 221
I wonder whether we should follow Java or Dex spec. Dex actually defines what ushr-int is equivalent to... :-)

https://source.android.com/devices/tech/dalvik/dalvik-bytecode.html, section "Mathematical operation details"

1871:4-1871:49
Fri Nov 21 00:29:56 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5ff84938_71a56097
UUID: ba5313fc_b344e2e7
Bytes: 115
I wasn't aware of that. Thanks! :) I think it's better to match the dex one then. They should be equivalent anyway.

1871:4-1871:49
Fri Nov 21 02:15:10 2014 +0000
Author: Razvan A Lupusoru <1013855@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ba5313fc_b344e2e7
UUID: df151930_59a84396
Bytes: 95
Agreed. You could also use interpreter as reference as well since it has to adhere to the spec.

1871:4-1871:49
Fri Nov 21 09:12:49 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: df151930_59a84396
UUID: 7f526d24_a685e630
Bytes: 28
Yes, please follow Dex spec.

1871:4-1871:49
Fri Nov 21 12:15:04 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7f526d24_a685e630
UUID: 7f526d24_06883aff
Bytes: 4
Done

1874:10-1874:18
Fri Nov 21 09:12:49 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9f448158_ef3aa1e9
Bytes: 5
ditto

1874:10-1874:18
Fri Nov 21 12:15:04 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 9f448158_ef3aa1e9
UUID: 7f526d24_268336e9
Bytes: 4
Done

File: test/429-optimizing-arith-shifts/src/Main.java

99:0-99:7
Fri Nov 21 09:12:49 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9f448158_cf37dd01
Bytes: 19
indentation is off.

99:0-99:7
Fri Nov 21 12:15:04 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 9f448158_cf37dd01
UUID: df3a79c4_319db070
Bytes: 4
Done

