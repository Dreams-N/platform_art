Revision: 0c58e54af45e7b91fdc6b10053c2fa350141cda9
Patch-set: 1
File: compiler/optimizing/bounds_check_elimination.cc

1240:8-1243:9
Thu Dec 03 22:30:02 2015 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 009dc025_9ef2598f
Bytes: 574
Do you need to continue looping once try_dynamic_bce becomes false?

It seems like a better loop might be

    do {
      if (...) {
        if (index_range.GetLower()...) {
          *try_dynamic_bce = false;
        }
        if (!needs_finite_test && ...) {
          return true;
        } else if (!*try_dynamic_bce) {
          return false;
        }
      }
    } while (induction_range_.RefineOuter(...));

If it is just that the loop is guaranteed to end when both *try_dynamic_bce and (!needs_finite_test && ...) are false then you should mention it in a comment.

File: compiler/optimizing/induction_var_range.cc

420:100-420:105
Thu Dec 03 22:30:02 2015 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 404ed883_28df83fb
Bytes: 23
Nit: Style: line length

File: compiler/optimizing/induction_var_range.h

154:59-154:87
Thu Dec 03 22:30:02 2015 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 204d6487_47f2b056
Bytes: 135
Nit: I find this wording somewhat confusing. maybe:

    Returns refined value or the input value if no further refinement is possible.

File: test/530-checker-loops/src/Main.java

437:26-437:27
Thu Dec 03 22:30:02 2015 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 20a2c463_6239f221
Bytes: 17
why not b.length?

