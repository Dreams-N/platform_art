Revision: 58de6196f35d54f3f13b0a28e21162bb42bc92ae
Patch-set: 1
File: /COMMIT_MSG

9
Wed Aug 17 16:47:07 2016 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dbdd7f2d_520fa235
Bytes: 88
I would add a README.md in this directory with all this information in a formatted style

9
Wed Aug 17 16:55:35 2016 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dbdd7f2d_520fa235
UUID: dbdd7f2d_12da7a41
Bytes: 106
oh, and move it into its own directory (not the top level tools), not put a README at this level of course

9
Mon Aug 22 23:02:34 2016 +0000
Author: Wojciech Staszkiewicz <1067043@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dbdd7f2d_520fa235
UUID: 48ac639b_9ef85db0
Bytes: 4
Done

9
Mon Aug 22 23:02:34 2016 +0000
Author: Wojciech Staszkiewicz <1067043@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dbdd7f2d_12da7a41
UUID: 48ac639b_7ef469bb
Bytes: 4
Done

File: tools/bisection-search.py

1
Tue Aug 16 22:30:04 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dbdd7f2d_3df66f91
Bytes: 30
needs the version 2.7, 2.8 etc

1
Mon Aug 22 23:02:34 2016 +0000
Author: Wojciech Staszkiewicz <1067043@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dbdd7f2d_3df66f91
UUID: c89e9321_f962903f
Bytes: 4
Done

23
Wed Aug 17 16:47:07 2016 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dbdd7f2d_d214925a
Bytes: 87
perhaps add a usage line here (with all optional comments listed, as done in Linux man)

23
Mon Aug 22 23:02:34 2016 +0000
Author: Wojciech Staszkiewicz <1067043@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dbdd7f2d_d214925a
UUID: c89e9321_19609c35
Bytes: 4
Done

25
Wed Aug 17 16:47:07 2016 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dbdd7f2d_d299f217
Bytes: 75
maybe strip the test_float part and the 19742 to get a more concise example

25
Mon Aug 22 23:02:34 2016 +0000
Author: Wojciech Staszkiewicz <1067043@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dbdd7f2d_d299f217
UUID: e8f9973d_d1fb1410
Bytes: 4
Done

41
Wed Aug 17 16:47:07 2016 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dbdd7f2d_f2218eb1
Bytes: 28
these globals need a comment

41
Mon Aug 22 23:02:34 2016 +0000
Author: Wojciech Staszkiewicz <1067043@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dbdd7f2d_f2218eb1
UUID: e8f9973d_512a647c
Bytes: 4
Done

52
Wed Aug 17 16:47:07 2016 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dbdd7f2d_3256963e
Bytes: 96
as a general rule, give each class its own header comment, including such exception placeholders

52
Mon Aug 22 23:02:34 2016 +0000
Author: Wojciech Staszkiewicz <1067043@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dbdd7f2d_3256963e
UUID: e8f9973d_114f3c6f
Bytes: 4
Done

62
Tue Aug 16 22:30:04 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dbdd7f2d_ddde6b06
Bytes: 39
nit: String doc for public constructors

62
Mon Aug 22 23:02:34 2016 +0000
Author: Wojciech Staszkiewicz <1067043@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dbdd7f2d_ddde6b06
UUID: e8f9973d_f14bb05e
Bytes: 4
Done

131
Tue Aug 16 22:30:04 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dbdd7f2d_3d5bcf64
Bytes: 74
Leaving here in a comment what this loop is trying to parse would be good.

131
Mon Aug 22 23:02:34 2016 +0000
Author: Wojciech Staszkiewicz <1067043@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dbdd7f2d_3d5bcf64
UUID: e86a77fa_f5e5189f
Bytes: 4
Done

140
Tue Aug 16 22:30:04 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dbdd7f2d_bd999f18
Bytes: 195
use () instead of [] if you're just going to immediately iterate over again so that it's lazy.

There's no need to eagerly make an array and then immediately visit it again to make another array.

140
Mon Aug 22 23:02:34 2016 +0000
Author: Wojciech Staszkiewicz <1067043@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dbdd7f2d_bd999f18
UUID: e86a77fa_758d88de
Bytes: 4
Done

146
Tue Aug 16 22:30:04 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dbdd7f2d_dd73cbe1
Bytes: 93
Why -j1? Slowing things down unnecessarily.

Are lines being mixed in if it's -jMoreThanOne ?

146
Mon Aug 22 23:02:34 2016 +0000
Author: Wojciech Staszkiewicz <1067043@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dbdd7f2d_dd73cbe1
UUID: e86a77fa_b568c0f1
Bytes: 39
They seem to stay sequential. Removing.

147
Tue Aug 16 22:30:04 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dbdd7f2d_3d44af79
Bytes: 67
nit: "if compiled_methods" ? Do you want to disambiguate vs [] etc?

147
Mon Aug 22 23:02:34 2016 +0000
Author: Wojciech Staszkiewicz <1067043@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dbdd7f2d_3d44af79
UUID: e8f9973d_91822c67
Bytes: 129
Yes, passing empty list results in command which compiles no methods, passing None results in command which compiler all methods.

163
Wed Aug 17 16:47:07 2016 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dbdd7f2d_12a27aec
Bytes: 462
I like this abstraction for the host/target. A very clean way. However, I would add much more documentation to this class (first why it is there, and how it is used by a driver in a way that is no longer aware of host/target)

Also, this ABS and its subclasses are useful utilities that we could share between all upcoming scripts that need to set up host and target. How about making this their own module now already, so we can start importing these in others?

163
Mon Aug 22 23:02:34 2016 +0000
Author: Wojciech Staszkiewicz <1067043@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dbdd7f2d_12a27aec
UUID: e8f9973d_31811861
Bytes: 10
Good idea!

187
Tue Aug 16 22:30:04 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dbdd7f2d_dd210bb2
Bytes: 16
nit: missing doc

187
Mon Aug 22 23:02:34 2016 +0000
Author: Wojciech Staszkiewicz <1067043@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dbdd7f2d_dd210bb2
UUID: e8f9973d_578db4dd
Bytes: 4
Done

191
Tue Aug 16 22:30:04 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dbdd7f2d_fd1ec774
Bytes: 16
nit: missing doc

191
Mon Aug 22 23:02:34 2016 +0000
Author: Wojciech Staszkiewicz <1067043@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dbdd7f2d_fd1ec774
UUID: e8f9973d_379228fc
Bytes: 4
Done

201
Tue Aug 16 22:30:04 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dbdd7f2d_1d81b362
Bytes: 23
nit: missing doc string

201
Mon Aug 22 23:02:34 2016 +0000
Author: Wojciech Staszkiewicz <1067043@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dbdd7f2d_1d81b362
UUID: e8f9973d_17772ce0
Bytes: 4
Done

205
Tue Aug 16 22:30:04 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dbdd7f2d_1d0d3346
Bytes: 16
nit: missing doc

205
Mon Aug 22 23:02:34 2016 +0000
Author: Wojciech Staszkiewicz <1067043@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dbdd7f2d_1d0d3346
UUID: e8f9973d_f773a0ef
Bytes: 4
Done

207:22-207:55
Tue Aug 16 22:30:04 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dbdd7f2d_3d12ef68
Bytes: 40
nit: should be constant near top of file

207:22-207:55
Mon Aug 22 23:02:34 2016 +0000
Author: Wojciech Staszkiewicz <1067043@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dbdd7f2d_3d12ef68
UUID: e8f9973d_91ffcccb
Bytes: 4
Done

210
Tue Aug 16 22:30:04 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dbdd7f2d_7d0c7747
Bytes: 16
nit: missing doc

210
Mon Aug 22 23:02:34 2016 +0000
Author: Wojciech Staszkiewicz <1067043@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dbdd7f2d_7d0c7747
UUID: e8f9973d_d79784df
Bytes: 4
Done

212
Tue Aug 16 22:30:04 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dbdd7f2d_5dd5fbb5
Bytes: 346
I'm not a big fan of this. It has to wait until process fully finishes (sends EOF).

It would be a superior design if it read the output as it streamed in, perhaps this can return an iterator to every line in the output instead (the exact mechanism doesn't matter so long as it doesn't need to block).

(and of course it would execute faster too)

212
Mon Aug 22 23:02:34 2016 +0000
Author: Wojciech Staszkiewicz <1067043@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dbdd7f2d_5dd5fbb5
UUID: e8f9973d_31cb587c
Bytes: 206
This might not be worth it because we usually need return code to move along with computation. I don't think performance will be a problem here. If it turns out otherwise we can always go back and optimize.

223
Tue Aug 16 22:30:04 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dbdd7f2d_bd435f4d
Bytes: 23
nit: missing doc string

223
Mon Aug 22 23:02:34 2016 +0000
Author: Wojciech Staszkiewicz <1067043@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dbdd7f2d_bd435f4d
UUID: e8f9973d_b72198b2
Bytes: 4
Done

233
Tue Aug 16 22:30:04 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dbdd7f2d_9d1dc36e
Bytes: 127
This doesn't seem right, should be able to use one of the existing android environment variables to get it (see the art script)

233
Mon Aug 22 23:02:34 2016 +0000
Author: Wojciech Staszkiewicz <1067043@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dbdd7f2d_9d1dc36e
UUID: e8f9973d_cc96d73c
Bytes: 4
Done

236:36-236:54
Tue Aug 16 22:30:04 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dbdd7f2d_dd274bb4
Bytes: 101
hardcoding this string is not future proof because at some point we will have 64-bit only host builds

236:36-236:54
Mon Aug 22 23:02:34 2016 +0000
Author: Wojciech Staszkiewicz <1067043@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dbdd7f2d_dd274bb4
UUID: e8f9973d_ac0eeb8c
Bytes: 4
Done

238
Tue Aug 16 22:30:04 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dbdd7f2d_bd1a7f71
Bytes: 63
A comment leaving why this load bias is necessary would be good

238
Mon Aug 22 23:02:34 2016 +0000
Author: Wojciech Staszkiewicz <1067043@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dbdd7f2d_bd1a7f71
UUID: e8f9973d_f7172058
Bytes: 4
Done

240
Tue Aug 16 22:30:04 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dbdd7f2d_1d58d336
Bytes: 23
nit: missing doc string

240
Mon Aug 22 23:02:34 2016 +0000
Author: Wojciech Staszkiewicz <1067043@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dbdd7f2d_1d58d336
UUID: e8f9973d_b7f87814
Bytes: 4
Done

245
Tue Aug 16 22:30:04 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dbdd7f2d_3d382fd2
Bytes: 25
with open(..) as f:
  ...

245
Mon Aug 22 23:02:34 2016 +0000
Author: Wojciech Staszkiewicz <1067043@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dbdd7f2d_3d382fd2
UUID: e8f9973d_8cb1efa7
Bytes: 4
Done

248
Tue Aug 16 22:30:04 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dbdd7f2d_5d625be2
Bytes: 23
nit: missing doc string

248
Mon Aug 22 23:02:34 2016 +0000
Author: Wojciech Staszkiewicz <1067043@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dbdd7f2d_5d625be2
UUID: e8f9973d_9709fc36
Bytes: 4
Done

252
Tue Aug 16 22:30:04 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dbdd7f2d_7d6717f1
Bytes: 23
nit: missing doc string

252
Mon Aug 22 23:02:34 2016 +0000
Author: Wojciech Staszkiewicz <1067043@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dbdd7f2d_7d6717f1
UUID: e8f9973d_770e703e
Bytes: 4
Done

257
Tue Aug 16 22:30:04 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dbdd7f2d_1d97f39a
Bytes: 58
one-liner:

classpath = property(attrgetter("_classpath"))

257
Mon Aug 22 23:02:34 2016 +0000
Author: Wojciech Staszkiewicz <1067043@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dbdd7f2d_1d97f39a
UUID: e8f9973d_8cd8cfef
Bytes: 156
Style guide suggests using decorator for read only properties https://engdoc.corp.google.com/eng/doc/devguide/py/styleguide.shtml?cl=head#s2.13-properties .

271
Tue Aug 16 22:30:04 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dbdd7f2d_9d74e396
Bytes: 9
Comments?

271
Mon Aug 22 23:02:34 2016 +0000
Author: Wojciech Staszkiewicz <1067043@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dbdd7f2d_9d74e396
UUID: e8f9973d_b76cf8ca
Bytes: 4
Done

279
Tue Aug 16 22:30:04 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dbdd7f2d_5d917ba1
Bytes: 10
Docstring?

279
Mon Aug 22 23:02:34 2016 +0000
Author: Wojciech Staszkiewicz <1067043@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dbdd7f2d_5d917ba1
UUID: e8f9973d_97ad7cef
Bytes: 4
Done

289
Tue Aug 16 22:30:04 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dbdd7f2d_dd5f4be9
Bytes: 34
Is it doing a root anywhere first?

289
Mon Aug 22 23:02:34 2016 +0000
Author: Wojciech Staszkiewicz <1067043@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dbdd7f2d_dd5f4be9
UUID: e8f9973d_77b2f04a
Bytes: 54
I think its not needed when accesing /data/local/tmp/.

299
Tue Aug 16 22:30:04 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dbdd7f2d_5d06dbf2
Bytes: 50
? It should probably be making a file in /data/tmp

299
Mon Aug 22 23:02:34 2016 +0000
Author: Wojciech Staszkiewicz <1067043@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dbdd7f2d_5d06dbf2
UUID: e8f9973d_f7a4c0fc
Bytes: 158
I was delegating work to the host implementation and keeping device directory in sync. Now that I thought about it it is not a good approach after all. Fixed.

308:28-308:31
Tue Aug 16 22:30:04 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dbdd7f2d_9d55c3cf
Bytes: 144
interface nit: it should probably look more like an argv instead of a string, that way you can wrap every argument with "" to make it space-safe

308:28-308:31
Mon Aug 22 23:02:34 2016 +0000
Author: Wojciech Staszkiewicz <1067043@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dbdd7f2d_9d55c3cf
UUID: c89e9321_e54e6c71
Bytes: 4
Done

337
Tue Aug 16 22:30:04 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dbdd7f2d_dd0d8be9
Bytes: 35
wrap args with "" 

"{0}" "{1}" etc

337
Mon Aug 22 23:02:34 2016 +0000
Author: Wojciech Staszkiewicz <1067043@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dbdd7f2d_dd0d8be9
UUID: c89e9321_2550d462
Bytes: 4
Done

346
Tue Aug 16 22:30:04 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dbdd7f2d_dd266b61
Bytes: 182
very dangerous if {0} is ever blank

   'adb shell [ -d {0} ] && rm {0}/* ' instead

also this will fail if you have files inside subdirectories, so you probably wanted rm -r instead

346
Mon Aug 22 23:02:34 2016 +0000
Author: Wojciech Staszkiewicz <1067043@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dbdd7f2d_dd266b61
UUID: c89e9321_a5e5c49f
Bytes: 4
Done

362
Tue Aug 16 22:30:04 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dbdd7f2d_9df943b6
Bytes: 43
any reason to return [] instead of () here?

362
Mon Aug 22 23:02:34 2016 +0000
Author: Wojciech Staszkiewicz <1067043@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dbdd7f2d_9df943b6
UUID: c89e9321_a5adc480
Bytes: 123
I feel like there is little benefit to changing this and downsides include being unable to easily print passes in Testable.

390:54-390:56
Fri Aug 19 23:16:24 2016 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c89e9321_1f62c7aa
Bytes: 203
I think we need to do something better than asserting here. It it fails always, it may be a bug in e.g. Jack or our library. We should report that in a better way, or proceed with e.g. bisecting Jack :-)

390:54-390:56
Mon Aug 22 23:02:34 2016 +0000
Author: Wojciech Staszkiewicz <1067043@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: c89e9321_1f62c7aa
UUID: 48ac639b_c1891821
Bytes: 91
Changed to exception and improved error message. Jack Bisection incoming in followup CL. ;)

410:25-410:39
Tue Aug 16 22:30:04 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dbdd7f2d_fd87a70e
Bytes: 16
--correct-output

410:25-410:39
Mon Aug 22 23:02:34 2016 +0000
Author: Wojciech Staszkiewicz <1067043@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dbdd7f2d_fd87a70e
UUID: e8f9973d_12505a30
Bytes: 4
Done

419
Wed Aug 17 16:47:07 2016 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dbdd7f2d_d2481263
Bytes: 109
Use comments to break the various stages in this main (getting arguments), setting up env, running, reporting

419
Mon Aug 22 23:02:34 2016 +0000
Author: Wojciech Staszkiewicz <1067043@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dbdd7f2d_d2481263
UUID: c89e9321_82a3dea6
Bytes: 4
Done

430
Tue Aug 16 22:30:04 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dbdd7f2d_dddcab40
Bytes: 84
too hardcoded

also there should be an option to use libartd.so instead of libart.so

430
Mon Aug 22 23:02:34 2016 +0000
Author: Wojciech Staszkiewicz <1067043@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dbdd7f2d_dddcab40
UUID: c89e9321_c2d6c61b
Bytes: 4
Done

432:6-432:12
Fri Aug 19 23:16:24 2016 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c89e9321_7fb2eb4a
Bytes: 201
also, it is a bit unfriendly to construct the host path to dalvik from the cwd, which means we always need to start this from top level; using os.environ.get('ANDROID_BUILD_TOP') seems a bit friendlier

432:6-432:12
Mon Aug 22 23:02:34 2016 +0000
Author: Wojciech Staszkiewicz <1067043@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: c89e9321_7fb2eb4a
UUID: c89e9321_052ef8f4
Bytes: 4
Done

435
Tue Aug 16 22:30:04 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dbdd7f2d_7dc39758
Bytes: 45
should be able to run dalvikvm{32,64} as well

435
Mon Aug 22 23:02:34 2016 +0000
Author: Wojciech Staszkiewicz <1067043@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dbdd7f2d_7dc39758
UUID: c89e9321_62b7b2eb
Bytes: 4
Done

