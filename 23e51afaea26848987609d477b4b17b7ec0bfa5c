Revision: 23e51afaea26848987609d477b4b17b7ec0bfa5c
Patch-set: 1
File: compiler/optimizing/nodes.h

2615:21-2615:40
Tue Nov 10 18:00:39 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 96865a95_800a36fb
Bytes: 119
How about making this Evaluate(NullConstant, NullConstant) with ATTRIBUTE_UNUSED on both nulls to  stay with the theme.

2615:21-2615:40
Tue Nov 10 18:22:29 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 96865a95_800a36fb
UUID: 56278298_46ba128d
Bytes: 111
Done.

That's how I started, it just felt a bit wasteful. But I guess the performance impact should be minimal.

File: test/442-checker-constant-folding/src/Main.java

677:0-677:44
Tue Nov 10 18:00:39 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 96865a95_20032aec
Bytes: 212
This looks like something Jack might optimize out (we're still using dx for Checker tests). Could you acquire the nulls through an inlined method and test the later constant folding? That seems more future-proof.

677:0-677:44
Tue Nov 10 18:22:29 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 96865a95_20032aec
UUID: 96865a95_e00f8207
Bytes: 81
Done.

But if jack optimizes this, why wouldn't it also do some trivial inlining?

