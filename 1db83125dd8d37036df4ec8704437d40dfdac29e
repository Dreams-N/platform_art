Revision: 1db83125dd8d37036df4ec8704437d40dfdac29e
Patch-set: 4
File: compiler/dex/quick/gen_common.cc

1671:100-1671:109
Tue Dec 23 05:32:14 2014 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 019678c9_413e76fc
Bytes: 10
Long line.

1970:100-1970:111
Tue Dec 23 05:32:14 2014 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 019678c9_613b720b
Bytes: 5
Same.

File: compiler/dex/quick/mips64/README.mips64

1:0-1:50
Tue Dec 23 05:32:14 2014 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a1d04c89_1165ceb5
Bytes: 35
Please don't just copy old files...

File: compiler/dex/quick/mips64/assemble_mips64.cc

2:17-2:21
Tue Dec 23 05:32:14 2014 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a1d04c89_71724a81
Bytes: 4
2014

File: compiler/dex/quick/mips64/codegen_mips64.h

2:17-2:21
Tue Dec 23 05:32:14 2014 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 21729c91_b4f780eb
Bytes: 4
2014

File: compiler/dex/quick/mips64/fp_mips64.cc

2:17-2:21
Tue Dec 23 05:32:14 2014 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 019678c9_81387e0e
Bytes: 4
2014

File: compiler/dex/quick/mips64/int_mips64.cc

2:17-2:21
Tue Dec 23 05:32:14 2014 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a1d04c89_516f4693
Bytes: 4
2014

File: runtime/entrypoints/quick/quick_trampoline_entrypoints.cc

170:1-170:79
Sat Jan 03 00:47:16 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0e0225f8_7b4e5fbf
Bytes: 420
I seriously dislike this. Using zero forces you to use the horrible static_casts below.

Could you elaborate on two things?

1) What do you mean by "the register assignments [...] are interleaved?" Is there some more documentation somewhere? From the callee-save stub I don't recognize a mixing.

2) Why do you do this? This is making general code less readable, for *one* architecture and an internal save frame layout.

170
Tue Jan 06 00:58:24 2015 +0000
Author: Douglas Leung <1003299@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0e0225f8_7b4e5fbf
UUID: 8e445558_f29f263a
Bytes: 294
By "interleaved", I mean the register indexes are in sync with the argument stack slot number. That is, if first argument goes into A0, and the second argument is a FP, then it goes into F1. At the time, this was the fastest way to get it working without changing architecture independant code.

170
Tue Jan 06 19:33:46 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 8e445558_f29f263a
UUID: 2e4c498a_a7fde4c6
Bytes: 156
Can you explain why this was chosen? Why not a traditional setup using F0? This is Quick ABI, it doesn't have to follow native conventions if they are ugly.

1020:24-1020:55
Tue Dec 23 05:32:14 2014 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 019678c9_24ded870
Bytes: 61
That's not really the right name here. This is not multi-GPR.

1020
Tue Jan 06 00:58:24 2015 +0000
Author: Douglas Leung <1003299@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 019678c9_24ded870
UUID: ae3f59b4_73321a94
Bytes: 182
The name was taken from the original implementation. All other architectures only required one flag for both GPR and FPR, while Mips64 required one flag for GPR and one flag for FPR.

1104:10-1104:38
Tue Jan 06 19:33:46 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2e4c498a_07539830
Bytes: 74
This is not meaningful here, the right side captures everything necessary.

1106:8-1106:72
Tue Jan 06 19:33:46 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6e52c124_09e96d3d
Bytes: 61
I'm a bit surprised that compiles without warnings or errors.

