Revision: 4df0a63a62d84f06cb4d445a814e8b55d5b2af2e
Patch-set: 2
File: compiler/optimizing/nodes.cc

759:6-760:63
Thu May 07 17:14:51 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ad24d1ad_1642a2fe
Bytes: 85
I would remove (and even forbid) this case, as we do not allow it in code generators.

772:8-772:23
Thu May 07 17:14:51 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2d62a1ee_f29a7ee9
Bytes: 139
I think we should probably abort in default case (this one and the others below), as we do not allow these patterns in the code generators.

772:8-772:23
Thu May 07 17:38:00 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2d62a1ee_f29a7ee9
UUID: 4d36f5df_bb529b37
Bytes: 312
Could we ever get (int) (IntConstant)?  Just asking as I would need to explicitly allow that case.

Since the function (based on the Arith ones) just returns nullptr if there is nothing that can be done, the caller needs to be able to handle a nullptr. Therefore I think it is harmless to 'not abort'.  Comments?

772:8-772:23
Fri May 08 14:27:11 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 4d36f5df_bb529b37
UUID: cd290587_62a91ede
Bytes: 248
Alright; let's return nullptr in the default case.

As for

  (int) int_value

and similar cases, they should already be addressed by art::InstructionSimplifierVisitor::VisitTypeConversion; so it should be fine to return nullptr in those cases too.

777:6-782:66
Thu May 07 17:14:51 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: cd290587_178cde87
Bytes: 121
Likewise, I would forbid these cases (as well as the missing kPrimChar case), as we do not allow them in code generators.

777:6-782:66
Thu May 07 17:38:00 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: cd290587_178cde87
UUID: 4d36f5df_9b4fd791
Bytes: 4
Done

796:12-796:17
Thu May 07 17:14:51 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: cd290587_3780fa45
Bytes: 37
Nit: std::isnan (and likewise below).

798:21-798:28
Thu May 07 17:14:51 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: cd290587_9797ae90
Bytes: 11
kPrimIntMax

798:21-798:28
Thu May 07 17:38:00 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: cd290587_9797ae90
UUID: 0d407d41_2a853356
Bytes: 4
Done

799:39-799:46
Thu May 07 17:14:51 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ad24d1ad_f67f1625
Bytes: 11
kPrimIntMax

799:39-799:46
Thu May 07 17:38:00 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ad24d1ad_f67f1625
UUID: 4d36f5df_7bae739a
Bytes: 4
Done

804:21-804:29
Thu May 07 17:14:51 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ad24d1ad_d67c1a33
Bytes: 12
kPrimLongMax

804:21-804:29
Thu May 07 17:38:00 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ad24d1ad_d67c1a33
UUID: 2d39c1d0_170f3cb7
Bytes: 4
Done

805:40-805:48
Thu May 07 17:14:51 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2d62a1ee_72a7ae36
Bytes: 12
kPrimLongMax

805:40-805:48
Thu May 07 17:38:00 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2d62a1ee_72a7ae36
UUID: 4d36f5df_5bb3affe
Bytes: 4
Done

818:21-818:28
Thu May 07 17:14:51 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2d62a1ee_d2977ac1
Bytes: 11
kPrimIntMax

818:21-818:28
Thu May 07 17:38:00 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2d62a1ee_d2977ac1
UUID: 4d36f5df_3bb8ebd6
Bytes: 4
Done

819:39-819:46
Thu May 07 17:14:51 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ad24d1ad_968692ad
Bytes: 11
kPrimIntMax

819:39-819:46
Thu May 07 17:38:00 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ad24d1ad_968692ad
UUID: 0d407d41_0a6a6f18
Bytes: 4
Done

824:21-824:29
Thu May 07 17:14:51 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ad24d1ad_565a6ad6
Bytes: 12
kPrimLongMax

824:21-824:29
Thu May 07 17:38:00 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ad24d1ad_565a6ad6
UUID: 2d39c1d0_f71398dd
Bytes: 4
Done

825:40-825:48
Thu May 07 17:14:51 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2d62a1ee_52acaa16
Bytes: 12
kPrimLongMax

825:40-825:48
Thu May 07 17:38:00 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2d62a1ee_52acaa16
UUID: 4d36f5df_1bbd27c7
Bytes: 4
Done

File: compiler/optimizing/nodes.h

2873:70-2873:74
Thu May 07 17:14:51 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2d62a1ee_0c4297fe
Bytes: 7
nullptr

File: test/442-checker-constant-folding/src/Main.java

413:22-413:33
Thu May 07 17:14:51 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ad24d1ad_902d7a3f
Bytes: 62
Maybe use a shorter name (Conv?) not to break the indentation?

413:22-413:33
Thu May 07 17:38:00 2015 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ad24d1ad_902d7a3f
UUID: 2d39c1d0_d71094d3
Bytes: 4
Done

