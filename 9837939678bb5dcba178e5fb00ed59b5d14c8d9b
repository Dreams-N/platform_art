Revision: 9837939678bb5dcba178e5fb00ed59b5d14c8d9b
Patch-set: 2
File: runtime/class_linker-inl.h

41:79-41:92
Tue Feb 25 09:11:53 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dc0199f4_9b424b28
Bytes: 62
Did you consider adding a field in Class* for the array class?

41:79-41:92
Wed Feb 26 06:12:26 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dc0199f4_9b424b28
UUID: 1cf89137_8e32f9ce
Bytes: 101
Yes, in general the meta-data needs to be on a diet - unfortunately its been getting fat on 64bit :-(

43:16-43:22
Tue Feb 25 09:11:53 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9c156131_391b4f5b
Bytes: 40
the cached the array -> the cached array

43:16-43:22
Wed Feb 26 06:12:26 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 9c156131_391b4f5b
UUID: 1cf89137_6e37adc0
Bytes: 4
Done

File: runtime/debugger.cc

304:2-304:3
Tue Feb 25 09:11:53 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9c156131_b92e3f72
Bytes: 18
Why the new block?

304:2-304:3
Wed Feb 26 06:12:26 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 9c156131_b92e3f72
UUID: 1cf89137_2e49a54f
Bytes: 312
thread_class is a reference into the Java heap, I don't want its lifetime to persist as it will go stale if we take a safepoint. The scoping makes this explicit. Other tools are the Start/End no thread suspension, Sirts, etc. While the scoping is ugly, not being able to eye-ball moving collector bugs is uglier.

304:2-304:3
Wed Feb 26 09:33:06 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1cf89137_2e49a54f
UUID: dc0199f4_e1c5224c
Bytes: 193
Do we have a stack allocated object that would ensure there is no GC in that block, just in debug mode? That would make what you write explicit and avoid anyone refactoring introducing the bug.

304:2-304:3
Wed Feb 26 16:44:54 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dc0199f4_e1c5224c
UUID: 5c44c956_15ff34d2
Bytes: 263
We should have one but don't. Usually the places we assert are already in a stack allocated item that takes on the role. I'd be happy for a stack allocated class to be created, its tough to come up with a good name, and see it used in places like line 1691 below.

310:2-310:3
Tue Feb 25 09:11:53 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7c0a6d15_b8f759a4
Bytes: 5
ditto

317:2-317:3
Tue Feb 25 09:11:53 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9c156131_992b7b62
Bytes: 5
ditto

File: runtime/mirror/array.cc

97:20-97:21
Tue Feb 25 09:11:53 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dc0199f4_5be843d3
Bytes: 91
This seems new. Were we not having the correct behavior before? Do we have a test for this?

97:20-97:21
Wed Feb 26 06:12:26 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dc0199f4_5be843d3
UUID: 5c44c956_0f0a85b6
Bytes: 176
Its buried in the std::string constructor details. The old code would create an initial descriptor string of num_dimensions * "[".
There are multi-dimensional array unit tests.

