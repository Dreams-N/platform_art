Revision: d662351975526cfd5ff8070c83359594c8deea3d
Patch-set: 1
File: /COMMIT_MSG

7:52-7:58
Tue Mar 22 13:51:15 2016 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: fc14e289_4c71da1b
Bytes: 10
x86/x86_64

File: compiler/optimizing/code_generator_x86.cc

50:22-50:47
Thu Mar 24 09:24:28 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3c5f5acd_46d1f219
Bytes: 27
Is that described anywhere?

5357:8-5358:41
Tue Mar 22 13:50:34 2016 +0000
Author: Mark P Mendell <1036869@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: fc14e289_ac820e28
Bytes: 27
Combine into one else if???

5357:8-5358:41
Fri Sep 09 15:26:55 2016 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: fc14e289_ac820e28
UUID: 766bcf9b_877de4bc
Bytes: 195
an elseif is not possible, due to following code.
but I agree this reads very misleading and can be made more clear if you put a clarifying comment in a new line after the else, but before the if

5360:25-5360:74
Thu Mar 24 10:03:20 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3c5f5acd_06fd3a7f
Bytes: 27
How can you guarantee that?

5360:25-5360:74
Thu Mar 24 11:03:15 2016 +0000
Author: Chunlei Sang <1061369@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3c5f5acd_06fd3a7f
UUID: fc14e289_430fd281
Bytes: 790
is_gc_marking is set and reset only at safepoint. If there is no safepoint between the two heap references (immediately after is_gc_marking test), we can say the two references are up to date (marked) with guard of !is_gc_marking.

Actually there is only one potential risk among code sequence: !is_gc_marking, load, load, cmpl. It's null check. If null check does not pass, the whole code sequence will canceled together, and the two heap references load are discarded together. We still can say the two load without read barrier are safe. right ?

The inexact !is_gc_marking guard has potential performance risk, because this guard is coarse grain, and always take slow path when concurrent marking.

If the exact baker's read barrier has been implemented, this patch should be abandoned.

File: compiler/optimizing/code_generator_x86_64.cc

4858
Fri Sep 09 15:26:55 2016 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 766bcf9b_a78ae8c2
Bytes: 91
same suggestion here, but an else comment before the if, so that the flow is easier to read

