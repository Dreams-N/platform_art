Revision: a9ce14b74ebbf64d8a19d641667353ad95b682d4
Patch-set: 2
File: runtime/jni_internal_test.cc

1384
Fri Feb 13 17:57:48 2015 +0000
Author: Elliott Hughes <1003224@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 8b8d2cf5_800676c8
Bytes: 19
ReleaseStringChars?

1384
Mon Mar 23 15:38:00 2015 +0000
Author: Narayan Kamath <1014443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 8b8d2cf5_800676c8
UUID: c61c8421_7c821102
Bytes: 4
Done

File: runtime/utf.cc

88
Fri Feb 13 17:57:48 2015 +0000
Author: Elliott Hughes <1003224@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 4b8094c4_5696f435
Bytes: 34
ignore? any security implications?

88
Fri Feb 13 18:10:42 2015 +0000
Author: Narayan Kamath <1014443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 4b8094c4_5696f435
UUID: 2b7d20a0_55010cb0
Bytes: 143
yes, i have misgivings about this change. the other change to loosen restrictions on what we accept seems much safer. this one i'm not so sure.

88
Mon Mar 23 15:38:00 2015 +0000
Author: Narayan Kamath <1014443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2b7d20a0_55010cb0
UUID: c61c8421_9cf72da3
Bytes: 92
after a bit of thinking, i've decided to emit them as 3 byte sequences, like we did earlier.

172
Fri Feb 13 17:57:48 2015 +0000
Author: Elliott Hughes <1003224@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 4b8094c4_16907c34
Bytes: 19
java programmer :-P

172
Mon Mar 23 15:38:00 2015 +0000
Author: Narayan Kamath <1014443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 4b8094c4_16907c34
UUID: c61c8421_bcf2e9b2
Bytes: 4
Done

File: runtime/utf_test.cc

116
Fri Feb 13 17:57:48 2015 +0000
Author: Elliott Hughes <1003224@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 4b8094c4_567d944b
Bytes: 75
maybe order these backwards, since all other "eq" assertions are backwards?

116
Mon Mar 23 15:38:00 2015 +0000
Author: Narayan Kamath <1014443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 4b8094c4_567d944b
UUID: 66111809_56e612b0
Bytes: 207
hmm, i find that visually confusing since we're not directly comparing input to expected. we're comparing some transform of it to expected. as written, it's easy to visualise this as assert(input->transform)

