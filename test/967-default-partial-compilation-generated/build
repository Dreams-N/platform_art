#!/bin/bash
#
# Copyright 2015 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# make us exit on a failure
set -e

# We will be making more files than the ulimit is set to allow. Remove it temporarily.
OLD_ULIMIT=`ulimit -S`
ulimit -S unlimited

restore_ulimit() {
  ulimit -S "$OLD_ULIMIT"
}
trap 'restore_ulimit' ERR

USES_JAVA="false"
if [[ $@ == *"--jvm"* ]]; then
  USES_JAVA="true"
  mkdir -p classes
  SCRATCH_DIR=./classes
  BUILD_EXEC=./util-src/java-build.sh
  # We don't need to do anything else to get jvm to work so just run 'true' to finish up.
  FINISH_EXEC=/bin/true
elif [[ "$USE_JACK" == "true" ]]; then
  if $JACK -D jack.java.source.version=1.8 2>/dev/null; then
    USES_JAVA="true"
    mkdir -p jacks
    SCRATCH_DIR=./jacks
    BUILD_EXEC=./util-src/jack-build.sh
    FINISH_EXEC=./util-src/jack-finish.sh
  else
    echo "WARNING: Cannot use jack because it does not support JLS 1.8. Falling back to smali" >&2
  fi
fi


if [[ "$USES_JAVA" == "true" ]]; then
  # Build the Java files. We will put them in ./src. This directory will have the final version of
  # all classes once the generate_java.py program finishes.
  mkdir -p src
  ./util-src/generate_java.py $BUILD_EXEC $FINISH_EXEC ./src $SCRATCH_DIR ./expected.txt ./build_log
else
  mkdir -p ./smali
  # Generate the smali files and expected.txt or fail
  ./util-src/generate_smali.py ./smali ./expected.txt
  # Use the default build script
  ./default-build "$@" --experimental default-methods
fi

# Reset the ulimit back to its initial value
restore_ulimit
