Revision: 8aa0c866f396902bdd1942d58e009b79d6e50bde
Patch-set: 1
File: test/458-checker-instruction-simplification/src/Main.java

892
Mon Apr 20 15:48:30 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7048f2a0_fe0e9d36
Bytes: 238
Maybe leave

  // CHECK-DAG:     [[NotArg:z\d+]]    BooleanNot [ [[Arg]] ]

here and add a comment similar to the one in art::InstructionSimplifierVisitor::VisitBooleanNot about relying on the DCE for the removal of this dead instruction?

892
Mon Apr 20 15:55:11 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7048f2a0_fe0e9d36
UUID: 103a56f6_43ea58a6
Bytes: 252
I don't see much point in doing that. This tests the simplification and it is valid regardless of the dangling BoolNot. All it means is that if somebody changes InstSimpl to remove it, they'll have to come back and change the test. Do you see a reason?

892
Mon Apr 20 16:00:51 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 103a56f6_43ea58a6
UUID: 7048f2a0_fe25fda6
Bytes: 222
Yes, that's exactly the point: make the test break when the DCE simplification of NotArg is implemented, to help us remember to remove this CHECK-DAG clause and add a CHECK-NOT clause to ensure NotArg is gone after DCE. :)

