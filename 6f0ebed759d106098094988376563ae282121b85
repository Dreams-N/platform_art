Revision: 6f0ebed759d106098094988376563ae282121b85
Patch-set: 1
File: compiler/optimizing/nodes.cc

2150:20-2150:28
Tue Dec 01 15:29:12 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3b43d7e3_bdfc7f29
Bytes: 264
Not a bug but please consider using something else than a colon as a separator.

Checker does not interpret it in any special way, but nonetheless it would be nice to keep the format as a list of "attr:value" pairs. This will print "method_load_kind:unknown:1234".

2150:20-2150:28
Tue Dec 01 16:21:56 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3b43d7e3_bdfc7f29
UUID: db347b68_a50ea87a
Bytes: 4
Done

File: test/552-checker-sharpening/src/Main.java

83
Tue Dec 01 15:29:12 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3b43d7e3_7dffd71b
Bytes: 171
I'd suggest splitting this into two passes:

1) test that there is just one base (CHECK, CHECK-NOT)
2) test that the base is just before the If (CHECK base, CHECK-NEXT If)

83
Tue Dec 01 16:21:56 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3b43d7e3_7dffd71b
UUID: 1b5293ad_fcdc4998
Bytes: 48
Done. I didn't even know there's a "CHECK-NEXT".

90
Tue Dec 01 15:29:12 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7b0c6fc0_27a85af7
Bytes: 5
ditto

90
Tue Dec 01 16:21:56 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7b0c6fc0_27a85af7
UUID: 7b0c6fc0_a76c4aa0
Bytes: 4
Done

106
Tue Dec 01 15:29:12 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9b3e8348_2358547d
Bytes: 47
Any chance we could get a test with a loop too?

106
Tue Dec 01 16:21:56 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 9b3e8348_2358547d
UUID: db347b68_654e60bc
Bytes: 218
Looks a bit difficult. Do we want to rely on specific instruction ordering, such as

    CHECK:      ArrayLength
    CHECK-NEXT: X86ComputeBaseMethodAddress
    CHECK-NEXT: Goto

as a pre-header for a range-based loop?

106
Tue Dec 01 16:47:15 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: db347b68_654e60bc
UUID: fb4cdf15_1b81fb68
Bytes: 585
I'd suggest using a simple loop where you know that the body is just one block and showing that the base is not in it.

  xyz; // put something here to make B1 the pre-header
  while (true) {
    foo();
  }

and then you can check for:

  CHECK: Base
  CHECK: begin_block
  CHECK: Invoke

or even verify all the blocks:

  CHECK: begin_block  // entry block
  CHECK: begin_block  // pre-header
  CHECK: Base
  CHECK: begin_block  // loop body
  CHECK: Invoke
  CHECK-NOT: begin_block

We should just start printing the block number with each instruction. Would make things much easier.

