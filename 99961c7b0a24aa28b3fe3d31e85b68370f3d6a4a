Revision: 99961c7b0a24aa28b3fe3d31e85b68370f3d6a4a
Patch-set: 1
File: compiler/optimizing/code_generator.h

184
Wed Apr 06 10:50:32 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ee4c2816_5b40e332
Bytes: 223
This is quite ugly. I think we should instead strengthen the ownership of all slow paths, changing the SlowPathCode to DeletableArenaObject<> and the CodeGenerator::slow_paths_ to ArenaVector<std::unique_ptr<SlowPathCode>>.

184
Wed Apr 06 11:34:44 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ee4c2816_5b40e332
UUID: 0e525cad_dc34edda
Bytes: 262
Right.  If so, I guess we should also remove (or amend) the following comment before the definition of art::DeletableArenaObject in runtime/base/arena_object.h:

  // Currently this is used by the quick compiler for debug reference counting arena allocations.

?

184
Wed Apr 06 14:52:47 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0e525cad_dc34edda
UUID: 0e525cad_3cf391fc
Bytes: 11
Absolutely.

184
Thu Apr 07 12:35:39 2016 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0e525cad_dc34edda
UUID: 6e1af804_57f66c3e
Bytes: 62
Removed the 'quick' part of comment since it has been removed.

184
Thu Apr 07 12:35:39 2016 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ee4c2816_5b40e332
UUID: 6e1af804_b7f02843
Bytes: 5
Done.

File: compiler/optimizing/code_generator_arm64.cc

947
Wed Apr 06 10:50:32 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0e525cad_fc07693c
Bytes: 154
Try to change the block_labels_ to ArenaVector<vixl::Label> instead and circumvent the Codegenerator::CommonInitializeLabels<>(), doing a simple resize().

947
Thu Apr 07 12:35:39 2016 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0e525cad_fc07693c
UUID: 6e1af804_f70f8013
Bytes: 326
Using a vector does not compile because the copy constructor for Labels is disabled and we don't have a move constructor.

I am pushing a patch to VIXL internally to add a move constructor, which fixes the issue here. I'll add a TODO to use a vector here once it is available (in the soon to be released next version of VIXL).

947
Thu Apr 07 13:02:43 2016 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6e1af804_f70f8013
UUID: 4e31b481_d9bab7e4
Bytes: 192
I just realised that what I implemented would break the veneer pool. Allowing copying/moving labels is not as simple as a trivial move constructor, so it may not come in the next VIXL release.

947
Thu Apr 07 13:05:19 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 4e31b481_d9bab7e4
UUID: 6e1af804_da35c12d
Bytes: 71
What about ArenaDeque<> then? That should not require copy constructor.

947
Thu Apr 07 13:49:55 2016 +0000
Author: Alexandre Rames <1052304@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6e1af804_da35c12d
UUID: 6e1af804_9a18a9bf
Bytes: 209
I didn't use it because it does not provide access to the underlying storage. (Taking the address of the first element would be too hacky in my opinion.)

However I'll try using it and changing `GetLabelOf()`.

