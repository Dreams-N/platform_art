Revision: 812ca68a3be24dc768359a124de5ac049e1960c4
Patch-set: 12
File: runtime/debugger.cc

3222:6-3222:8
Wed Oct 01 13:08:10 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 70529c24_264c568c
Bytes: 99
We should describe both conditions. We can also split the if in 2 parts to differentiate the cases.

3222:6-3222:8
Fri Oct 03 17:53:33 2014 +0000
Author: Dániel Mihályi <1051274@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 70529c24_264c568c
UUID: d0bfc88a_52484aaa
Bytes: 4
Done

3222:46-3223:51
Wed Oct 01 13:08:10 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f083ecc2_020eea52
Bytes: 42
Why do we need this? Please add a comment.

3222:46-3223:51
Fri Oct 03 17:53:33 2014 +0000
Author: Dániel Mihályi <1051274@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f083ecc2_020eea52
UUID: d0bfc88a_724d4eb9
Bytes: 4
Done

3227:4-3227:78
Wed Oct 01 13:08:10 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 504f587e_e57e36a1
Bytes: 82
I find it vague. We should explain why we need this so it's obvious to the reader.

3227:4-3227:78
Fri Oct 03 17:53:33 2014 +0000
Author: Dániel Mihályi <1051274@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 504f587e_e57e36a1
UUID: 50c2f81e_b6116ec2
Bytes: 4
Done

3241:6-3241:80
Wed Oct 01 13:08:10 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f083ecc2_223e8ee4
Bytes: 74
Same comment than above: please add a comment to explain why we need this.

3241:6-3241:80
Fri Oct 03 17:53:33 2014 +0000
Author: Dániel Mihályi <1051274@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f083ecc2_223e8ee4
UUID: 50c2f81e_561e0ad3
Bytes: 4
Done

3263:6-3263:80
Wed Oct 01 13:08:10 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f083ecc2_4243926b
Bytes: 23
Same comment than above

3263:6-3263:80
Fri Oct 03 17:53:33 2014 +0000
Author: Dániel Mihályi <1051274@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f083ecc2_4243926b
UUID: 90b9d0ac_10740af9
Bytes: 4
Done

File: runtime/debugger.h

541:5-541:33
Wed Oct 01 13:08:10 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f0e76c92_08b94b50
Bytes: 196
We should comment each method to briefly describe what they do and why we need them (see my comments below). I propose a general comment here: "Forced interpreter checkers for single-step support"

541:5-541:33
Fri Oct 03 17:53:33 2014 +0000
Author: Dániel Mihályi <1051274@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f0e76c92_08b94b50
UUID: d0bfc88a_1242d288
Bytes: 4
Done

542:14-542:49
Wed Oct 01 13:08:10 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f0e76c92_28d40f7c
Bytes: 152
// Indicates whether we need to force the use of interpreter to invoke a method from the interpreter. This allows to single-step into the called method.

542:14-542:49
Fri Oct 03 17:53:33 2014 +0000
Author: Dániel Mihályi <1051274@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f0e76c92_28d40f7c
UUID: d0bfc88a_3247d699
Bytes: 4
Done

544:14-544:56
Wed Oct 01 13:08:10 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d0ec287c_e73e56b0
Bytes: 223
// Indicates whether we need to force the use of instrumentation entrypoint when calling a method through the resolution trampoline. This allows to deoptimize the stack for debugging when we returned from the called method.

544:14-544:56
Fri Oct 03 17:53:33 2014 +0000
Author: Dániel Mihályi <1051274@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d0ec287c_e73e56b0
UUID: 90b9d0ac_30790ef2
Bytes: 4
Done

546:14-546:48
Wed Oct 01 13:08:10 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7029bc84_119f4e6c
Bytes: 205
// Indicates whether we need to force the use of interpreter when returning from the interpreter into the runtime. This allows to deoptimize the stack and continue execution with interpreter for debugging.

546:14-546:48
Fri Oct 03 17:53:33 2014 +0000
Author: Dániel Mihályi <1051274@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7029bc84_119f4e6c
UUID: 90b9d0ac_d08d1290
Bytes: 4
Done

File: runtime/entrypoints/quick/quick_trampoline_entrypoints.cc

821:4-825:40
Wed Oct 01 13:08:10 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f0e76c92_c82b63ec
Bytes: 460
I'm going back to this to be sure we're on the same page. Does your change needs the 'called' method in the stack above the class initializer? If not, we should remove it.

The interpreter does this but it's a bug: we push the 'called' frame too early, before doing class initialization (this is being fixed by https://android-review.googlesource.com/92662). So I don't think reproducing the bug here is correct unless it's absolutely required for this change.

821:4-825:40
Fri Oct 03 17:53:33 2014 +0000
Author: Dániel Mihályi <1051274@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f0e76c92_c82b63ec
UUID: 50c2f81e_7623061a
Bytes: 69
I have tested it with this hack removed and your patch and it worked.

838:8-838:45
Wed Oct 01 13:08:10 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 504f587e_c5a9fa9e
Bytes: 195
Please add a comment to explain why we return the intepreter entrypoint. IIUC this is needed when we we return from the <clinit> with a single-step and should suspend in the called method, right?

838:8-838:45
Fri Oct 03 17:53:33 2014 +0000
Author: Dániel Mihályi <1051274@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 504f587e_c5a9fa9e
UUID: d0bfc88a_9235621c
Bytes: 4
Done

840:8-840:51
Wed Oct 01 13:08:10 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 504f587e_259a0e7c
Bytes: 152
A comment here is worth too. IIUC we need this to deoptimize the stack when we add a breakpoint in the 'caller' causing the class initialization, right?

840:8-840:51
Fri Oct 03 17:53:33 2014 +0000
Author: Dániel Mihályi <1051274@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 504f587e_259a0e7c
UUID: 50c2f81e_161882e1
Bytes: 4
Done

846:8-846:45
Wed Oct 01 13:08:10 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 70529c24_c66222f9
Bytes: 107
I believe this is the same explanation than when the class is initialized, right? Please add a comment too.

846:8-846:45
Fri Oct 03 17:53:33 2014 +0000
Author: Dániel Mihályi <1051274@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 70529c24_c66222f9
UUID: 90b9d0ac_f08a9675
Bytes: 4
Done

File: runtime/interpreter/interpreter_common.cc

670:7-670:47
Wed Oct 01 13:08:10 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f0e76c92_88c55bcc
Bytes: 136
Please add to the comment this is only needed for debugging. I'd say "Force the use of interpreter when it is required by the debugger".

670:7-670:47
Fri Oct 03 17:53:33 2014 +0000
Author: Dániel Mihályi <1051274@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f0e76c92_88c55bcc
UUID: d0bfc88a_7dd43f4f
Bytes: 4
Done

File: runtime/mirror/art_method-inl.h

401:2-403:3
Wed Oct 01 13:08:10 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d0ec287c_e7177636
Bytes: 80
Is it related to this change? If not, I'd prefer you move that to a separate CL.

