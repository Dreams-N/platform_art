Revision: 35dbe0a7c77f2aab5fca28b517f5ab0001829cd2
Patch-set: 2
File: runtime/arch/x86/quick_entrypoints_x86.S

816:0-819:79
Tue Apr 12 09:47:35 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6b24aaf3_c7f49e99
Bytes: 41
Please copy this comment to the new code.

915:0-916:88
Tue Apr 12 09:47:35 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6b24aaf3_872c66dd
Bytes: 56
Is using ebx better than addressing with the fs: prefix?

917:0-918:83
Tue Apr 12 09:47:35 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6b24aaf3_a7488aad
Bytes: 317
Potential overflow. I would prefer `end - pos <= size` instead of `pos + size <= end`. Note that, assuming correct alignment of `end - pos`, you can do that comparison before rounding up the `size`.

[Comment copied from https://android-review.googlesource.com/#/c/187537/1/runtime/arch/arm/quick_entrypoints_arm.S .]

965:4-965:25
Fri Apr 08 19:07:54 2016 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2e22c08a_4e478721
Bytes: 84
References in dex cache GcRoots aren't currently poisoned. We do not need this line.

986:4-986:25
Fri Apr 08 19:07:54 2016 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2e22c08a_ae8abb9b
Bytes: 84
References in dex cache GcRoots aren't currently poisoned. We do not need this line.

998
Fri Apr 08 19:07:54 2016 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2e22c08a_ee6d938f
Bytes: 73
The sp isn't aligned by 16 here as we have five PUSH'es up to this point?

998
Tue Apr 12 09:47:35 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2e22c08a_ee6d938f
UUID: 6b24aaf3_27877a0a
Bytes: 107
If I remember correctly, the x86 native ABI requires only 8-byte alignment. (5xPUSH + return PC gives 24B.)

998
Tue Apr 12 17:42:18 2016 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6b24aaf3_27877a0a
UUID: ab9dc271_1436fade
Bytes: 103
I think I heard that we align sp by 16 bytes on all architectures. Also SSE requires 16-byte alignment.

998
Tue Apr 12 18:07:14 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ab9dc271_1436fade
UUID: 6b24aaf3_e7f8c2d6
Bytes: 174
Our "compiled dex bytecode ABI" requires 16B alignment but that's different from the native ABI and this is calling to C++, not compiled dex bytecode. I don't know about SSE.

998
Tue Apr 12 21:52:07 2016 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6b24aaf3_e7f8c2d6
UUID: ab9dc271_a07fa436
Bytes: 51
I hear we also use 16-byte stack alignment for C++.

999:4-999:11
Fri Apr 08 19:07:54 2016 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2e22c08a_8e297f38
Bytes: 210
I don't know if POP is any better.

How about "addl LITERAL(4), %esp"?

I think addl is clearer as edx is overwritten in the next line and may be faster as it avoids a memory access (though likely a cache hit).

