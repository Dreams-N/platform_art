Revision: b3631c4dd00d890f52d159c9c56f8f0b4c006161
Patch-set: 5
File: compiler/optimizing/inliner.cc

536:7-536:9
Tue Nov 03 18:55:10 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 568142c7_f6c940d2
Bytes: 8
If -> It

536:7-536:9
Wed Nov 04 14:20:05 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 568142c7_f6c940d2
UUID: 963adaf4_20a46ac8
Bytes: 4
Done

537:76-538:31
Tue Nov 03 18:55:10 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 367ccea3_9801194a
Bytes: 70
Not sure I understand. We lose the non-null information by doing this.

537:76-538:31
Wed Nov 04 14:20:05 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 367ccea3_9801194a
UUID: f675d6b9_735f8025
Bytes: 131
We don't. Null information is kept separately from reference type information. If we ever merge them then I'll need to update this.

553:0-562:61
Tue Nov 03 18:55:10 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 367ccea3_b8fe5585
Bytes: 156
How about setting the type first, and then if we realize the type has been refined, do the type propagation. That would avoid duplicating the code line 567.

553:0-562:61
Wed Nov 04 14:20:05 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 367ccea3_b8fe5585
UUID: 963adaf4_409fee75
Bytes: 4
Done

File: compiler/optimizing/reference_type_propagation.cc

119:42-119:81
Tue Nov 03 18:55:10 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 968f39ad_61e8d016
Bytes: 38
Add a comment why you can end up here.

119:42-119:81
Wed Nov 04 14:20:05 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 968f39ad_61e8d016
UUID: 763d66ed_bf3097c4
Bytes: 4
Done

