Revision: ff3fb861b61ab5682828df98d610c753100a7433
Patch-set: 5
File: compiler/dex/quick/x86/assemble_x86.cc

616:9-616:77
Tue Jul 08 15:20:02 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c4462542_e79699f5
Bytes: 173
this is somewhat annoying for the sake of one opcode, could we use a REX_W although this isn't what the manual defines? ie would the instruction decode ignore the REX W bit?

616:9-616:77
Tue Jul 08 16:46:39 2014 +0000
Author: Serguei I Katkov <1040038@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: c4462542_e79699f5
UUID: c498e5f7_cbfaa155
Bytes: 105
As I understand, REX_W will mean mosxd r64, r32 but not movsx r64, r8 as we want. So we cannot use REX_W.

File: compiler/dex/quick/x86/x86_lir.h

722:27-722:28
Tue Jul 08 15:20:02 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 84326dd1_b1c13f6b
Bytes: 34
Much easier to understand, thanks!

File: disassembler/disassembler_x86.cc

204
Tue Jul 08 15:20:02 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 84326dd1_51b3a326
Bytes: 53
// true when the opcode is dealing with byte operands

205:39-205:92
Tue Jul 08 15:20:02 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 643739c4_885b2aaf
Bytes: 98
true when the source operand is a byte register but the target register isn't  (ie movsxb/movzxb).

