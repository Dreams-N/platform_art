Revision: c5763e35e8a2d20a498b2e98be9421b3cf0da2ec
Patch-set: 3
File: compiler/optimizing/stack_map_stream.cc

137:0-137:55
Wed Jun 03 09:03:31 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 99a8345d_8a752fac
Bytes: 19
Indentation is off.

File: runtime/stack_map.cc

32:0-32:102
Wed Jun 03 09:03:31 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b9a97860_ba54f599
Bytes: 15
Nit: long line.

122:0-122:106
Wed Jun 03 09:03:31 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 99a8345d_b94ac3a2
Bytes: 6
Ditto.

189:0-189:57
Wed Jun 03 09:03:31 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d9ae2c65_20345609
Bytes: 19
Indentation is off.

File: runtime/stack_map.h

442:68-442:71
Wed Jun 03 09:03:31 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b9a97860_5ab14182
Bytes: 138
Nit: you use `enc' here and `encoding' in other places in this CL.  I think you should unify the naming, with a preference for the latter.

816:6-816:22
Wed Jun 03 09:03:31 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 99a8345d_ea4623d1
Bytes: 59
Maybe add a small comment about the role of this new class?

821:0-821:15
Wed Jun 03 09:03:31 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 99a8345d_eaa1432d
Bytes: 19
Indentation is off.

834:0-834:39
Wed Jun 03 09:03:31 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d9ae2c65_ecd71fb6
Bytes: 6
Ditto.

860:11-865:75
Wed Jun 03 09:03:31 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 99a8345d_8ada0f8e
Bytes: 59
Shouldn't the result of this computation be cached as well?

935:2-935:44
Wed Jun 03 09:03:31 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d9ae2c65_004b5a7b
Bytes: 177
Maybe document that this operation is "expensive", so as to encourage people to reuse an existing StackMapEncoding object, instead of getting a new one from CodeInfo every time?

937:0-937:24
Wed Jun 03 09:03:31 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b9a97860_abc58d9c
Bytes: 6
Ditto.

968:0-970:3
Wed Jun 03 09:03:31 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b9a97860_0bfe21e4
Bytes: 201
Is this still useful, given that StackMap::GetInlineDescriptorOffset relies on StackMapEncoding::HasInlineInfo (instead of CodeInfo::HasInlineInfo), which doesn't use CodeInfo::kHasInlineInfoBitOffset?

1027:0-1027:9
Wed Jun 03 09:03:31 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 99a8345d_cabec721
Bytes: 47
Use a 4-space instead of a 5-space indentation.

1110:0-1110:90
Wed Jun 03 09:03:31 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b9a97860_2b03dd7c
Bytes: 9
Likewise?

