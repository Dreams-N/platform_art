Revision: df040508b3c81aec117b07d632e36cf429307307
Patch-set: 1
File: compiler/utils/assembler_test.h

204:49-210:53
Thu Sep 24 04:01:23 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2e2e2591_0e672bef
Bytes: 12
Indentation.

204:49-210:53
Thu Sep 24 22:01:33 2015 +0000
Author: Chris Larsen <1071873@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2e2e2591_0e672bef
UUID: 6e4d7d85_6b0e95b3
Bytes: 4
Done

217:50-222:53
Thu Sep 24 04:01:23 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2e470569_298b09e9
Bytes: 45
If you're here, can fix this indent, too. :-)

217:50-222:53
Thu Sep 24 22:01:33 2015 +0000
Author: Chris Larsen <1071873@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2e470569_298b09e9
UUID: 6e4d7d85_2b089da1
Bytes: 4
Done

432:4-433:46
Thu Sep 24 04:01:23 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2e470569_89c8bd36
Bytes: 111
Not sure how I feel about this. The problem with this is that test failures may not be easily reproduce-able...

432:4-433:46
Thu Sep 24 22:01:33 2015 +0000
Author: Chris Larsen <1071873@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2e470569_89c8bd36
UUID: ee616dea_52b26a1e
Bytes: 91
I can take it out or replace it.  Do you have something you would suggest as a replacement?

432:4-433:46
Thu Sep 24 22:14:43 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ee616dea_52b26a1e
UUID: 6e4d7d85_b9574764
Bytes: 490
I know the version above sucks. But I'd suggest for small lengths, just be exhaustive. Assembling with even just 100 immediates should not be too expensive, hopefully. (Even though your code is randomized, it may not be testing really well, with the few entries being pushed.)

(And we do have time, considering oatdump_test taking several minutes to dump images...)

For the larger bit lengths, I have no good idea. An actual prng (with a known seed) would at least make it reproduce-able.

432:4-433:46
Thu Sep 24 22:22:43 2015 +0000
Author: Chris Larsen <1071873@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6e4d7d85_b9574764
UUID: ee616dea_383915a1
Bytes: 335
I considered doing it exhaustively for a small number of bits, and then using log2(number of bit) samples, uniformly placed over the entire range, for large numbers of bits. Does this sound good to you? If so, where would you draw the line? I'm thinking maybe use exhaustive testing for 8 bits or less, and evenly spaced for more bits.

432:4-433:46
Thu Sep 24 22:24:41 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ee616dea_383915a1
UUID: 0e5fa128_f98ee324
Bytes: 68
Sounds reasonable to me. Just see how that works out test-time wise.

432:4-433:46
Thu Sep 24 22:27:15 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0e5fa128_f98ee324
UUID: 2e470569_b232be86
Bytes: 179
Actually, one note: don't do it completely uniform. Make sure that values close to zero are always included. A few architectures have some special encodings for things like one...

448:6-450:72
Thu Sep 24 04:01:23 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2e470569_698101c7
Bytes: 142
It's OK to write it that way, though a notation more directly expressing -2^(n-1)...2^(n-1)-1 may be more readable. I'll leave it up to you...

448:6-450:72
Thu Sep 24 22:01:33 2015 +0000
Author: Chris Larsen <1071873@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2e470569_698101c7
UUID: 8e52b121_6cd46f26
Bytes: 43
Do you have a format you'd like to suggest?

448:6-450:72
Thu Sep 24 22:14:43 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 8e52b121_6cd46f26
UUID: 4e4c398b_586f2d39
Bytes: 19
Nah, just leave it.

538:0-538:0
Thu Oct 01 16:57:47 2015 +0000
Author: Goran Jakovljevic <1067943@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f597825c_c2e98225
Bytes: 18
Delete empty line.

538:0-538:0
Thu Oct 01 20:37:00 2015 +0000
Author: Chris Larsen <1071873@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f597825c_c2e98225
UUID: 953c86f3_f9da3788
Bytes: 4
Done

File: compiler/utils/mips64/assembler_mips64_test.cc

310:0-312:16
Thu Sep 24 04:01:23 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6e4d7d85_6879fb59
Bytes: 54
Remove, we don't like not immediately useful comments.

310:0-312:16
Thu Sep 24 22:01:33 2015 +0000
Author: Chris Larsen <1071873@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6e4d7d85_6879fb59
UUID: 6e4d7d85_eb5de587
Bytes: 4
Done

File: runtime/arch/instruction_set_features_test.cc

95:40-95:46
Thu Sep 24 04:01:23 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2e470569_e994d103
Bytes: 95
If that's the case, be more precise in the condition. You're also excluding mips32, aren't you?

95:40-95:46
Thu Sep 24 22:01:33 2015 +0000
Author: Chris Larsen <1071873@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2e470569_e994d103
UUID: ce582944_9c4d9560
Bytes: 57
Change reverted. This works with current version of AOSP.

File: runtime/arch/mips/instruction_set_features_mips_test.cc

23:0-28:61
Thu Sep 24 04:01:23 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0e5fa128_ed8ce1be
Bytes: 137
?

This isn't interacting with kernels or whatever. If you have a failure here, the basic structure seems broken. Am I missing something?

23:0-28:61
Thu Sep 24 22:01:33 2015 +0000
Author: Chris Larsen <1071873@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0e5fa128_ed8ce1be
UUID: 2e470569_72dd66d2
Bytes: 57
Change reverted. This works with current version of AOSP.

