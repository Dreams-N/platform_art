Revision: 348da4302f6e15a62703078bf00e8275e8167266
Patch-set: 2
File: /COMMIT_MSG

9:24-9:34
Tue Oct 20 17:34:22 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b940aed4_ffc19f8b
Bytes: 11
propagation

9:40-9:53
Tue Oct 20 17:34:22 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 19345a65_e55b50e2
Bytes: 15
unconditionally

9:13-9:16
Tue Oct 20 17:34:22 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 59fc12c5_84f946ee
Bytes: 3
run

9:13-9:16
Tue Oct 20 19:12:23 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 59fc12c5_84f946ee
UUID: 19345a65_259cd8db
Bytes: 4
Done

9:40-9:53
Tue Oct 20 19:12:23 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 19345a65_e55b50e2
UUID: f936a66e_a10bfeaa
Bytes: 4
Done

9:24-9:34
Tue Oct 20 19:12:23 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b940aed4_ffc19f8b
UUID: 595172a7_ffcbdbda
Bytes: 4
Done

File: compiler/optimizing/inliner.cc

534:8-534:19
Tue Oct 20 14:23:25 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 595892e5_04645648
Bytes: 130
I'll do some experiments to see if it worth doing this at every level. For now it's good enough do it just at the outermost level.

534:8-534:19
Tue Oct 20 17:34:22 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 595892e5_04645648
UUID: d93d624e_2308546a
Bytes: 32
Maybe mention this in a comment?

534:8-534:19
Tue Oct 20 19:12:23 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d93d624e_2308546a
UUID: d91642dc_fb820bff
Bytes: 124
obsolete. after thinking more about this, the graphs should be very small and running the propagation again should be cheap.

535:31-535:40
Tue Oct 20 14:23:25 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d93d624e_20b28a35
Bytes: 278
I weighted if I should maintain the returned value in the inliner and run the type propagation from the top level (optimizing_compiler.cc) and I think the current form is better.Holding instructions around, between passes, would be error prone and mess up the current structure.

File: compiler/optimizing/reference_type_propagation.cc

96:4-96:43
Tue Oct 20 17:34:22 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f936a66e_e1ea6615
Bytes: 160
Initialize `run_with_initial_worklist_root_` in the constructor's initialization list instead with:

  run_with_initial_worklist_root_(worklist_root != nullptr)

96:4-96:43
Tue Oct 20 19:12:23 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f936a66e_e1ea6615
UUID: 19345a65_859fe4d1
Bytes: 98
I find it clearer like this since related things stay together (adding dependents to the worklist)

File: compiler/optimizing/reference_type_propagation.h

38:59-38:68
Tue Oct 20 17:34:22 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f936a66e_214e0e00
Bytes: 10
propagates

38:59-38:68
Tue Oct 20 19:12:23 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f936a66e_214e0e00
UUID: 595172a7_dfc61fd4
Bytes: 4
Done

40:32-40:37
Tue Oct 20 17:34:22 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 19345a65_6570a056
Bytes: 1
a

40:32-40:37
Tue Oct 20 19:12:23 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 19345a65_6570a056
UUID: f936a66e_01174ace
Bytes: 4
Done

