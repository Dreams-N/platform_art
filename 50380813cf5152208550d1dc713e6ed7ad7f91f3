Revision: 50380813cf5152208550d1dc713e6ed7ad7f91f3
Patch-set: 8
File: compiler/driver/compiler_driver-inl.h

178:29-178:46
Fri Apr 24 13:56:06 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b088aa37_56a08a19
Bytes: 64
IsFastStaticMethod -> IsClassOfStaticMethodAvailableToReferrer ?

178:29-178:46
Fri Apr 24 15:17:32 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b088aa37_56a08a19
UUID: 90972654_c0c90ea9
Bytes: 4
Done

190:6-219:5
Fri Apr 24 13:56:06 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b088aa37_36abfe01
Bytes: 89
This looks very close if not indentical to code is IsFastStaticField. Can't you refactor?

190:6-219:5
Fri Apr 24 15:17:32 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b088aa37_36abfe01
UUID: 50984e8f_b67b603c
Bytes: 4
Done

File: compiler/driver/compiler_driver.h

283:5-283:50
Fri Apr 24 13:56:06 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 90972654_35aa12d5
Bytes: 9
Rephrase.

283:5-283:50
Fri Apr 24 15:17:32 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 90972654_35aa12d5
UUID: b088aa37_b69c4eb7
Bytes: 4
Done

File: compiler/optimizing/builder.cc

655
Fri Apr 24 13:56:06 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b088aa37_969912f9
Bytes: 10
extra line

655
Fri Apr 24 15:17:32 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b088aa37_969912f9
UUID: 50984e8f_969a9cea
Bytes: 4
Done

File: compiler/optimizing/builder.h

227:0-229:50
Fri Apr 24 13:56:06 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 50984e8f_f6f44856
Bytes: 103
This should be in a different CL. This CL is fixing a bug, you should make the optimization standalone.

227:0-229:50
Fri Apr 24 15:17:32 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 50984e8f_f6f44856
UUID: b088aa37_d699dac5
Bytes: 4
Done

File: compiler/optimizing/nodes.h

2218:0-2219:59
Fri Apr 24 13:56:06 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 90972654_b5b5222f
Bytes: 130
I don't understand this. If the clinit check is not required it should not be in the graph. The code generators should not see it.

2218:0-2219:59
Fri Apr 24 15:17:32 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 90972654_b5b5222f
UUID: b088aa37_d6747afa
Bytes: 228
My intention was to use this information (ClinitCheckRequirement::kNone) to avoid implicit clinit checks in the code generators when we know we can avoid them, but I don't know if we can bypass them.  I have removed the comment.

2220:19-2220:30
Fri Apr 24 13:56:06 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b088aa37_560b2aab
Bytes: 18
Drop 'declaring' ?

2220:19-2220:30
Fri Apr 24 15:17:32 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b088aa37_560b2aab
UUID: b088aa37_f6717607
Bytes: 4
Done

2251:25-2251:27
Fri Apr 24 13:56:06 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 50984e8f_760158be
Bytes: 7
as -> a

2251:25-2251:27
Fri Apr 24 15:17:32 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 50984e8f_760158be
UUID: 90972654_a0f322e9
Bytes: 4
Done

2259:23-2259:31
Fri Apr 24 13:56:06 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 50984e8f_56fe5432
Bytes: 8
explicit

2259:23-2259:31
Fri Apr 24 15:17:32 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 50984e8f_56fe5432
UUID: 90972654_c0f02edf
Bytes: 4
Done

File: compiler/optimizing/prepare_for_register_allocation.cc

96:10-96:14
Fri Apr 24 13:56:06 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 50984e8f_36fbd042
Bytes: 15
If the load ...

96:10-96:14
Fri Apr 24 15:17:32 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 50984e8f_36fbd042
UUID: b088aa37_3663fe40
Bytes: 4
Done

