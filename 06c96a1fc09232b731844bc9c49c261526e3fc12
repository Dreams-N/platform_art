Revision: 06c96a1fc09232b731844bc9c49c261526e3fc12
Patch-set: 8
File: compiler/optimizing/constant_folding.cc

60:10-61:52
Wed Mar 25 16:54:53 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 63002af0_41129690
Bytes: 216
Maybe introduce a helper similar to art::HBasicBlock::ReplaceAndRemoveInstructionWith (and also use it within the implementation of art::HBasicBlock::ReplaceAndRemoveInstructionWith)?
Ditto for similar changes below.

File: compiler/optimizing/constant_folding_test.cc

213:0-214:44
Wed Mar 25 16:54:53 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 63002af0_41417667
Bytes: 45
Out of curiosity, what motivated this change?

499:0-507:52
Wed Mar 25 16:54:53 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 23147232_3f8faf2e
Bytes: 9
Likewise?

File: compiler/optimizing/nodes.cc

326:29-326:60
Wed Mar 25 16:54:53 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 43116641_604c66a1
Bytes: 106
I guess the Arena allocator prevents any memory leak when we overwrite and existing (non-null) `constant`?

