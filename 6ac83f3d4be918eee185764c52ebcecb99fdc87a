Revision: 6ac83f3d4be918eee185764c52ebcecb99fdc87a
Patch-set: 6
File: /COMMIT_MSG

12
Thu Feb 13 21:42:12 2014 +0000
Author: Razvan A Lupusoru <1013855@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 8f9e016b_651b0e03
Bytes: 260
As far as I can tell from code inspection, the interpreter is used for debugging. So that must mean that we are no longer in the compiled native code when debugging. So what exactly is missing here? Namely, what is the "additional information" to make it work?

12
Fri Feb 14 07:44:41 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 8f9e016b_651b0e03
UUID: 8f9e016b_5db5fe62
Bytes: 109
If we deoptimize a method that has been inlined, the outer method its inlined into won't also be deoptimized.

12
Sun Feb 16 21:24:46 2014 +0000
Author: Razvan A Lupusoru <1013855@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 8f9e016b_5db5fe62
UUID: 2fd9956f_5da687d3
Bytes: 184
Makes sense. One initial way to get around this issue is to do full deoptimization on breakpoint events. Do you guys have partial deoptimization schemes in the works for the case here?

12
Tue Feb 18 01:58:00 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2fd9956f_5da687d3
UUID: 6f8b8d70_73a63ad4
Bytes: 55
There's no partial deoptimization support I'm aware of.

File: compiler/dex/bb_optimizations.cc

26:49-26:51
Fri Feb 14 07:44:41 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: afcbc564_736c9fdd
Bytes: 23
"* " here and elsewhere

File: compiler/dex/bb_optimizations.h

59:15-59:17
Fri Feb 14 07:44:41 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: afcbc564_936123e7
Bytes: 5
" : "

File: compiler/dex/local_value_numbering.cc

82:11-82:55
Wed Feb 26 14:12:09 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6f646d9a_e80f938b
Bytes: 149
Would be nice to use dedicated methods to test such flags. In my opinion, it's easier to read (and understand) something like "mir->IsInlinedPred()".

File: compiler/dex/mir_optimization.cc

899:8-899:37
Wed Feb 26 14:12:09 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dc0199f4_a425e8be
Bytes: 33
What's the purpose of this test ?

899:8-899:37
Wed Feb 26 14:18:12 2014 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dc0199f4_a425e8be
UUID: dc0199f4_04781c95
Bytes: 45
I forgot to remove this after some debugging.

File: compiler/dex/quick/dex_file_method_inliner.h

165:44-165:65
Wed Feb 26 14:12:09 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dc0199f4_84642cf9
Bytes: 71
Not sure this is correct as you use ReaderMutexLock inside this method.

165:44-165:65
Wed Feb 26 14:18:12 2014 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dc0199f4_84642cf9
UUID: 7c0a6d15_414cc892
Bytes: 28
SHARED_LOCK_FUNCTION(lock_)?

170:56-170:77
Wed Feb 26 14:12:09 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7c0a6d15_21ff94d2
Bytes: 9
Same here

175:42-175:63
Wed Feb 26 14:12:09 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9c156131_a2f3a40e
Bytes: 8
And here

408:0-408:28
Fri Feb 14 07:44:41 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ef13fd9e_306cbddc
Bytes: 29
DEFAULT_MUTEX_ACQUIRED_AFTER;

