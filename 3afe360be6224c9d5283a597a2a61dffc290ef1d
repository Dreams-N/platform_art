Revision: 3afe360be6224c9d5283a597a2a61dffc290ef1d
Patch-set: 1
File: compiler/dex/quick/arm64/target_arm64.cc

1234:40-1234:82
Thu Nov 27 18:23:32 2014 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5f17698b_88375702
Bytes: 99
I'm rewriting that. These opcodes should not generate suspend checks in leaf methods when I'm done.

1234
Fri Nov 28 15:59:49 2014 +0000
Author: Matteo Franchin <1037505@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5f17698b_88375702
UUID: ffcbbd63_6273f611
Bytes: 441
This is good news. I noticed that if-then-else blocks are often compiled as DEX code containing backward branches (despite there are no "real" backward jumps in the original Java code). This means that leaf methods containing one or more if-then-else statements contain multiple suspend checks and are not recognised as leaf methods. It will be interesting to see how many more methods are detected as true-leaves once your work is finished.

