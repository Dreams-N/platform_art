Revision: 0b6bbb16098f33419faa10c86362ce3648bdf9e0
Patch-set: 16
File: runtime/art_method.h

497:22-497:23
Tue Mar 15 12:30:02 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b76525c6_60ad2662
Bytes: 5
const

497:22-497:23
Tue Mar 15 14:56:15 2016 +0000
Author: Bill Buzbee <1001578@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b76525c6_60ad2662
UUID: d7a61927_bfb0e807
Bytes: 4
Done

545:73-545:83
Tue Mar 15 12:30:02 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b76525c6_80aa3a49
Bytes: 21
But explain volatile?

545:73-545:83
Tue Mar 15 14:56:15 2016 +0000
Author: Bill Buzbee <1001578@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b76525c6_80aa3a49
UUID: d7a61927_1fbc9ce1
Bytes: 4
Done

File: runtime/interpreter/mterp/arm/footer.S

123:0-124:30
Tue Mar 15 12:30:02 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b76525c6_c0da72ea
Bytes: 135
Yeah, sorry if it looks so complicated. If you think it's too much, we can discuss alternatives.

But cool stuff you're making it work!

123:0-124:30
Tue Mar 15 14:56:15 2016 +0000
Author: Bill Buzbee <1001578@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b76525c6_c0da72ea
UUID: d7a61927_1fddbcfa
Bytes: 22
Nah, I'm fine with it.

File: runtime/interpreter/mterp/arm/op_goto.S

9:12-9:41
Tue Mar 15 12:30:02 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b76525c6_e08216c2
Bytes: 80
Actually somehow nice code cleanup :). Let's measure the performance hit though.

9:12-9:41
Tue Mar 15 14:56:15 2016 +0000
Author: Bill Buzbee <1001578@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b76525c6_e08216c2
UUID: d7a61927_5fb62401
Bytes: 513
Actually, may not have much of a choice here.  Mterp relies on fixed size buckets.  Dalvik used 64-byte buckets, but to make development easier I doubled that to 128.  But, but I do intend to go back to 64.  That's generally large enough to handle the fast paths of most instructions, but won't be for branches now.  We'd have to have a direct branch to the overflow region anyway, so I thought I'd just do it up front and share the common handling.  Still, I can and will see if it makes a measurable difference.

File: runtime/interpreter/mterp/arm64/zcmp.S

10:40-10:43
Mon Mar 14 21:33:04 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b76525c6_e03a161d
Bytes: 17
Extra whitespace.

10:40-10:43
Tue Mar 15 14:56:15 2016 +0000
Author: Bill Buzbee <1001578@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b76525c6_e03a161d
UUID: d7a61927_3fbb58ea
Bytes: 4
Done

File: runtime/interpreter/mterp/mterp.cc

660:16-660:32
Tue Mar 15 12:30:02 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b76525c6_0088eae0
Bytes: 107
Maybe call this MterpMaybeDoOnStackReplacement? Otherwise it might be confusing given the comment line 665.

660:16-660:32
Tue Mar 15 14:56:15 2016 +0000
Author: Bill Buzbee <1001578@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b76525c6_0088eae0
UUID: d7a61927_df4fb4ad
Bytes: 4
Done

669:15-669:41
Tue Mar 15 12:30:02 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b76525c6_a05f3e1a
Bytes: 88
Please add a comment on this method, like it's being called at entry of the interpreter.

669:15-669:41
Tue Mar 15 14:56:15 2016 +0000
Author: Bill Buzbee <1001578@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b76525c6_a05f3e1a
UUID: d7a61927_7fffa07a
Bytes: 4
Done

670:2-670:17
Tue Mar 15 12:30:02 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b76525c6_c06432f5
Bytes: 13
2 more spaces

670:2-670:17
Tue Mar 15 14:56:15 2016 +0000
Author: Bill Buzbee <1001578@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b76525c6_c06432f5
UUID: d7a61927_dffcd486
Bytes: 4
Done

674:6-675:48
Tue Mar 15 12:30:02 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b76525c6_e0593636
Bytes: 17
nit: one per line

674:6-675:48
Tue Mar 15 14:56:15 2016 +0000
Author: Bill Buzbee <1001578@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b76525c6_e0593636
UUID: d7a61927_bff90896
Bytes: 4
Done

702:19-702:39
Tue Mar 15 12:30:02 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b76525c6_005f0a19
Bytes: 8
Cooment?

702:19-702:39
Tue Mar 15 14:56:15 2016 +0000
Author: Bill Buzbee <1001578@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b76525c6_005f0a19
UUID: d7a61927_1f313c42
Bytes: 4
Done

702:40-703:52
Tue Mar 15 12:30:02 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b76525c6_20740e9d
Bytes: 17
nit: one per line

702:40-703:52
Tue Mar 15 14:56:15 2016 +0000
Author: Bill Buzbee <1001578@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b76525c6_20740e9d
UUID: d7a61927_5f3bc421
Bytes: 4
Done

File: runtime/jit/jit_instrumentation.cc

146:0-148:3
Tue Mar 15 12:30:02 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b76525c6_606e06d1
Bytes: 59
How do we put it back to positive if there was an overflow?

146:0-148:3
Tue Mar 15 14:56:15 2016 +0000
Author: Bill Buzbee <1001578@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b76525c6_606e06d1
UUID: d7a61927_5f646421
Bytes: 738
As I define it, a negative counter value means we no longer wish to count - either we've disabled counting (kHotnessDisabled (-2)) or we've already gone hot and are checking for OSR (kMethodCheckForOSR (-1)).  These are currently end states - so no going back.  It occurs to me though that you'd probably want to reset a method's hotness_count_ to zero if the associated translation is purged form the translation cache.

Actually, I suppose we could add a bit of a sanity check here.  Because in practice we'll never have a really large batch update, we won't ever wrap around and reach -1 or -2.  So, we could check here and if we find a negative starting_count that is not -1 or -2, we could assume a bad wrap around and reset to zero.

171:4-171:10
Tue Mar 15 12:30:02 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b76525c6_806b1abe
Bytes: 85
Use if/else instead of early returns? I found the code easier to follow with if/else.

171:4-171:10
Tue Mar 15 14:56:15 2016 +0000
Author: Bill Buzbee <1001578@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b76525c6_806b1abe
UUID: d7a61927_7f5b205b
Bytes: 4
Done

