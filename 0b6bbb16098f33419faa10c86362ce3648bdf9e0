Revision: 0b6bbb16098f33419faa10c86362ce3648bdf9e0
Patch-set: 16
File: runtime/art_method.h

497:22-497:23
Tue Mar 15 12:30:02 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b76525c6_60ad2662
Bytes: 5
const

545:73-545:83
Tue Mar 15 12:30:02 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b76525c6_80aa3a49
Bytes: 21
But explain volatile?

File: runtime/interpreter/mterp/arm/footer.S

123:0-124:30
Tue Mar 15 12:30:02 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b76525c6_c0da72ea
Bytes: 135
Yeah, sorry if it looks so complicated. If you think it's too much, we can discuss alternatives.

But cool stuff you're making it work!

File: runtime/interpreter/mterp/arm/op_goto.S

9:12-9:41
Tue Mar 15 12:30:02 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b76525c6_e08216c2
Bytes: 80
Actually somehow nice code cleanup :). Let's measure the performance hit though.

File: runtime/interpreter/mterp/arm64/zcmp.S

10:40-10:43
Mon Mar 14 21:33:04 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b76525c6_e03a161d
Bytes: 17
Extra whitespace.

File: runtime/interpreter/mterp/mterp.cc

660:16-660:32
Tue Mar 15 12:30:02 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b76525c6_0088eae0
Bytes: 107
Maybe call this MterpMaybeDoOnStackReplacement? Otherwise it might be confusing given the comment line 665.

669:15-669:41
Tue Mar 15 12:30:02 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b76525c6_a05f3e1a
Bytes: 88
Please add a comment on this method, like it's being called at entry of the interpreter.

670:2-670:17
Tue Mar 15 12:30:02 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b76525c6_c06432f5
Bytes: 13
2 more spaces

674:6-675:48
Tue Mar 15 12:30:02 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b76525c6_e0593636
Bytes: 17
nit: one per line

702:19-702:39
Tue Mar 15 12:30:02 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b76525c6_005f0a19
Bytes: 8
Cooment?

702:40-703:52
Tue Mar 15 12:30:02 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b76525c6_20740e9d
Bytes: 17
nit: one per line

File: runtime/jit/jit_instrumentation.cc

146:0-148:3
Tue Mar 15 12:30:02 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b76525c6_606e06d1
Bytes: 59
How do we put it back to positive if there was an overflow?

171:4-171:10
Tue Mar 15 12:30:02 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b76525c6_806b1abe
Bytes: 85
Use if/else instead of early returns? I found the code easier to follow with if/else.

