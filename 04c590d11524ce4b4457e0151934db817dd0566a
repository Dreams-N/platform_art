Revision: 04c590d11524ce4b4457e0151934db817dd0566a
Patch-set: 2
File: /COMMIT_MSG

17
Fri May 30 16:40:54 2014 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5fea00f0_144fba47
Bytes: 38
Trailing whitespace in commit message?

File: compiler/dex/mir_graph.cc

1297:0-1300:3
Fri May 30 05:24:48 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dffef0bb_085d67cb
Bytes: 54
move description to declaration rather than definition

1304
Fri May 30 16:40:54 2014 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5fea00f0_34ed1edb
Bytes: 44
For pointers, I prefer comparing to nullptr.

1311:69-1311:75
Fri May 30 05:24:48 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5fc5a077_228b8f13
Bytes: 17
s/before/before./

1311:22-1311:25
Fri May 30 05:24:48 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7f33447f_e2fb46e2
Bytes: 10
s/the/The/

1313:18-1313:19
Fri May 30 05:24:48 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7f33447f_42f0f2fe
Bytes: 11
white space

File: compiler/dex/mir_graph.h

192:0-192:27
Fri May 30 04:19:39 2014 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3fef0c01_769e0885
Bytes: 47
static constexpr bool kLeafOptimization = true;

192:0-192:27
Fri May 30 05:24:48 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3fef0c01_769e0885
UUID: 5fc5a077_42868302
Bytes: 127
I agree with Andreas, #ifdefs are prone to bitrot while a constexpr will ensure both sides of an if-else will at least compile.

912:45-912:46
Fri May 30 05:24:48 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dffef0bb_e8a44b95
Bytes: 11
white space

File: compiler/dex/quick/arm/arm_lir.h

32:10-32:62
Fri May 30 05:24:48 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dffef0bb_a8ae5371
Bytes: 125
if ARM_R4_SUSPEND_FLAG is set then reserved as a suspend check/debugger assist flag, otherwise a callee save promotion target

122:26-122:28
Fri May 30 05:24:48 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7f33447f_02018a26
Bytes: 11
white space

File: compiler/dex/quick/arm/int_arm.cc

957:73-957:74
Fri May 30 05:24:48 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dffef0bb_88b397d7
Bytes: 11
white space

958:4-958:9
Fri May 30 16:40:54 2014 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5fea00f0_3404fee0
Bytes: 91
This relies on r0 being available at every suspend check. I think we should use a temp reg.

958:4-958:9
Fri May 30 21:42:31 2014 +0000
Author: Bill Buzbee <1001578@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5fea00f0_3404fee0
UUID: bfcdbca8_ddbddfc6
Bytes: 202
yes - allocate a temp.

RegStorage flags_reg = AllocTemp();

LoadBaseDisp(...., flags_reg, kUnsignedHalf);

LIR* res = OpCmpImmBranch(...)

FreeTemp(flags_reg);

return res;

... or something like that.

958:4-958:9
Fri May 30 21:53:47 2014 +0000
Author: Wei Jin <1047393@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: bfcdbca8_ddbddfc6
UUID: 7f33447f_5c38d5bf
Bytes: 4
Done

File: compiler/dex/quick/arm/target_arm.cc

53:72-53:79
Fri May 30 05:24:48 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5fc5a077_e26b5772
Bytes: 60
this makes r4 a temp register rather than a promotion target

53:72-53:79
Fri May 30 21:53:47 2014 +0000
Author: Wei Jin <1047393@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5fc5a077_e26b5772
UUID: 5fc5a077_71edd3d9
Bytes: 358
I initially thought that changing r4 into temp register would make it promotable. In the end, I found many callee save spills in ART were hard coded spread around different files (including assembly stubs). It may be error prone to change r4 into a promotion target as r5-r8, r10-r11. Could you give me some references to change r4 to a callee save register?

File: compiler/dex/quick/mir_to_lir.cc

561:48-561:49
Fri May 30 05:24:48 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5fc5a077_e294772d
Bytes: 22
white space, and below

File: runtime/arch/arm/asm_support_arm.h

38:0-38:25
Fri May 30 04:19:39 2014 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3fef0c01_f61c3858
Bytes: 152
We should make sure that this flag agrees with what's set in the compiler, but that's for another CL (we don't have a good place to put this right now).

38:0-38:25
Fri May 30 21:42:31 2014 +0000
Author: Bill Buzbee <1001578@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3fef0c01_f61c3858
UUID: 9fcab88f_fc8add0c
Bytes: 384
Yea, but my inclination here would be to not have this #define at all.  If this change proves to be performance neutral or better across more than just Caffienemark and we can convince ourselves that suspend coverage is complete, then I'd just do it and remove the existing code.  If not, I'd revert this patch.  Conditionally compiled modes are an invitation for destructive bit rot.

