Revision: c780251a283ad62cee20a23f1331ab8289d18c55
Patch-set: 1
File: /COMMIT_MSG

15:0-15:4
Wed Mar 23 12:05:15 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9ccf6672_d5655c8d
Bytes: 38
do you want to do this in this change?

15:0-15:4
Thu Mar 24 05:35:55 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 9ccf6672_d5655c8d
UUID: fc14e289_405fc8e7
Bytes: 50
Yes. (Probably should have marked the CL with WIP)

16:0-16:37
Wed Mar 23 12:05:15 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5cd96e3d_688af79b
Bytes: 32
Shouldn't it result in 'Object'?

16:0-16:37
Thu Mar 24 05:35:55 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5cd96e3d_688af79b
UUID: fc14e289_605ac4f9
Bytes: 131
Yeah, Object is the right resolution. Still the same problem, it should be merged to not soft-fail something that should hard-fail.

File: runtime/verifier/method_verifier.cc

4259:0-4262:53
Wed Mar 23 12:05:15 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5c416ed6_df04db3a
Bytes: 112
Isn't that more an internal problem in the verifier? How can we flag an array type unresolved if it's primitive?

4259:0-4262:53
Thu Mar 24 05:35:55 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5c416ed6_df04db3a
UUID: fc14e289_80270094
Bytes: 106
is_primitive means that the *operation* expects a primitive type. E.g., it's an aput, vs an aput-object...

4264:40-4264:43
Wed Mar 23 12:05:15 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5c416ed6_ff099f4f
Bytes: 6
cannot

4264:46-4264:51
Wed Mar 23 12:05:15 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dce47ef9_6109327d
Bytes: 6
verify

4377:0-4385:7
Wed Mar 23 12:05:15 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5cd96e3d_888f3ba9
Bytes: 5
ditto

File: runtime/verifier/reg_type.cc

524:9-524:12
Wed Mar 23 12:05:15 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5c416ed6_bf03172e
Bytes: 6
Cannot

524:26-524:27
Wed Mar 23 12:05:15 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1cdb763a_83456224
Bytes: 78
, as the superclass of arrays is java.lang.Object, which cannot be unresolved.

528:9-528:13
Wed Mar 23 12:05:15 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dce47ef9_a1025a57
Bytes: 12
Explain why.

529:32-529:33
Wed Mar 23 12:05:15 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3ce03ae0_240d761c
Bytes: 25
& (and * the down_cast) ?

531:0-534:7
Wed Mar 23 12:05:15 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7cd6320e_4912993b
Bytes: 75
Add a comment please, the one line 528 does not mention this early bailout.

531:0-534:7
Thu Mar 24 05:35:55 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7cd6320e_4912993b
UUID: fc14e289_0065d0bf
Bytes: 183
I'll clarify, but 528 includes this. This one says that the resolvable part of a merged type exists (!zero) and is not an object array type -> one element of the merge is not -> bail.

544:10-544:50
Wed Mar 23 12:05:15 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7cd6320e_69075dfc
Bytes: 10
double OK.

563:0-588:5
Wed Mar 23 12:05:15 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5c416ed6_5f19ab98
Bytes: 10
all ditto.

878:81-879:30
Wed Mar 23 12:05:15 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: fce942d0_a526e4af
Bytes: 47
Make it a soft error if both are object arrays?

