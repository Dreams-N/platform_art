Revision: c9c22e31f7c4e74859e8d510638cc5911d1e5a58
Patch-set: 3
File: runtime/gc/collector/mark_sweep.cc

416:85-416:94
Tue Aug 16 20:52:32 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dbdd7f2d_bd4fdf90
Bytes: 118
This should not be necessary. Is that a rebase artifact, anyways? If not, it should have nothing to do with this CL...

416:85-416:94
Wed Aug 17 09:24:03 2016 +0000
Author: Neil Fuller <1038039@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dbdd7f2d_bd4fdf90
UUID: 1bf2b7e6_4f180dd3
Bytes: 337
It is called out in the commit comment.

I will remove because you're technically right, though I figured it wasn't a big deal and it relates to the logging you need when you've messed up the layout.

I may do a follow up to include it, but I didn't really consider it important enough to warrant the testing overhead for a dedicated CL.

File: runtime/mirror/class.h

1426
Tue Aug 16 19:49:10 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3b1e9ba6_eecb7bba
Bytes: 29
How is this reshuffle tested?

1426
Tue Aug 16 20:50:23 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3b1e9ba6_eecb7bba
UUID: dbdd7f2d_5d609b08
Bytes: 174
Filling holes when layouting a Java object, I assume. I think we do references first, then 8B, then 4B, 2B, 1B. But the 4B may fill earlier holes caused by alignment padding.

1426
Tue Aug 16 21:11:56 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dbdd7f2d_5d609b08
UUID: dbdd7f2d_0095c831
Bytes: 95
Oh ok that.. wonderful.

Could probably turn the layouting into a constexpr and reuse it..hmm..

1426
Wed Aug 17 09:24:03 2016 +0000
Author: Neil Fuller <1038039@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dbdd7f2d_0095c831
UUID: 1bf2b7e6_0f1205b3
Bytes: 36
It's tested in class_linker_test.cc.

