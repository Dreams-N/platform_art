Revision: 88c6c65dad24adcf014d40eb4b0e904c1923ebf3
Patch-set: 1
File: compiler/optimizing/inliner.cc

38:21-38:32
Mon Feb 02 18:34:37 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 37190331_35f8b084
Bytes: 121
This CL is building on https://android-review.googlesource.com/#/c/127601, so no need to review inliner.cc and inliner.h.

File: compiler/optimizing/nodes.cc

744:2-744:47
Tue Feb 03 11:13:59 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 778a9b9e_62d538bd
Bytes: 172
This is a bit confusing. It looks like it's updating 'instructions_.block_' but it's iterating over the list. Could we rename it to 'SetBlockOfEach' or something like that?

789:31-789:91
Tue Feb 03 11:13:59 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b76973a4_f9c5770f
Bytes: 134
Is this scenario possible? If so, could 'this' end with a control flow instruction that you don't remove? Maybe add a DCHECK for that?

793
Tue Feb 03 11:13:59 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5778376f_b6cb08a6
Bytes: 271
I know this is currently used only in inlining but in case somebody picks this up, it could be worth adding more DCHECKs here. E.g. if both 'successors_' and 'dominated_blocks_' are empty, the other block can be pretty much anything - have predecessors, a dominator, etc.

920:4-922:5
Mon Feb 02 23:48:22 2015 +0000
Author: Razvan A Lupusoru <1013855@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f74dab10_04e3dcaa
Bytes: 134
I believe you are missing the logic to remove invoke in case there is no return value. But maybe you are handling that somewhere else.

File: compiler/optimizing/nodes.h

466:39-466:78
Tue Feb 03 11:13:59 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5778376f_d6d08454
Bytes: 51
also mention that the two blocks are not connected?

