Revision: a1b896d61288406fcda4d09326321b33c5161ea2
Patch-set: 2
File: build/Android.common_build.mk

38:24-38:59
Thu Sep 08 00:37:58 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f6c89fe8_a5d2be23
Bytes: 3
...

File: compiler/driver/compiler_driver.cc

626:8-626:56
Thu Sep 08 00:37:58 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f6c89fe8_65e1e6ec
Bytes: 161
I don't think this should be a check. I don't see the ArtMethod code checking this, and we have to support arbitrary Java input - so a native abort isn't pretty.

626:8-626:56
Thu Sep 08 15:09:11 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f6c89fe8_65e1e6ec
UUID: 766bcf9b_a253c410
Bytes: 64
I'll replace it with a verifier check in a later CL, sound good?

File: compiler/jni/jni_compiler_test.cc

184:33-184:49
Thu Sep 08 00:37:58 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f6c89fe8_65b606f9
Bytes: 15
Why line break?

484:100-484:104
Thu Sep 08 00:37:58 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f6c89fe8_c8842f0e
Bytes: 14
Line too long.

575:100-575:115
Thu Sep 08 00:37:58 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f6c89fe8_08b007e3
Bytes: 14
Line too long.

598:100-598:111
Thu Sep 08 00:37:58 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f6c89fe8_68ad3b87
Bytes: 14
Line too long.

1311:100-1311:102
Thu Sep 08 00:37:58 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f6c89fe8_48aaff70
Bytes: 14
Line too long.

1331:100-1331:207
Thu Sep 08 00:37:58 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f6c89fe8_a8c3b32e
Bytes: 14
Line too long.

1879:100-1879:105
Thu Sep 08 00:37:58 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f6c89fe8_e8cdab58
Bytes: 14
Line too long.

File: compiler/jni/quick/calling_convention.h

405:2-406:39
Thu Sep 08 00:37:58 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d6963bc8_9c11c5c3
Bytes: 73
Bad name. Those aren't "extra" args. Those are args defined by the "ABI."

405:2-406:39
Thu Sep 08 15:09:11 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d6963bc8_9c11c5c3
UUID: 766bcf9b_c258b82d
Bytes: 55
That's what the existing code called it (see line 394).

File: compiler/jni/quick/jni_compiler.cc

92:0-98:83
Thu Sep 08 00:37:58 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b69387d9_9b11cbc3
Bytes: 71
?

In the driver you CHECK that only one is set. So why so complicated?

198:50-198:61
Thu Sep 08 00:37:58 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 766bcf9b_d9cd1359
Bytes: 95
(Nit: be more precise about a HandleScope being allocated but being unused for the time being?)

444:2-444:79
Thu Sep 08 00:37:58 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 766bcf9b_f9e5779c
Bytes: 147
Gotta get the method from somewhere to make a call off of it. This version of Call loads it from the stack (where it was spilled in the beginning).

444:2-444:79
Thu Sep 08 15:09:11 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 766bcf9b_f9e5779c
UUID: 766bcf9b_22489455
Bytes: 38
Probably stale comment, need to remove

499:8-499:98
Thu Sep 08 00:37:58 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 766bcf9b_f99ad718
Bytes: 7
Remove.

509:4-512:44
Thu Sep 08 00:37:58 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 766bcf9b_99b47b8e
Bytes: 119
Why not put this under the check at L521? Then current_out_arg_size isn't modified, so the decrease in L582 is correct.

File: compiler/jni/quick/x86/calling_convention_x86.cc

27:69-27:73
Thu Sep 08 00:37:58 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 766bcf9b_39a60f5f
Bytes: 12
missing word

File: compiler/jni/quick/x86_64/calling_convention_x86_64.cc

29:76-29:81
Thu Sep 08 00:37:58 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 766bcf9b_396b6fe7
Bytes: 13
Missing word.

File: runtime/parsed_options.cc

421:2-421:60
Thu Sep 08 00:37:58 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 766bcf9b_7975e7c0
Bytes: 6
Revert

File: runtime/well_known_classes.cc

220:100-220:115
Thu Sep 08 00:37:58 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 766bcf9b_b9477f71
Bytes: 14
Line too long.

220:100-220:115
Thu Sep 08 15:09:11 2016 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 766bcf9b_b9477f71
UUID: 766bcf9b_a27ca47c
Bytes: 74
The rest of the lines in this function don't respect it either (see below)

