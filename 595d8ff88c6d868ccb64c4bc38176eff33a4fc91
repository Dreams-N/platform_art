Revision: 595d8ff88c6d868ccb64c4bc38176eff33a4fc91
Patch-set: 1
File: /COMMIT_MSG

9:11-9:12
Tue Nov 10 18:44:29 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f6a6b626_34eb96a1
Bytes: 8
Grammar.

9:11-9:12
Tue Nov 10 21:33:02 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f6a6b626_34eb96a1
UUID: 76d4867d_b6d676e6
Bytes: 4
Done

File: runtime/mem_map_test.cc

38:4-38:64
Tue Nov 10 19:17:26 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 76d4867d_9b771bb7
Bytes: 96
Add a comment that this just finds an address that should work and *unmaps it* before returning?

38:4-38:64
Tue Nov 10 21:33:02 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 76d4867d_9b771bb7
UUID: 76d4867d_f6690e02
Bytes: 4
Done

258:3-258:68
Tue Nov 10 18:44:29 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 16ac2a06_3531d2c8
Bytes: 95
This is changing the test, no? How do you guarantee that you get the high half of the low 4 GB?

258:3-258:68
Tue Nov 10 21:33:02 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 16ac2a06_3531d2c8
UUID: 16ac2a06_f5946ab7
Bytes: 57
ART_BASE_ADDRESS + 0x1000000 is still in low 2GB I think.

258:3-258:68
Tue Nov 10 21:45:37 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 16ac2a06_f5946ab7
UUID: b6da7ea7_38eb95a1
Bytes: 193
The point is, you get a high address range something something, because of the requested size (base >= 0x60000000 for non-Mips).

Look up the context of adding this test for specifics, I guess.

