Revision: db9d523ff305721d4ca3f1470d1b2ce64c736e0a
Patch-set: 1
File: compiler/dex/quick/arm/utility_arm.cc

825:2-825:33
Thu Jun 12 20:37:46 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: bf713c8e_3d527396
Bytes: 66
DCHECK(IsAligned<8>(displacement));
DCHECK_LE(displacement, 1020);

825:2-825:33
Fri Jun 13 09:01:40 2014 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: bf713c8e_3d527396
UUID: 5f6920a1_5f0483e1
Bytes: 173
No and no. kThumb2Vldrs/kThumb2Vstrs don't need 8-byte alignment and displacement above 1020 is handled correctly below (and actually exercised by 083-compiler-regressions).

825:2-825:33
Fri Jun 13 16:38:17 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5f6920a1_5f0483e1
UUID: df74307d_d24de585
Bytes: 112
So what is the displacement check doing?
If this function handles all displacements then its name is misleading.

825:2-825:33
Mon Jun 16 10:41:21 2014 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: df74307d_d24de585
UUID: 7fd6e483_1984d7b9
Bytes: 344
The displacement should be 4-byte aligned because that's what the insns can handle. (In our usage, some insns require 8-byte and other insns only 4-byte alignment.)

The pointer adjustment is supposed to help when the displacement is too large, not for fixing the alignment.

Renaming the function: https://android-review.googlesource.com/97813

826:37-826:41
Thu Jun 12 20:37:46 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: df74307d_a41d8cfc
Bytes: 35
comment that this is 0b1111111100 ?

826:37-826:41
Fri Jun 13 09:01:40 2014 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: df74307d_a41d8cfc
UUID: 7fd6e483_13d7967e
Bytes: 90
The two lines are to be read together and all software engineers know what 1023 is, right?

826:37-826:41
Fri Jun 13 16:38:17 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7fd6e483_13d7967e
UUID: 7f49844c_8186a4ff
Bytes: 175
I think most engineers would write masks in hex for the clarity of which bits they are setting or clearing. In this case its worse as 1020 isn't a power of 2 (or power of -1).

826:37-826:41
Mon Jun 16 10:41:21 2014 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7f49844c_8186a4ff
UUID: 1fd5e878_d62b2a71
Bytes: 56
Cleanup: https://android-review.googlesource.com/97813 .

