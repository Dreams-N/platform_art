Revision: fa6a6244374effe45321377e911e1494a5398330
Patch-set: 10
File: cmdline/cmdline_parser_test.cc

104:0-117:3
Wed Jun 10 07:54:20 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 79c9c09b_9c488901
Bytes: 34
I'd make this a standlaone change.

104:0-117:3
Wed Jun 10 23:30:35 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 79c9c09b_9c488901
UUID: 992af412_fa13e1e5
Bytes: 227
(I left this in)

Not sure how to split this, it's related to testing that --experimental-lambdas flag is OFF by default which is also required by this CL.

I can remove this test instead but then we'll have less test coverage.

File: compiler/dex/quick/quick_compiler.cc

475:0-493:2
Tue Jun 09 22:53:02 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d902ac8c_6996211e
Bytes: 109
Can't you do the same just by comparing the pointer in kUnsupportedOpcodes against kUnsupportedLambdaOpcodes?

475:0-493:2
Wed Jun 10 23:30:35 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d902ac8c_6996211e
UUID: 193e044a_1a148dcd
Bytes: 224
Done.

Unfortunately this can't be constexpr since it relies on a lot of pointers and we can't trivially decay the other constexpr arrays into other pointers.

(though it gets called at runtime so it probably doesn't matter)

File: runtime/dex_instruction.h

144:24-144:35
Wed Jun 10 08:41:52 2015 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 79c9c09b_1c559994
Bytes: 29
Misaligned with values above.

144:24-144:35
Wed Jun 10 23:30:35 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 79c9c09b_1c559994
UUID: b92b3816_d5b6fc2b
Bytes: 4
Done

File: runtime/interpreter/interpreter_common.cc

484:5-484:17
Wed Jun 10 08:41:52 2015 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 79c9c09b_5c89d1a8
Bytes: 314
This is adding an extra call for invoking a method in the interpreter that potentially is another performance penalty.

You could force DoCall and DoLambdaCall to be inlined (using ALWAYS_INLINE) to keep the same number of function calls. It seems to me they only extract invoke arguments from the DEX instruction.

484:5-484:17
Wed Jun 10 23:30:35 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 79c9c09b_5c89d1a8
UUID: 99fcb4c6_1ed8fd94
Bytes: 212
I added ALWAYS_INLINE to DoCallCommon to keep the same call depth as before (as you said).

That being said I'm sure the bigger performance question is this IsStringClass check that every single invoke has to do.

720:0-720:84
Wed Jun 10 07:54:20 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 79c9c09b_9c71a95b
Bytes: 19
Indentation is off.

720:0-720:84
Wed Jun 10 23:30:35 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 79c9c09b_9c71a95b
UUID: d902ac8c_612aad33
Bytes: 4
Done

File: runtime/interpreter/interpreter_common.h

103:0-103:52
Wed Jun 10 07:54:20 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 79c9c09b_fc62dd8d
Bytes: 34
Do you win anything by templating?

103:0-103:52
Wed Jun 10 23:30:35 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 79c9c09b_fc62dd8d
UUID: 3937486d_562af209
Bytes: 506
That's the same exact pattern as the other functions in the interpreter uses.

Presumably it's a little bit faster since some of the branches will have guarantee inlined. Not sure if gcc/clang does partial specialization on runtime arguments.

(That being said happy to clean this up at some point in the future, but that would require a much larger interpreter refactoring that seems outside of the scope of this CL. and also the way Instruction works bugs me a lot more than how the interpreter works :))

149:2-149:8
Wed Jun 10 07:54:20 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 79c9c09b_dc67219c
Bytes: 14
mirror::Object

149:2-149:8
Wed Jun 10 08:41:52 2015 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 79c9c09b_dc67219c
UUID: b9cfb89d_6993ad2c
Bytes: 191
There is a 'using ::art::mirror::Object;' to void the need for mirror::. I agree we should keep the mirror::Object and remove these 'using' declarations. That can be changed in a separate CL.

149:2-149:8
Wed Jun 10 23:30:35 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b9cfb89d_6993ad2c
UUID: 99fcb4c6_fe04014f
Bytes: 84
Apologies, was following the existing style in this file (see e.g. DoInvoke)

Fixed.

File: runtime/interpreter/interpreter_goto_table_impl.cc

81:61-81:84
Tue Jun 09 22:53:02 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5934fc65_02b0aa4d
Bytes: 72
It looks more like you'd want a DCHECK here with inst->IsExperimental().

81:61-81:84
Wed Jun 10 23:30:35 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5934fc65_02b0aa4d
UUID: 1917e4d9_fb576b29
Bytes: 4
Done

File: runtime/interpreter/interpreter_switch_impl.cc

2:1-2:2
Wed Jun 10 08:41:52 2015 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 99ce74a2_08cd575a
Bytes: 29
Please remove this extra line

2:1-2:2
Wed Jun 10 23:30:35 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 99ce74a2_08cd575a
UUID: 1917e4d9_9e33bd22
Bytes: 4
Done

2246:11-2246:15
Wed Jun 10 08:41:52 2015 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 99ce74a2_68be0bb2
Bytes: 22
Instruction::UNUSED_F4

2246:11-2246:15
Wed Jun 10 23:30:35 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 99ce74a2_68be0bb2
UUID: 193e044a_95a2ae30
Bytes: 4
Done

2247:11-2247:15
Wed Jun 10 08:41:52 2015 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b9cfb89d_493eb198
Bytes: 5
ditto

2248:11-2248:24
Wed Jun 10 08:41:52 2015 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b9cfb89d_293b75a8
Bytes: 5
ditto

File: runtime/parsed_options.cc

263:16-263:38
Wed Jun 10 07:54:20 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 79c9c09b_7c77ed4c
Bytes: 43
Why not making this specific about lambdas?

553:39-553:41
Tue Jun 09 22:53:02 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 99fcb4c6_24dbb295
Bytes: 3
are

553:39-553:41
Wed Jun 10 23:30:35 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 99fcb4c6_24dbb295
UUID: 99fcb4c6_337772fc
Bytes: 4
Done

552:4-554:71
Wed Jun 10 08:41:52 2015 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 79c9c09b_fc0e5dbe
Bytes: 165
Not sure this is how we handle long string in the code. I'd write:

  LOG(WARNING) << "blablablabla...blablablabla "
               << "blablablabla...blablablabla "

552:4-554:71
Wed Jun 10 23:30:35 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 79c9c09b_fc0e5dbe
UUID: 3937486d_16146acd
Bytes: 199
google3 style guide allows either case. I changed it how you suggested however, it's fine with me since that makes it more readable.

(fwiw I just used the eclipse google3 automatic formatting here).

File: runtime/read_barrier-inl.h

34:2-34:11
Wed Jun 10 07:54:20 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 99ce74a2_4876afb7
Bytes: 16
Why this change?

34:2-34:11
Wed Jun 10 23:30:35 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 99ce74a2_4876afb7
UUID: 3937486d_4af24214
Bytes: 30
Just a cleanup, will split out

File: runtime/runtime_options.def

33:0-34:2
Wed Jun 10 08:41:52 2015 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 79c9c09b_dc13a1e6
Bytes: 117
Except the extra -X[no]experimental-opcodes option, this should be part of a separate CL (not related to new opcodes)

File: runtime/verifier/method_verifier.cc

2847:9-2847:13
Wed Jun 10 08:41:52 2015 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b9cfb89d_69416d08
Bytes: 22
Instruction::UNUSED_F4

2848:9-2848:13
Wed Jun 10 08:41:52 2015 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 99ce74a2_a8db0316
Bytes: 5
ditto

2849:9-2849:22
Wed Jun 10 08:41:52 2015 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 99ce74a2_88c16724
Bytes: 5
ditto

File: runtime/verifier/method_verifier.h

80:33-80:43
Wed Jun 10 08:41:52 2015 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 79c9c09b_9c1d29f4
Bytes: 8
complete

80:33-80:43
Wed Jun 10 23:30:35 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 79c9c09b_9c1d29f4
UUID: b92b3816_95d72432
Bytes: 4
Done

File: test/955-lambda-smali/info.txt

2:0-2:104
Wed Jun 10 07:54:20 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 79c9c09b_5c743146
Bytes: 79
I'd drop. This file is for explaining the test, not the testing infrastructure.

2:0-2:104
Wed Jun 10 23:30:35 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 79c9c09b_5c743146
UUID: 3937486d_2ab01e4e
Bytes: 4
Done

File: test/955-lambda-smali/run

18:52-18:108
Wed Jun 10 08:41:52 2015 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b9cfb89d_09c7990b
Bytes: 99
Should it be 

  -Xcompiler-option --runtime-arg -Xcompiler-option -Xexperimental-opcodes

instead?

18:52-18:108
Wed Jun 10 23:30:35 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b9cfb89d_09c7990b
UUID: 193e044a_153bfe5d
Bytes: 841
Just to elaborate the --runtime-option is there to run dalvikvm correctly, and the --Xcompiler-option is there for dex2oat to do the prebuild correctly (otherwise quick will skip scanning opcodes and crash instead of punting to interpreter)

===========

If I did it as you inquired then run-test-jar would see it as

  arg(-Xcompiler-option), value(--runtime-arg)
  arg(-Xcompiler-option), value(--Xexperimental-opcodes)

by adding the quotes there I'm forcing it to see it as 

  arg(-Xcompiler-option), value(--runtime-arg -Xexperimental-opcodes)

and then dex2oat will parse that as 'dex2oat ... --runtime-arg -Xexperimental-opcodes' and add it to its set of create java vm args.

(as an aside, I didn't add a new dex2oat flag for this, since I felt it would be redundant with a runtime flag, so there's only the 1 runtime flag for this)

File: test/955-lambda-smali/smali/Main.smali

1
Wed Jun 10 07:54:20 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 79c9c09b_3c817598
Bytes: 17
Missing copyright

1
Wed Jun 10 23:30:35 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 79c9c09b_3c817598
UUID: 3937486d_2a97be9c
Bytes: 4
Done

5:0-14:11
Wed Jun 10 07:54:20 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 79c9c09b_dc4e010e
Bytes: 37
Why is that in smali and not in Java?

5:0-14:11
Wed Jun 10 23:30:35 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 79c9c09b_dc4e010e
UUID: 193e044a_9574ee47
Bytes: 51
dexmerger doesn't support the new opcodes right now

5:0-14:11
Thu Jun 11 08:35:40 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 193e044a_9574ee47
UUID: 198c4486_b0a9f869
Bytes: 10
Should we?

5:0-14:11
Thu Jun 11 16:40:03 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 198c4486_b0a9f869
UUID: 997f5421_72a390fe
Bytes: 352
Long term? Possibly. Would want to double check with jack team to see if they're planning on maintaining dxmerger with future releases.

Short term? Doesn't really make sense since some of these dex formats will change before we ship, I can just go through all the dex tooling and update it in one swoop after the format is 99% guaranteed to be stable.

File: test/955-lambda-smali/smali/SanityCheck.smali

1
Wed Jun 10 07:54:20 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b9cfb89d_49b911b6
Bytes: 9
Copyright

1
Wed Jun 10 23:30:35 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b9cfb89d_49b911b6
UUID: 1917e4d9_1e032d42
Bytes: 4
Done

13:0-14:13
Wed Jun 10 07:54:20 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 79c9c09b_1c7eb926
Bytes: 76
Out of scope? Why not putting the number of registers you're actually using?

13:0-14:13
Wed Jun 10 23:30:35 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 79c9c09b_1c7eb926
UUID: 193e044a_35816298
Bytes: 4
Done

File: test/955-lambda-smali/smali/TrivialHelloWorld.smali

1
Wed Jun 10 07:54:20 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 99ce74a2_287373c7
Bytes: 9
copyright

1
Wed Jun 10 23:30:35 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 99ce74a2_287373c7
UUID: 3937486d_8aa60a0d
Bytes: 4
Done

File: test/etc/default-build

11
Wed Jun 10 07:54:20 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 99ce74a2_e8033b14
Bytes: 90
Do you need any of the changes in this file if you change the smali Main into a Java Main?

11
Wed Jun 10 23:30:35 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 99ce74a2_e8033b14
UUID: 193e044a_d5483602
Bytes: 65
(can't do this because dexmerger doesn't support the new opcodes)

File: test/run-test

99
Wed Jun 10 07:54:20 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b9cfb89d_29b6d5c5
Bytes: 41
This doesn't seem related to this change.

99
Wed Jun 10 08:41:52 2015 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b9cfb89d_29b6d5c5
UUID: 99ce74a2_48cb4f42
Bytes: 38
Agreed, it's one of my comments on PS4

