Revision: 20d6940aec1e154a35c07340622822392a8bdbc1
Patch-set: 2
File: compiler/optimizing/builder.cc

524:0-524:35
Mon Apr 20 09:01:38 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 103a56f6_201d8a66
Bytes: 49
I'd drop, since the call is already on two lines.

524:0-524:35
Mon Apr 20 11:21:01 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 103a56f6_201d8a66
UUID: 7048f2a0_1b471b11
Bytes: 137
eh, couldn't find a decent readable way to inline this even with two lines. I prefer this one over 3 lines for a single return statement.

532:11-532:58
Mon Apr 20 09:01:38 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 103a56f6_80129652
Bytes: 39
Add a helper in HGraphBuilder for this.

532:11-532:58
Mon Apr 20 11:21:01 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 103a56f6_80129652
UUID: 103a56f6_80ea9671
Bytes: 4
Done

535:17-535:45
Mon Apr 20 09:01:38 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 10089662_70b930dc
Bytes: 66
This looks odd: you're doing "not" but still adding the barrier...

535:17-535:45
Mon Apr 20 11:21:01 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 10089662_70b930dc
UUID: 103a56f6_c003fec6
Bytes: 115
Obsolete.
It was correct because it tests the outer unit. If we don't need a barrier there we need to add one here.

536:7-539:50
Mon Apr 20 09:01:38 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7048f2a0_5be9a3ac
Bytes: 71
I don't think this works if it's a constructor method that calls "new".

536:7-539:50
Mon Apr 20 11:21:01 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7048f2a0_5be9a3ac
UUID: 7048f2a0_9b968bc4
Bytes: 305
Indeed. This whole optimization is bogus. There's no easy and safe way to decide on this pattern (dex does not support kAccSuper flag and calls to super have nothing special to differentiate them from `new` call). It might be possible to track the calls and figure it out but I'll leave it for another CL.

File: test/476-checker-ctor-memory-barrier/src/Main.java

28:2-28:44
Mon Apr 20 09:01:38 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 10089662_50beacc5
Bytes: 43
Maybe check that there is no other barrier?

28:2-28:44
Mon Apr 20 11:21:01 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 10089662_50beacc5
UUID: 7048f2a0_fb186f2a
Bytes: 9
see below

29:2-29:22
Mon Apr 20 09:01:38 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 103a56f6_a0287a80
Bytes: 61
What is this? Shouldn't you use CHECK-DAG to check the order?

29:2-29:22
Mon Apr 20 11:21:01 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 103a56f6_a0287a80
UUID: 10089662_f0b240c3
Bytes: 112
this checks that no other instruction is in between the barrier and the return (which includes another barrier),

