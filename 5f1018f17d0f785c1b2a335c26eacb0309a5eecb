Revision: 5f1018f17d0f785c1b2a335c26eacb0309a5eecb
Patch-set: 5
File: compiler/optimizing/code_generator.cc

663:2-665:3
Wed Feb 03 17:52:43 2016 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b1d6100b_40b26e23
Bytes: 73
There's a constructor for initializing 'n' elements with a default value.

696:4-696:90
Wed Feb 03 17:52:43 2016 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d1cf0471_817e3af2
Bytes: 86
I can already see the optimization that will make this crash one day. Do we need this?

783:7-785:27
Wed Feb 03 17:52:43 2016 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 91d90c41_7f01cf98
Bytes: 9
One line?

File: compiler/optimizing/nodes.h

615:27-615:32
Wed Feb 03 17:52:43 2016 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d1cf0471_c16f623e
Bytes: 5
which

615:53-615:61
Wed Feb 03 17:52:43 2016 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d1b8e4d6_7c12b5a5
Bytes: 8
directly

File: runtime/jit/jit.cc

326:55-326:57
Wed Feb 03 17:52:43 2016 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 51db1439_ddb4ab3b
Bytes: 3
are

338:28-338:30
Wed Feb 03 17:52:43 2016 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b1d6100b_207f2af4
Bytes: 17
";"? ", because"?

File: runtime/jit/jit.h

95:30-95:73
Wed Feb 03 17:52:43 2016 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 71e018e1_7ea551d1
Bytes: 95
jump to compiled code, let it run and return true afterwards. (or something along those lines).

File: runtime/stack_map.h

1204:32-1204:76
Wed Feb 03 17:52:43 2016 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f1cc087f_45d51cdd
Bytes: 146
Hack hack hack! You should add a DCHECK that the third one is not identical, because sooner or later somebody will turn triples into a marker too.

File: test/570-checker-osr/src/Main.java

26:36-26:40
Wed Feb 03 17:52:43 2016 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 71e018e1_c1d12427
Bytes: 175
Nit: Didn't check what 53.3 translates to in binary, but I'd suggest doing

  Double.longBitsToDouble

on the long hex below to guarantee that the value covers both registers.

