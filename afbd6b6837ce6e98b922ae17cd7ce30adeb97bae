Revision: afbd6b6837ce6e98b922ae17cd7ce30adeb97bae
Patch-set: 32
File: compiler/dex/quick/gen_common.cc

767
Fri Aug 22 18:38:39 2014 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 13f169a2_c3dbf4fd
Bytes: 52
Do we still need OpSize if we have a primitive type?

767
Fri Aug 22 19:01:03 2014 +0000
Author: Fred Shih <1047773@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 13f169a2_c3dbf4fd
UUID: 53076152_659e8c52
Bytes: 513
I'm not quite sure about this one, I think having using an OpSize makes more sense for code generation, but type makes more sense for determining entrypoint. The concern I have is that Type doesn't always map to the same OpSize necessarily. For example, a store for Byte and Char both use unsigned byte stores because the instruction is shorter depending on ISA. Even though it's extra code, I think it's better to have the caller explicitly pass in the parameters so that we can perform sanity checks afterwards.

File: compiler/dex/quick/mir_to_lir.h

853
Fri Aug 22 18:38:39 2014 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 53076152_e5eb9c10
Bytes: 56
As I said in cc file, is passing OpSize still necessary?

853
Fri Aug 22 19:01:03 2014 +0000
Author: Fred Shih <1047773@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 53076152_e5eb9c10
UUID: 33b3cdfb_1a4539d8
Bytes: 21
Addressed in cc file.

1755
Fri Aug 22 18:38:39 2014 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 13f169a2_630200a7
Bytes: 16
Make this static

1755
Fri Aug 22 19:01:03 2014 +0000
Author: Fred Shih <1047773@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 13f169a2_630200a7
UUID: 13f169a2_b56c1fd5
Bytes: 4
Done

File: runtime/arch/x86/quick_entrypoints_x86.S

1117
Fri Aug 22 18:38:39 2014 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 53076152_e566fcf0
Bytes: 56
Why didn't you use the macro for art_quick_get64_static?

1117
Fri Aug 22 19:01:03 2014 +0000
Author: Fred Shih <1047773@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 53076152_e566fcf0
UUID: 33b3cdfb_1a1a9907
Bytes: 76
Originally thought alignment would be different for 64bit, changed to macro.

File: runtime/entrypoints/quick/quick_field_entrypoints.cc

29
Fri Aug 22 18:38:39 2014 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 33b3cdfb_7acc7572
Bytes: 44
Indents are off here and a few other places.

29
Fri Aug 22 19:01:03 2014 +0000
Author: Fred Shih <1047773@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 33b3cdfb_7acc7572
UUID: 53076152_c505b8e5
Bytes: 4
Done

File: runtime/mirror/art_field.h

98
Fri Aug 22 18:38:39 2014 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 53076152_251e4453
Bytes: 84
Would it be worth changing these to use the JNI primitives, jboolean, jbyte, etc...?

98
Fri Aug 22 19:01:03 2014 +0000
Author: Fred Shih <1047773@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 53076152_251e4453
UUID: 33b3cdfb_9adb09ff
Bytes: 90
Shouldn't we keep the concepts separate? The methods are used in other places besides JNI.

