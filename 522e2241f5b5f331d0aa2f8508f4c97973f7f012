Revision: 522e2241f5b5f331d0aa2f8508f4c97973f7f012
Patch-set: 2
File: compiler/optimizing/code_generator.h

249:4-250:67
Tue Mar 17 19:58:00 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 26b800d4_9caa294e
Bytes: 86
i think this should be
DCHECK(type == Primitive::kPrimNot || value->IsNullConstants())

249:4-250:67
Tue Mar 17 21:03:42 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 26b800d4_9caa294e
UUID: e6b188f2_fd131f0b
Bytes: 193
Calin: I think this doesn't prevent an objet type being an IntConstant, does it?

David: Maybe it would be easier to read if written:
!(type == Primitive::kPrimNot && value->IsIntConstant())

?

249:4-250:67
Tue Mar 17 21:12:57 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e6b188f2_fd131f0b
UUID: 06af7c90_5b0df7bb
Bytes: 102
Sorry, I wanted to say, value->ActAsNullConstant() which is true for NullConstants and 0-IntConstants.

249:4-250:67
Tue Mar 17 21:16:28 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 06af7c90_5b0df7bb
UUID: 26b800d4_3c6afd9a
Bytes: 200
We're trying to get away from 0-Intconstants as null. I thing there are some places left (like comparing an object with null), but otherwise we should never see a 0-constant used in an object context.

249:4-250:67
Tue Mar 17 21:21:23 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 26b800d4_3c6afd9a
UUID: 06af7c90_5b24172c
Bytes: 82
yea, I wasn't sure what's missing and this is why I suggested ActAsNullConstant().

249:4-250:67
Wed Mar 18 09:03:00 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 06af7c90_5b24172c
UUID: 06af7c90_becb619d
Bytes: 331
The DCHECK was meant to check that null is not represented as an IntConstant at this point and yes, it does look confusing. If we have the ActAsNullConstant, I could just use that in the condition below and get rid of the DCHECK. It's not the codegen's job to verify these properties anyway (could we add it to the graph verifier?)

249:4-250:67
Wed Mar 18 09:11:50 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 06af7c90_becb619d
UUID: 06af7c90_5edc0563
Bytes: 157
Yeah a big chink of it is already in the graph verifier. We should *not* need a ActAsNullConstant, and instead fix the places where we're not properly typed.

