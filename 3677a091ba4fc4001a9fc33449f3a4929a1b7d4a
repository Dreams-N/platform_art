Revision: 3677a091ba4fc4001a9fc33449f3a4929a1b7d4a
Patch-set: 2
File: compiler/optimizing/code_generator_arm64.cc

2402:25-2404:62
Fri Mar 18 11:01:06 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7cd6320e_e020e294
Bytes: 110
Can we create a helper function for this and move the long comment there? (Instead of replicating it 4 times.)

2447:17-2447:70
Thu Mar 17 12:33:55 2016 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dccabe38_cb8b35db
Bytes: 19
you mean intrisify?

2447:17-2447:70
Thu Mar 17 13:54:04 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dccabe38_cb8b35db
UUID: 1ced36ca_2d0f4d86
Bytes: 439
I really meant replacing HInvoke* instructions by HIR constructs containing a floating-point HCompare instruction, akin to what we do for {Integer,Long}.compare() and {Integer,Long}.signum() (see art::InstructionSimplifierVisitor::SimplifyCompare).

"Intrinsify" is a bit ambiguous to me here.  Does it mean recognizing and tagging a function call an intrinsic? or actually turning a HInvoke instruction into ad hoc assembly code? or both?

