Revision: 78da0d7e968d96e432c449d7f471e9f59014eb76
Patch-set: 2
File: test/137-cfi/cfi.cc

271:0-271:39
Wed Sep 07 10:37:21 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 96992396_a2eb1e9f
Bytes: 101
Why this? If it's for your own experiment, it's as easy to just change line 96 to if ((false) && ....

271:0-271:39
Wed Sep 07 15:04:23 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 96992396_a2eb1e9f
UUID: 962843c7_8758d9fa
Bytes: 92
It's more expressive to name things, especially when they're used in two different places...

271:0-271:39
Wed Sep 07 15:05:42 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 962843c7_8758d9fa
UUID: f6741f0d_e54d368c
Bytes: 132
Name what? This is just behavior. The problem I have with such variables is that they don't scale if everyone starts doing the same.

271:0-271:39
Wed Sep 07 15:11:56 2016 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f6741f0d_e54d368c
UUID: 962843c7_a787dd45
Bytes: 354
I think that's bogus. I'd have to write

  MoreErrorInfo(pid, false /* sig_quit_on_fail */)

and

  if (!result && (false) /* sig_quit_on_fail */)

This is in the end exactly the same, except a named variable makes sure that across the code there is one common definition.

(For numbers we almost always ask to put "magic values" into named variables...)

