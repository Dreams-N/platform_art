Revision: 2cbaccb67e22c0b313a9785bfc65bcb4b25d0676
Patch-set: 1
File: oatdump/oatdump.cc

658:71-658:76
Tue Sep 16 20:20:28 2014 +0000
Author: Razvan A Lupusoru <1013855@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b0b1730f_0f5e755a
Bytes: 11
And x86? :)

658:71-658:76
Tue Sep 16 20:59:27 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b0b1730f_0f5e755a
UUID: d0b427fe_f678c09a
Bytes: 28
sorry, didn't know off hand.

659:43-659:53
Tue Sep 16 20:20:28 2014 +0000
Author: Razvan A Lupusoru <1013855@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d0b427fe_8bb4b9bb
Bytes: 211
Optimizing compilers that do heavy inlining and optimizations like unrolling might not like this upper limit. Likely not a concern for now but worth mentioning. I currently do not see what it is used for anyway.

659:43-659:53
Tue Sep 16 20:59:27 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d0b427fe_8bb4b9bb
UUID: d0b427fe_7685d04a
Bytes: 146
it is just used to prevent runaway printing. we were try to use oatdump on a partially corrupted file, which is why we have all the defensiveness.

784:10-784:89
Tue Sep 16 20:20:28 2014 +0000
Author: Razvan A Lupusoru <1013855@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d0b427fe_0b1b090c
Bytes: 143
Although this comment may be true for now, I imagine it need not be the case. Namely, maybe even Quick can elide putting in maps if not needed.

783:0-786:9
Tue Sep 16 19:56:47 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 90c0ef69_f4caf886
Bytes: 36
Nicolas, here is where I moved this.

800:0-805:5
Tue Sep 16 19:56:47 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d0b427fe_4be8f1c5
Bytes: 48
Razvan? Does this seem like a good place to you?

800:0-805:5
Tue Sep 16 20:20:28 2014 +0000
Author: Razvan A Lupusoru <1013855@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d0b427fe_4be8f1c5
UUID: b0b1730f_aa49af7a
Bytes: 314
As long as it is printed, doesn't matter much where it is placed. Though, from an analysis standpoint, it makes it a bit easier to look at this map next to the vmap. This is because for performance analysis and debugging, one tends to care about the locations and both this and vmap help with forming that picture.

800:0-805:5
Tue Sep 16 20:59:27 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b0b1730f_aa49af7a
UUID: 90c0ef69_ef922146
Bytes: 439
yes, i guess i see that. for now we are trying to keep it in order for actual oat generation debugging.

this is basically matching an internal change for now to keep things in sync. we can talk about where to move things.

I'd also like to consider making the various info even more optionally dumped so people with different use cases can dump different information. doing analysis, you probably don't care about oat file layout details.

