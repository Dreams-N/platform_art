Revision: 1340096c9cd76ec8f32c4f51e1b67a28a575c202
Patch-set: 1
File: runtime/debugger.cc

78:11-78:12
Sat Nov 21 00:04:22 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3b167790_4bad59aa
Bytes: 230
Should this maybe be m->GetInterfaceMethodIfProxy ?

Not sure what would happen if you tried to return an interface method, maybe it would just break everything else.

But that's probably better than returning a proxy method here.

78:11-78:12
Mon Nov 23 17:50:22 2015 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3b167790_4bad59aa
UUID: 5b1b2bb8_9a2cbd6e
Bytes: 97
No. We cannot break on proxy interface methods anyway. Also this preserves the original behavior.

80
Sat Nov 21 00:04:22 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1bfc537c_f26880c9
Bytes: 175
nit: This just seems like the usual path taken, despite the LIKELY on 77

IMHO it should be more like

  if (UNLIKELY(m->IsDefault()) { 
     ....
     return
  }

  return m;

80
Mon Nov 23 17:50:22 2015 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1bfc537c_f26880c9
UUID: bb2a67bd_b2628689
Bytes: 100
No most of the methods in any given program are not copied defaults so this is the less likely path.

335:61-335:71
Mon Nov 23 07:51:20 2015 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5bc96b78_5644f49c
Bytes: 273
For my understanding: we are interpreting a default method of an interface I on an object of type C implementing I.
What is the given ArtMethod 'm': is it I.m or C.m ?

Looking at this change, it seems to me it is C.m which is a copy of I.m + the kDefault flag. Am I right?

335:61-335:71
Mon Nov 23 17:50:22 2015 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5bc96b78_5644f49c
UUID: 5b1b2bb8_da3635be
Bytes: 237
It might be either. The IsInMethod function does the right comparison. We ensure that gBreakpoints[i].method_ is always the interface one in the constructor and the 'm' is most likely the copy (though it could be the original i suppose).

3301
Sat Nov 21 00:04:22 2015 +0000
Author: Igor Murashkin <1021471@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1b153384_aa084b6e
Bytes: 4
Why?

3301
Mon Nov 23 17:50:22 2015 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1b153384_aa084b6e
UUID: 3b167790_8e80ff1e
Bytes: 195
We cannot instrument all the copies of the default method since we don't know where they all are. Instead we just deoptimize everything to ensure we can see all the calls into the default method.

3301
Tue Nov 24 10:08:03 2015 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3b167790_8e80ff1e
UUID: fb921f65_2bdd5993
Bytes: 55
Sound like it is worth to add your comment in the code.

3392:48-3392:76
Mon Nov 23 07:51:20 2015 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: fb921f65_6b14c18e
Bytes: 117
The copy idiom is error-prone: FindFirstBreakpointForMethod also does pointer comparison, then should be updated too.

3392:48-3392:76
Mon Nov 23 17:50:22 2015 +0000
Author: Alex Light <1047769@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: fb921f65_6b14c18e
UUID: bb2a67bd_125432a7
Bytes: 91
I already did. It now calls the IsInMethod(ArtMethod*) function which does the right thing.

