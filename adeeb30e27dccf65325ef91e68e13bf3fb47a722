Revision: adeeb30e27dccf65325ef91e68e13bf3fb47a722
Patch-set: 9
File: compiler/optimizing/bounds_check_elimination.cc

1115:2-1115:10
Mon Sep 14 13:52:49 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 691f3755_956b44e3
Bytes: 4
drop

1115:2-1115:10
Mon Sep 14 18:19:31 2015 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 691f3755_956b44e3
UUID: a9420f4a_d25ae266
Bytes: 4
Done

File: compiler/optimizing/induction_var_analysis.cc

46:0-78:1
Mon Sep 14 13:52:49 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e9ea475e_a1003e0c
Bytes: 94
Move this to its own CL? If you associate a test case with it, it will make the review easier.

46:0-78:1
Mon Sep 14 18:19:31 2015 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e9ea475e_a1003e0c
UUID: c45e4afd_9249acfa
Bytes: 330
Happy to do this if you want (I agree it seems unrelated), but the reason I added this is that some of the SSA for the checker test is different between plain run and checker run (note: incoming, nothing in this code is indeterministic!).

This rotatate-to-front makes the code very robust against such minor changes in input SSA.

File: compiler/optimizing/induction_var_range.cc

143:0-148:5
Mon Sep 14 13:52:49 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 44209a82_64faaa3c
Bytes: 6
ditto?

143:0-148:5
Mon Sep 14 18:19:31 2015 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 44209a82_64faaa3c
UUID: a9420f4a_52383206
Bytes: 156
Needed for the wrap-around case (was in my presentation today). Again happy to move in own CL if you insist, but that needs putting a TODO in checkers test.

