Revision: 28f90fc6fc704ef50db1b5e48bbd5fae090d6cc7
Patch-set: 4
File: compiler/optimizing/intrinsics_mips64.cc

1883:29-1883:34
Wed Jul 13 15:14:03 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1ab2acf6_9ad94990
Bytes: 5
Drop.

1883:29-1883:34
Wed Jul 13 17:51:09 2016 +0000
Author: Chris Larsen <1071873@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1ab2acf6_9ad94990
UUID: 5acfc472_91f03134
Bytes: 4
Done

1888:69-1888:70
Wed Jul 13 15:14:03 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1ab2acf6_9aa78921
Bytes: 20
<< type.DebugName();

1888:2-1888:8
Wed Jul 13 15:14:03 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1ab2acf6_baa44d1d
Bytes: 54
I'd move this DCHECK at the beginning of the function.

1888:2-1888:8
Wed Jul 13 17:51:09 2016 +0000
Author: Chris Larsen <1071873@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1ab2acf6_baa44d1d
UUID: 5acfc472_d1fab90f
Bytes: 4
Done

1888:69-1888:70
Wed Jul 13 17:51:09 2016 +0000
Author: Chris Larsen <1071873@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1ab2acf6_9aa78921
UUID: 5acfc472_b1f53524
Bytes: 342
When I try to compile this, I get the following error:

art/compiler/optimizing/intrinsics_mips64.cc:1885:78: error: member reference base type 'Primitive::Type' is not a structure or union
  DCHECK(type == Primitive::kPrimInt || type == Primitive::kPrimLong) << type.DebugName();

I used "<< PrettyDescriptor(type)" instead. Is that correct?

1888:2-1888:8
Thu Jul 14 10:56:53 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5acfc472_d1fab90f
UUID: 1ab2acf6_1a97f960
Bytes: 96
Sorry, that was a typo; I meant:

  DCHECK(/* ... */) << type;

I'm fine with your solution too.

1892:23-1892:42
Wed Jul 13 15:14:03 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1ab2acf6_faaec5f8
Bytes: 27
INT64_C(0x8000000000000000)

1892:23-1892:42
Wed Jul 13 17:51:09 2016 +0000
Author: Chris Larsen <1071873@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1ab2acf6_faaec5f8
UUID: 5acfc472_f1ffbdfd
Bytes: 4
Done

1899:2-1899:22
Wed Jul 13 15:14:03 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1ab2acf6_5af09100
Bytes: 181
I guess this instruction addresses the case where `in` contains 0, because a logical right shift of 64 with DSRLV (resp. 32 with SRLV) is a no-op?  I would add a comment about that.

1899:2-1899:22
Wed Jul 13 17:51:09 2016 +0000
Author: Chris Larsen <1071873@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1ab2acf6_5af09100
UUID: 5acfc472_71564de6
Bytes: 4
Done

1921:28-1921:33
Wed Jul 13 15:14:03 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1ab2acf6_bad60d5d
Bytes: 6
Ditto.

1921:28-1921:33
Wed Jul 13 17:51:09 2016 +0000
Author: Chris Larsen <1071873@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1ab2acf6_bad60d5d
UUID: 5acfc472_11a8a1ee
Bytes: 4
Done

1926:2-1926:8
Wed Jul 13 15:14:03 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1ab2acf6_dab1015a
Bytes: 9
Likewise.

1926:69-1926:70
Wed Jul 13 15:14:03 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: bace00a2_97e066d3
Bytes: 20
<< type.DebugName();

1926:2-1926:8
Wed Jul 13 17:51:09 2016 +0000
Author: Chris Larsen <1071873@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1ab2acf6_dab1015a
UUID: 5acfc472_31a5a518
Bytes: 4
Done

1926:69-1926:70
Wed Jul 13 17:51:09 2016 +0000
Author: Chris Larsen <1071873@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: bace00a2_97e066d3
UUID: 5acfc472_51b2295e
Bytes: 18
See comment above.

