Revision: 4fa40c93c13e97ae9a97956f766d5df509c3af2c
Patch-set: 1
File: runtime/native/byte_swap_utils-inl.h

0
Tue May 19 20:00:42 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2d20e12c_bc848d5a
Bytes: 57
Strange to have an <x>-inl.h file without the <x>.h file.

0
Wed May 20 11:06:19 2015 +0000
Author: Narayan Kamath <1014443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2d20e12c_bc848d5a
UUID: 0d179dd9_debdb54a
Bytes: 93
Isn't that the convention for all inline headers ? or should this just be byte_swap_utils.h ?

0
Wed May 20 14:09:42 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0d179dd9_debdb54a
UUID: 0d179dd9_011e7061
Bytes: 456
Trivial inline methods usually go to .h and larger inline methods typically go to the -inl.h, though I often distinguish also on how many dependencies it pulls in. (And we currently have quite a mess in mirror classes pulling in way too much by including -inl.h from .h headers.)

The thing is, we usually have a class and its definition always goes to .h, not -inl.h. But there are only free functions here, so this is a pretty unusual case to start with.

53
Tue May 19 20:00:42 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2d20e12c_1c37b95e
Bytes: 37
Btw, thumb2, arm and arm64 has REV16.

File: runtime/native/byte_swap_utils_test.cc

28:8-28:17
Tue May 19 20:00:42 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0d179dd9_7ec909a6
Bytes: 27
constexpr size_t kAlignment

28:8-28:17
Wed May 20 11:06:19 2015 +0000
Author: Narayan Kamath <1014443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0d179dd9_7ec909a6
UUID: 2d20e12c_bfd6bfc6
Bytes: 4
Done

30:28-30:40
Tue May 19 20:00:42 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2d20e12c_3c715d08
Bytes: 12
kNumElements

30:28-30:40
Wed May 20 11:06:19 2015 +0000
Author: Narayan Kamath <1014443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2d20e12c_3c715d08
UUID: 0d179dd9_fec2f9d7
Bytes: 4
Done

31:5-31:20
Tue May 19 20:00:42 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2d20e12c_7c67d550
Bytes: 13
SwapAlignTest

31:5-31:20
Wed May 20 11:06:19 2015 +0000
Author: Narayan Kamath <1014443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2d20e12c_7c67d550
UUID: 2d20e12c_5fdc43e5
Bytes: 4
Done

32:21-32:59
Tue May 19 20:00:42 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0d179dd9_bec6c198
Bytes: 183
I'd prefer another template parameter, typename InitFunc. (Avoid std::function<> even in tests so that people don't get used to it. It allocates memory with the default operator new.)

32:21-32:59
Wed May 20 11:06:19 2015 +0000
Author: Narayan Kamath <1014443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0d179dd9_bec6c198
UUID: ed19690f_1de9f329
Bytes: 4
Done

48:7-48:18
Tue May 19 20:00:42 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0d179dd9_1ed6cd45
Bytes: 59
Looks more like dst_unaligned. And dst_align -> dst_offset.

48:7-48:18
Wed May 20 11:06:19 2015 +0000
Author: Narayan Kamath <1014443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0d179dd9_1ed6cd45
UUID: 0d179dd9_becc8109
Bytes: 4
Done

88:5-88:21
Tue May 19 20:00:42 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2d20e12c_9c58a98d
Bytes: 14
MemoryPeekTest

88:5-88:21
Wed May 20 11:06:19 2015 +0000
Author: Narayan Kamath <1014443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2d20e12c_9c58a98d
UUID: ed19690f_dda37b00
Bytes: 4
Done

114:5-114:21
Tue May 19 20:00:42 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2d20e12c_bc5d6d7c
Bytes: 14
MemoryPokeTest

114:5-114:21
Wed May 20 11:06:19 2015 +0000
Author: Narayan Kamath <1014443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2d20e12c_bc5d6d7c
UUID: 2d20e12c_fff51752
Bytes: 4
Done

