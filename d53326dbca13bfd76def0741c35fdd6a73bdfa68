Revision: d53326dbca13bfd76def0741c35fdd6a73bdfa68
Patch-set: 2
File: runtime/gc/heap.cc

68:0-69:60
Mon Mar 03 05:52:06 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7c8d0df2_40962e31
Bytes: 164
perhaps move to entypoint_utils.h. Please comment on why the runtime shutdown lock is necessary and not other heavier weight locks, like the exclusive mutator lock.

File: runtime/instrumentation.cc

34:0-34:48
Mon Mar 03 05:52:06 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7c8d0df2_e07ae246
Bytes: 40
or perhaps move the declaration here :-)

463:46-463:68
Mon Mar 03 18:55:24 2014 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7c58ad41_1d9075ef
Bytes: 356
Side question/wondering: would it make sense (and more robust) for SuspendAll() to always lock runtime_shutdown_lock_ in addition to the mutator lock as a general pattern? Otherwise, it might be easy to hit this sort of murky situation where a new thread might be in the middle of starting up when SuspendAll() is called? I don't know if this works or not.

File: runtime/instrumentation.h

170:41-170:81
Mon Mar 03 05:52:06 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7c8d0df2_2091aa37
Bytes: 33
+ , Locks::runtime_shutdown_lock_

