Revision: 7c82ba14837d4ad0d5c8748948e8b74c46b6cc7a
Patch-set: 4
File: /COMMIT_MSG

7:0-7:48
Fri Feb 27 07:48:25 2015 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 425ebbd0_a616a646
Bytes: 337
Not sure about that subject: we don't change how we *report* the exception but how we *detect* when we need to report the exception. It's more about getting rid of  the is_exception_reported_to_instrumentation_ flag from Thread, it's more a cleanup.

I'd change to something like "Change detection of exception reporting to the debugger"

File: runtime/thread.h

369:5-369:50
Fri Feb 27 07:36:02 2015 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 025843e4_846da6eb
Bytes: 423
This is an issue, at least for interpreter. We handle the exception in the "caller" (the method that called the native method). There the thread's current method is "caller". If the top method of the exception's stack is the "native" method, the test will always return false and we'll never report the exception.

I think it works if we consider the exception's top non-native method (aka the caller of the native method).

369:5-369:50
Fri Feb 27 10:36:13 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 025843e4_846da6eb
UUID: 42a15b0b_ce39e3fc
Bytes: 94
Good point. As discussed, I changed the code to discard native frames at the top of the stack.

