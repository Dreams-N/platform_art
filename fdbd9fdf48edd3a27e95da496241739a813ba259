Revision: fdbd9fdf48edd3a27e95da496241739a813ba259
Patch-set: 2
File: patchoat/patchoat.cc

491:0-495:3
Tue Jul 15 18:50:29 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 390c8c77_55417c1d
Bytes: 87
I don't understand this comment standalone without more context. Can you add some more?

File: runtime/base/scoped_flock.h

40:0-40:48
Tue Jul 15 18:50:29 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 19f188a2_51435677
Bytes: 173
the comment doesn't apply to both of these. I'd add its own comment since it is a utility function. we also have a scoped_flock_test which should be updated with the new API

File: runtime/class_linker.cc

1108:0-1112:1
Tue Jul 15 18:50:29 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b9f79c98_d11bc48c
Bytes: 59
this seems to be a much bigger change than i was expecting.

File: runtime/instruction_set.h

197:0-205:1
Tue Jul 15 18:50:29 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 390c8c77_15eed4d6
Bytes: 116
I'm a little surprised that the "standard" is thumb2 and not arm. thumb2 implies arm, but arm does not imply thumb2.

197:0-205:1
Tue Jul 15 20:41:30 2014 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 390c8c77_15eed4d6
UUID: f9dbd436_03b4f267
Bytes: 134
This is the correct setting. We use thumb2 for almost everything internally (only portable makes a difference), and we expect kThumb2.

File: runtime/utils.cc

1178:0-1191:1
Tue Jul 15 18:50:29 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b9f79c98_91381ce9
Bytes: 91
can't the above just use the above as a helper? Just add an out argument with the error_msg

1241:0-1255:1
Tue Jul 15 18:50:29 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b9f79c98_5147d463
Bytes: 207
I'd make the error an out argument as usual. then you can use that in the the implementation below as well, right? 

in general, anytime you are cutting and pasting instead of refactoring it is probably bad.

