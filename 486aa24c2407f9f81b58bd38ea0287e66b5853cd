Revision: 486aa24c2407f9f81b58bd38ea0287e66b5853cd
Patch-set: 1
File: compiler/optimizing/bounds_check_elimination.cc

78:0-83:9
Tue Feb 23 10:46:25 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 22c49160_788f1d18
Bytes: 141
Can you do this with a loop instead of recursion? Recursion in a compiler is prone to stack overflow.

Is the overflow check actually needed?

78:0-83:9
Tue Feb 23 17:15:36 2016 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 22c49160_788f1d18
UUID: 62a5a9c6_be19f0be
Bytes: 298
Good suggestion. I think I have a few other places I should change into loops.

As for the overflow, it is not strictly necessary for the deopt client (although it's doubtful it will help anywhere), but some of the other clients rely on not being to relaxed on integrating constants with symbolics.

File: test/449-checker-bce/src/Main.java

394:0-414:21
Tue Feb 23 10:46:43 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a2b881d5_7ced55aa
Bytes: 113
I venture that David would prefer CHECK-DAGs instead of CHECKs and a separate set of assertion for CHECK-NOTs. :)

394:0-414:21
Tue Feb 23 17:15:36 2016 +0000
Author: Aart Bik <1074526@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a2b881d5_7ced55aa
UUID: 82bb7df1_4a57b5a5
Bytes: 121
No, he grumbled a bit and shook his fist, but for such simple straight-line code he was willing to look the other way :-)

