Revision: 2119eeae217d763d8aafe8db62fc6618176c9e32
Patch-set: 16
File: compiler/common_compiler_test.cc

138:2-138:6
Thu May 28 19:59:01 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6d1bb95b_09249b65
Bytes: 92
Is this really necessary? size_t has better readability and is only two characters longer...

138:2-138:6
Fri May 29 00:25:26 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6d1bb95b_09249b65
UUID: 6d1bb95b_a4600e7f
Bytes: 4
Done

File: compiler/dex/quick/arm/int_arm.cc

1112:2-1112:7
Thu May 28 19:59:01 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6d1bb95b_c9ffe3f8
Bytes: 25
Maybe a DCHECK is enough?

1112:2-1112:7
Fri May 29 00:25:26 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6d1bb95b_c9ffe3f8
UUID: 0d54fde2_a12481aa
Bytes: 4
Done

File: compiler/dex/quick/arm64/call_arm64.cc

502:26-502:54
Thu May 28 19:59:01 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0d54fde2_e60e9f6a
Bytes: 13
TargetPtrReg.

502:26-502:54
Fri May 29 00:25:26 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0d54fde2_e60e9f6a
UUID: ed56c9ec_90e6e0b1
Bytes: 4
Done

File: compiler/dex/quick/gen_invoke.cc

543:12-543:16
Thu May 28 19:59:01 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0d54fde2_a67737cb
Bytes: 6
size_t

543:12-543:16
Fri May 29 00:25:26 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0d54fde2_a67737cb
UUID: ed56c9ec_f0f56c52
Bytes: 4
Done

547:44-547:48
Thu May 28 19:59:01 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6d1bb95b_e4e5a624
Bytes: 17
This seems wrong.

547:44-547:48
Fri May 29 00:25:26 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6d1bb95b_e4e5a624
UUID: 0d54fde2_61dc590d
Bytes: 4
Done

589:12-589:16
Thu May 28 19:59:01 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ed56c9ec_2ac865f5
Bytes: 6
size_t

589:12-589:16
Fri May 29 00:25:26 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ed56c9ec_2ac865f5
UUID: 0d54fde2_c1934532
Bytes: 4
Done

593:44-593:48
Thu May 28 19:59:01 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0d54fde2_a6501731
Bytes: 9
As above.

593:44-593:48
Fri May 29 00:25:26 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0d54fde2_a6501731
UUID: 6d1bb95b_aa0b7524
Bytes: 4
Done

File: compiler/dex/verified_method.cc

288:4-288:8
Thu May 28 19:59:01 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0d54fde2_2696e748
Bytes: 6
size_t

288:4-288:8
Fri May 29 00:25:26 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0d54fde2_2696e748
UUID: ed56c9ec_1024b065
Bytes: 4
Done

File: compiler/driver/compiler_driver-inl.h

307:8-307:12
Thu May 28 19:59:01 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6d1bb95b_04664227
Bytes: 6
size_t

307:8-307:12
Fri May 29 00:25:26 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6d1bb95b_04664227
UUID: 0d54fde2_217c116a
Bytes: 4
Done

File: compiler/image_writer.cc

1118:7-1118:18
Thu May 28 18:50:40 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0d54fde2_ab054243
Bytes: 22
Why is this necessary?

1118:7-1118:18
Fri May 29 00:25:26 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0d54fde2_ab054243
UUID: ed56c9ec_ea657dcd
Bytes: 56
Not necessary anymore, it used to do the copy and fixup.

File: compiler/optimizing/inliner.cc

151:33-152:87
Fri May 29 00:41:58 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ed56c9ec_e39203d0
Bytes: 46
Nicolas likes 1-on-a-line, please change back.

151:33-152:87
Fri May 29 01:00:04 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ed56c9ec_e39203d0
UUID: 0d54fde2_88679d4f
Bytes: 4
Done

File: compiler/utils/assembler.h

439:23-439:44
Fri May 29 00:41:58 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ed56c9ec_1ebd9af8
Bytes: 83
This needs an explanation (it is not obvious from just looking at the assembler...)

439:23-439:44
Fri May 29 01:00:04 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ed56c9ec_1ebd9af8
UUID: 0d54fde2_abd61b43
Bytes: 4
Done

File: patchoat/patchoat.cc

568:18-568:43
Fri May 29 00:41:58 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0d54fde2_a837015c
Bytes: 13
->AsClass() ?

568:18-568:43
Fri May 29 01:00:04 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0d54fde2_a837015c
UUID: ed56c9ec_39c27888
Bytes: 4
Done

File: runtime/class_linker.cc

289:2-289:6
Fri May 29 01:23:34 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b9f6d849_7197a09c
Bytes: 7
Really?

289:2-289:6
Fri May 29 01:52:25 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b9f6d849_7197a09c
UUID: ed56c9ec_d9340c5a
Bytes: 4
Done

416:1-417:37
Fri May 29 01:23:34 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0d54fde2_0b380700
Bytes: 14
Stale comment?

416:1-417:37
Fri May 29 01:52:25 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0d54fde2_0b380700
UUID: ed56c9ec_39dc3897
Bytes: 4
Done

4690:10-4690:16
Fri May 29 01:23:34 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b9f6d849_4cabe791
Bytes: 7
WTF?!?!

4690:10-4690:16
Fri May 29 01:52:25 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b9f6d849_4cabe791
UUID: ed56c9ec_99c364b8
Bytes: 24
I'll change it to auto**

File: runtime/class_linker.h

360:6-360:49
Fri May 29 03:09:31 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ed56c9ec_d48853f3
Bytes: 103
Why? This leads to CreateRuntimeMethod being SHARED..., which leads to parts of Runtime being SHARED...

File: runtime/entrypoints/entrypoint_utils.cc

301:6-301:64
Fri May 29 01:41:56 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0d54fde2_8b407715
Bytes: 26
Could be made a constexpr.

301:6-301:64
Fri May 29 01:52:25 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0d54fde2_8b407715
UUID: b9f6d849_6c68e36d
Bytes: 52
I don't think OFFSETOF_MEMBER is constexpr friendly.

File: runtime/gc/collector/mark_sweep.cc

559:76-559:85
Fri May 29 01:41:56 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b9f6d849_0c5ddff8
Bytes: 1
?

559:76-559:85
Fri May 29 01:52:25 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b9f6d849_0c5ddff8
UUID: ed56c9ec_d9e6cc59
Bytes: 11
Another CL.

559:76-559:85
Fri May 29 03:20:01 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ed56c9ec_d9e6cc59
UUID: ed56c9ec_141f3b16
Bytes: 93
Yeah, looking at LogMessage, this should be a separate cleanup and is fine the way it is now.

File: runtime/instrumentation.cc

692:22-692:43
Fri May 29 01:41:56 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0d54fde2_6b0ef3e9
Bytes: 38
Shouldn't that be IsDeoptimizedMethod?

692:22-692:43
Fri May 29 01:52:25 2015 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0d54fde2_6b0ef3e9
UUID: b9f6d849_ac7dcb2b
Bytes: 4
Done

File: runtime/mirror/class.h

791
Fri May 29 03:09:31 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b9f6d849_eca1932d
Bytes: 33
This is pretty ugly, but oh well.

File: runtime/oat_file.h

101:45-101:88
Fri May 29 03:09:31 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0d54fde2_16e58ad2
Bytes: 20
No longer necessary?

