Revision: 2e549e6dcef8144e877de93c1120f0da0cc061f2
Patch-set: 7
File: runtime/jit/jit_instrumentation.cc

68:0-69:1
Thu Sep 10 16:06:07 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a4bdd6e7_40faff3b
Bytes: 35
Why keep this around in this shape?

108:6-108:17
Thu Sep 10 16:08:21 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 44517aa7_9f3177d4
Bytes: 22
when can this be null?

File: runtime/jit/profiling_info.h

77:6-80:57
Thu Sep 10 16:08:21 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e436ee6e_21704e61
Bytes: 127
Don't really understand the test. I would have expected:

 !classes_[1].IsNull() && classes_[kIndividualCacheSize - 1].IsNull()

83:53-83:54
Thu Sep 10 16:06:07 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 84d4522f_bd0a2097
Bytes: 179
This is a weird size. As the overall size is not a power of two, it means you can't access something in the cache_ array optimally (or there may be padding, but I don't think so).

