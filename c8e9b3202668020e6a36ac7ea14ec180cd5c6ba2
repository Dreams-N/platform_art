Revision: c8e9b3202668020e6a36ac7ea14ec180cd5c6ba2
Patch-set: 5
File: runtime/debugger.cc

3127:8-3127:22
Mon Sep 01 13:56:45 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 133de99e_91227ec3
Bytes: 161
This should be the first test to know if we need to do something. After that, I'd test for native and proxy methods, then whether this is the right kind of step.

3127:8-3127:22
Tue Sep 02 17:12:26 2014 +0000
Author: Dániel Mihályi <1051274@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 133de99e_91227ec3
UUID: d398b1f7_0549d879
Bytes: 4
Done

3136:6-3136:7
Mon Sep 01 13:56:45 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d398b1f7_3c9ef1de
Bytes: 75
m can be NULL in the case of an upcall, right? It's worth adding a comment.

3136:6-3136:7
Tue Sep 02 17:12:26 2014 +0000
Author: Dániel Mihályi <1051274@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d398b1f7_3c9ef1de
UUID: 133de99e_77618288
Bytes: 4
Done

3138:8-3138:22
Mon Sep 01 13:56:45 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d398b1f7_1cd69586
Bytes: 15
Same than above

3138:8-3138:22
Tue Sep 02 17:12:26 2014 +0000
Author: Dániel Mihályi <1051274@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d398b1f7_1cd69586
UUID: 1326c99c_0983cdf9
Bytes: 4
Done

3141:4-3141:13
Mon Sep 01 13:56:45 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 33582d1a_eff76135
Bytes: 30
This is a ReaderMutexLock now.

3141:4-3141:13
Tue Sep 02 17:12:26 2014 +0000
Author: Dániel Mihályi <1051274@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 33582d1a_eff76135
UUID: 1326c99c_498dc521
Bytes: 46
It is defined as Mutex or do I miss something?

3142:37-3142:38
Mon Sep 01 13:56:45 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 133de99e_d1432659
Bytes: 92
Don't need to look for a breakpoint if m == NULL: we can't have set breakpoint in this case.

3142:37-3142:38
Tue Sep 02 17:12:26 2014 +0000
Author: Dániel Mihályi <1051274@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 133de99e_d1432659
UUID: d398b1f7_453be0e2
Bytes: 79
I don't understand, I think at that line it is guaranteed that m is not nullptr

File: runtime/entrypoints/quick/quick_trampoline_entrypoints.cc

820:4-825:40
Mon Sep 01 13:56:45 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d398b1f7_5cd01d88
Bytes: 19
Why is this needed?

820:4-825:40
Tue Sep 02 17:12:26 2014 +0000
Author: Dániel Mihályi <1051274@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d398b1f7_5cd01d88
UUID: 1326c99c_2967a9a0
Bytes: 398
When we place a breakpoint in a static initialiser and it get caught, then in that state the upcall we can see in the stack (in Eclipse, for example) is the caller (method which called a static method that caused the static intialization), not the callee (static method that caused static initialization), but in interpreter mode the upcall is the callee and stepping out get us back to the callee.

File: runtime/interpreter/interpreter_common.cc

672:8-672:31
Mon Sep 01 13:56:45 2014 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d398b1f7_dc96edc7
Bytes: 120
Can we move that into Dbg::IsForcedInterpreterNeededForCalling please? I'd prefer we limit access to debugger internals.

672:8-672:31
Tue Sep 02 17:12:26 2014 +0000
Author: Dániel Mihályi <1051274@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d398b1f7_dc96edc7
UUID: 1326c99c_8975fd4b
Bytes: 4
Done

