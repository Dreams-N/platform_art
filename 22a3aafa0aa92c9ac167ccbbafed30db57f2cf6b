Revision: 22a3aafa0aa92c9ac167ccbbafed30db57f2cf6b
Patch-set: 1
File: runtime/stack.cc

966:0-968:96
Tue Oct 06 15:34:01 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 35703a18_2a42bb2e
Bytes: 189
TBH, this code is already aware that it needs to deal with inlined frames specially. How about having static a ComputeNonInlinedFrames in StackVisitor? And then do the math dance just here?

966:0-968:97
Tue Oct 06 15:34:01 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b57c2af2_ceadb765
Bytes: 67
Nit: method on same line as frame_id and arguments in the new line.

966:0-968:97
Tue Oct 06 15:42:28 2015 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b57c2af2_ceadb765
UUID: 75763214_6f5da164
Bytes: 4
Done

966:0-968:96
Tue Oct 06 15:42:28 2015 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 35703a18_2a42bb2e
UUID: 156b3632_693761ab
Bytes: 163
Well I placed it in Instrumentation because it really depends on the way instrumentation treats inlined frames. Who knows if we visit inlined frames in the future?

966:0-968:96
Tue Oct 06 15:50:23 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 156b3632_693761ab
UUID: 75763214_0f37cd16
Bytes: 176
OK, so how about passing everything to ComputeFrameId and avoid doing a stack walk there?

size_t frame_id = ComputeFrameId(num_frames, cur_depth, number_of_inlined_frames);

?

966:0-968:96
Tue Oct 06 16:04:52 2015 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 75763214_0f37cd16
UUID: 35703a18_6a3cb3a5
Bytes: 402
That does not work if the current visitor visits inlined frames (num_frames would include all inlined frames in the stack). So you really want the number of frames *without* inlined frames (because instrumentation ignores them). That's what Instrumentation::ComputeFrameId does.
Unless your 'number_of_inlined_frames' is the total number of inlined frames in the stack? That would require a stack walk.

966:0-968:96
Tue Oct 06 16:16:53 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 35703a18_6a3cb3a5
UUID: 35703a18_8a300fca
Bytes: 503
Ok I see. Not the simplest thing in the world this code :-( I think what confuses me is that you pass some kind of current state (depth_without_inlined_frame) to a static method that will use that state. But now I understand what you're asking is "compute the frame id of that method at depth X".

Still, you're implicitly encoding in this code that you expect instrumentation to not deal with inlined frames, right? So you could pass both information: cur_depth_ and current_number_of_inlined_frames_.?

