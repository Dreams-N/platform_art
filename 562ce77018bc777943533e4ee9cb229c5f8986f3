Revision: 562ce77018bc777943533e4ee9cb229c5f8986f3
Patch-set: 2
File: compiler/optimizing/intrinsics_arm.cc

241:7-241:11
Wed Jul 29 11:15:42 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: cd73ca92_55262c69
Bytes: 82
Use CompareAndBranchIfNonZero() and relax the input location (don't force R0, R1).

262:2-262:64
Wed Jul 29 11:20:04 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 8d9472c2_1b2cdb49
Bytes: 104
Add a comment similar to the one from line 238 to explain why you're forcing (R0, R1) as input location.

File: disassembler/disassembler_arm.cc

1459:23-1459:29
Wed Jul 29 11:15:42 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0d8962a8_bf159700
Bytes: 51
Why not 0xf0f0? What are the op3 != 0 instructions?

File: test/082-inline-execute/src/Main.java

1049:66-1049:67
Wed Jul 29 11:15:42 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 8d9472c2_1b7bfb36
Bytes: 131
This will be cleaner if you change "+" to "|" and get rid of the Math.max().
The test above already covers numberOfLeadingZeros(2).

1051
Wed Jul 29 11:15:42 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6d657ec3_1aa93d13
Bytes: 140
This isn't actually testing numberOfLeadingZeros(0). Please add that back outside the loop.
(Sorry for misleading you in my comment on PS1.)

