Revision: 457af653dff745b2f1ad50eb181a77c92fefdf34
Patch-set: 3
File: compiler/optimizing/nodes.cc

467:19-467:25
Wed Sep 03 23:54:01 2014 +0000
Author: Razvan A Lupusoru <1013855@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 10807fc3_b6ec289a
Bytes: 47
Should this also capture operand commutativity?

467:19-467:25
Thu Sep 04 09:45:02 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 10807fc3_b6ec289a
UUID: 90d1cfe4_52413423
Bytes: 170
I think I'd rather have instructions order their inputs consistently (eg ordered by id), than complicate the equality.

But that's a good point for a future optimization.

470:6-470:35
Mon Sep 08 14:05:40 2014 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 90d1cfe4_61e3406a
Bytes: 277
I fail to see the difference between a "kind" and a "type".   Perhaps you should state it more clearly in the definition of `KindEquals()' in `compiler/optimizing/nodes.cc'.  In particular, what's the difference between `!KindEquals(other)' and `GetType() != other->GetType()'?

470:6-470:35
Mon Sep 08 14:15:02 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 90d1cfe4_61e3406a
UUID: 90fd4f75_95848651
Bytes: 145
Yeah I agree it's confusing. I could rename KindEquals into InstructionKind, what do you think?

The GetType is the Java type of the instruction.

File: compiler/optimizing/nodes.h

484:6-484:17
Wed Sep 03 23:54:01 2014 +0000
Author: Razvan A Lupusoru <1013855@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 10807fc3_39f80bde
Bytes: 132
Should exceptions be captured as side-effects? How are side-effects of the following instructions captured: move-exception and sget?

484:6-484:17
Thu Sep 04 09:45:02 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 10807fc3_39f80bde
UUID: d0a0a75c_7cf7596b
Bytes: 407
As you can see, the flags I've put in here are pretty basic: all or nothing. In a former project, exceptions were dealt separately, which was a bit annoying, so we might consider putting exceptions in this class.

Note that move-exception do not exist at this level (there is no dex register). About sget, it will be decomposed in a series of instructions (clinit, static-get), where the clinit might throw.

504:23-504:44
Wed Sep 03 23:54:01 2014 +0000
Author: Razvan A Lupusoru <1013855@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f04e8b81_9111ffbc
Bytes: 237
Seems that a future enhancement here should be being more explicit with the semantics and differentiate between all "somethings".

From the uses below seems that this is being used for heap stores and depends on something is a heap load.

504:23-504:44
Thu Sep 04 09:45:02 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f04e8b81_9111ffbc
UUID: 90d1cfe4_3240301d
Bytes: 112
Yes, this will be refined the further we go. The current class is just to have an abstraction over side effects.

616:5-616:71
Mon Sep 08 14:05:40 2014 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 90fd4f75_b5154a5d
Bytes: 130
Maybe add that "data" here refers only to information stored in the instruction itself, and does not take its inputs into account?

616:5-616:71
Mon Sep 08 14:15:02 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 90fd4f75_b5154a5d
UUID: 90fd4f75_55833e4a
Bytes: 4
Done

616:72-617:43
Mon Sep 08 14:05:40 2014 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 90d1cfe4_0186f490
Bytes: 134
This check is not enforced in the implementation, so I guess this means "otherwise this method will fail/its behavior is not defined".

616:72-617:43
Mon Sep 08 14:15:02 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 90d1cfe4_0186f490
UUID: 90fd4f75_757e4286
Bytes: 4
Done

