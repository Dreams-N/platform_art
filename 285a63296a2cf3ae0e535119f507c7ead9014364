Revision: 285a63296a2cf3ae0e535119f507c7ead9014364
Patch-set: 1
File: compiler/optimizing/nodes.cc

469:14-469:31
Wed Oct 01 10:09:57 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 70529c24_86e66aea
Bytes: 26
What motivated this check?

469:14-469:31
Wed Oct 01 11:24:39 2014 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 70529c24_86e66aea
UUID: 504f587e_a5783e33
Bytes: 395
Before this change, the case of a phi having itself as input was not handled properly: it would abort with the "There is no dominance between phis of a same block" error.

I came across this issue when I started to use HOptimization with existing optimization passes such as SsaDeadPhiElimination and SsaRedundantPhiElimination (see this CL: https://android-review.googlesource.com/#/c/109480/).

469:14-469:31
Wed Oct 01 12:17:00 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 504f587e_a5783e33
UUID: f083ecc2_222e8e32
Bytes: 127
Yeah, as discussed, we should fix the caller (the graph checker) to not call this method when dealng with phis and uses/inputs.

469:14-469:31
Wed Oct 01 12:35:24 2014 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f083ecc2_222e8e32
UUID: f083ecc2_22652e8c
Bytes: 113
Done in https://android-review.googlesource.com/#/c/109383/2.

What should we do regarding `inst.Dominate(inst)'?

