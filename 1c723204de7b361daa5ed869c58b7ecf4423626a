Revision: 1c723204de7b361daa5ed869c58b7ecf4423626a
Patch-set: 13
File: compiler/optimizing/ssa_liveness_analysis.h

575:0-575:49
Wed Apr 15 14:17:02 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b0926a12_66fa64f5
Bytes: 45
Why both?
And isn't the new one at the start?

575:0-575:49
Thu Apr 16 11:35:20 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b0926a12_66fa64f5
UUID: 90a1e660_85ce8833
Bytes: 286
It's just easier and the penalty is negligible. I've now refactored it...
original interval: done properly, but need to be a little conservative (don't know exactly where the linear scan is at the moment).
new interval: moved StartNewScan inside reg alloc and therefore not needed here.

646:2-646:7
Wed Apr 15 14:17:02 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b0926a12_86ff70e2
Bytes: 15
Drop the const.

646:2-646:7
Thu Apr 16 11:35:20 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b0926a12_86ff70e2
UUID: 709c722a_44864463
Bytes: 51
Done. But now the functions cannot be const either.

714:49-714:60
Wed Apr 15 14:17:02 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 709c722a_e45af00a
Bytes: 67
Explain why this has to be slow. Should you DCHECK(kIsDebugBuild) ?

714:49-714:60
Thu Apr 16 11:35:20 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 709c722a_e45af00a
UUID: 709c722a_8f2d4516
Bytes: 4
Done

743:49-743:60
Wed Apr 15 14:17:02 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 709c722a_04583c10
Bytes: 5
ditto

743:49-743:60
Thu Apr 16 11:35:20 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 709c722a_04583c10
UUID: 90a1e660_70f0d861
Bytes: 4
Done

820:27-820:34
Wed Apr 15 14:17:02 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 90a1e660_451ac0a5
Bytes: 38
Nullptr is returned -> Returns nullptr

820:27-820:34
Thu Apr 16 11:35:20 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 90a1e660_451ac0a5
UUID: 709c722a_2f22f122
Bytes: 4
Done

