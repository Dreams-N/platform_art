Revision: b9aec2ccd8b9f39a4ddadde5ca8304cea6b1b188
Patch-set: 4
File: runtime/class_linker.cc

87:22-87:44
Mon Apr 27 08:39:40 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 500f6eb1_6a5bb710
Bytes: 40
I'd also explain why you need this flag.

87:22-87:44
Mon Apr 27 09:45:14 2015 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 500f6eb1_6a5bb710
UUID: 30375a6d_01abca01
Bytes: 47
Agreed, I don't see why we need the flag as is.

747:17-747:18
Mon Apr 27 09:45:14 2015 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 90e3a61e_8ce847ab
Bytes: 81
Shouldn't it be '<' here to match the operator< ? Otherwise it's worth a comment.

809:4-809:33
Mon Apr 27 09:45:14 2015 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 500f6eb1_0a167bfb
Bytes: 121
We should also clear the field of the object. I find it dangerous to delete a pointer and still may be able to access it.

815:4-815:35
Mon Apr 27 09:45:14 2015 +0000
Author: Sebastien Hertz <1029223@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 90e3a61e_0cb0d7b9
Bytes: 49
Shouldn't we delete the DEX file in a destructor?

820:0-820:82
Sat Apr 25 00:56:03 2015 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b0d42a38_d6bdbafa
Bytes: 72
probably this should have a doc comment explaining the overall approach.

820:0-820:82
Sat Apr 25 03:23:02 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b0d42a38_d6bdbafa
UUID: d0d99e70_171d7e8f
Bytes: 4
Done

825:0-826:32
Mon Apr 27 08:39:40 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 30375a6d_810cbaf0
Bytes: 76
This comment is misplaced. You probably want to explain why you need a lock.

829:43-829:47
Mon Apr 27 08:39:40 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 500f6eb1_2a65bfc5
Bytes: 55
'heap' is overloaded. Could you rename this to 'queue'?

836:54-836:55
Mon Apr 27 08:39:40 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 30375a6d_610f36e6
Bytes: 17
This looks magic.

859:15-859:23
Mon Apr 27 08:39:40 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 90e3a61e_cc1c0f6c
Bytes: 22
the heap -> the queue.

943:83-943:95
Sat Apr 25 00:56:03 2015 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: f0f222e5_32d76e42
Bytes: 64
seems confusing, can we look know here and log what will happen?

943:83-943:95
Sat Apr 25 03:23:02 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: f0f222e5_32d76e42
UUID: b0d42a38_1672220c
Bytes: 4
Done

File: test/138-duplicate-classes-check/build

18:0-31:2
Mon Apr 27 08:39:40 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 500f6eb1_0a62fbbd
Bytes: 68
Explain why you need a custom build and can't use the existing ones.

File: test/138-duplicate-classes-check/src/A.java

22:4-23:26
Mon Apr 27 08:39:40 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 90e3a61e_ac11c351
Bytes: 20
Even for optimizing?

File: test/138-duplicate-classes-check2/build

17:0-32:2
Mon Apr 27 08:39:40 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 500f6eb1_ea4d6751
Bytes: 50
Copy-paste from previous build file. Please avoid.

File: test/138-duplicate-classes-check2/src/FancyLoader.java

2:0-2:53
Mon Apr 27 08:39:40 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 500f6eb1_8a4cab52
Bytes: 93
Is that the exact same file as in the other test??

Maybe it's worth using a utils directory?

