Revision: 25dd52c6e43a9465b500f3990a2e685618d67595
Patch-set: 1
File: compiler/optimizing/code_generator_x86.cc

370:25-371:40
Thu Aug 20 13:32:13 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 44e3394a_61139665
Bytes: 1081
It's odd that `ReadBarrierSlowPathX86::ReadBarrierSlowPathX86` and `CodeGeneratorX86::GenerateReadBarrier` have non matching signatures (the last two arguments are swapped):

  ReadBarrierSlowPathX86::ReadBarrierSlowPathX86(HInstruction* instruction,
                                                 Location out,
                                                 Location ref,
                                                 Location obj,
                                                 Location index,
                                                 uint32_t offset);

vs

  void CodeGeneratorX86::GenerateReadBarrier(HInstruction* instruction,
                                             Location out,
                                             Location ref,
                                             Location obj,
                                             uint32_t offset,
                                             Location index);

Shouldn't the former match the latter (so that `index` can still have a default value in `CodeGeneratorX86::GenerateReadBarrier`)?

1689:50-1689:58
Thu Aug 20 18:08:45 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 84253145_f6353e62
Bytes: 277
Note: the reference (the class pointer) has already loaded at 1687 and passed into GenerateReadBarrier here. It's fine for now. But if we do a fast path, we need to do a "is_gray" load/check before the ref load (that is, defer the ref load likely into the GenerateReadBarrier).

5258:0-5297:1
Thu Aug 20 09:42:09 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a45875e6_a4d78233
Bytes: 279
So the problem is that the register allocator does not consider fixed register inputs to be "live registers" at the point of the call. We might need another CallKind to make it so.

For example, I think we do not currently support a fixed input that needs to survive a slow path.

5258:0-5297:1
Thu Aug 20 16:53:44 2015 +0000
Author: Man Cao <1073545@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a45875e6_a4d78233
UUID: e430ad80_b9d7bb33
Bytes: 206
Yes. I discussed this issue with Mingyao, and tried several other approaches including modifying register allocator slightly, or adding a fake HIR instruction to record live registers, but they didn't work.

File: compiler/optimizing/intrinsics_x86.cc

1424:28-1424:44
Thu Aug 20 13:32:13 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 847a9131_2b483980
Bytes: 9
down_cast

