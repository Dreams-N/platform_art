Revision: 63deda28a83808c3c9fb24875ca3b7a39a3bc1cd
Patch-set: 1
File: runtime/verifier/register_line.h

54
Fri Jun 06 22:17:09 2014 +0000
Author: Dimitry Ivanov <1041673@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3f162cdd_2d283b10
Bytes: 7
malloc?

54
Fri Jun 06 22:30:27 2014 +0000
Author: Dimitry Ivanov <1041673@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3f162cdd_2d283b10
UUID: 7f33447f_654159c7
Bytes: 73
another possibility is to call operator new(sizeof ...) instead of new []

54
Fri Jun 06 22:36:10 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7f33447f_654159c7
UUID: ff749443_8ef5bbed
Bytes: 66
yeah, it seems better to fix the allocation site that hack delete?

54
Fri Jun 06 23:36:47 2014 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ff749443_8ef5bbed
UUID: 1f1b2808_18d56f51
Bytes: 188
This is used in a unique_ptr, we would still need the hack delete to call free or else we get the: "free() / delete / delete []" error due to allocating with malloc and freeing with delete

54
Sat Jun 07 00:06:00 2014 +0000
Author: Dimitry Ivanov <1041673@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1f1b2808_18d56f51
UUID: bf505ca5_ee9241d0
Bytes: 204
if I understand this correctly:

unique_ptr calls delete obj -> sequence of d-tor + operator delete()

If create allocates using operator new instead of new uint8_t[], everything should become consistent?

54
Sat Jun 07 00:07:31 2014 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7f33447f_654159c7
UUID: 7f33447f_684130c7
Bytes: 35
Actually, this seems to work, done.

296
Fri Jun 06 22:08:22 2014 +0000
Author: Dimitry Ivanov <1041673@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: bf505ca5_c83bbc08
Bytes: 76
is there other way? I don't really like this delete -> delete[] replacement.

296
Fri Jun 06 22:12:52 2014 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: bf505ca5_c83bbc08
UUID: bf505ca5_aee99922
Bytes: 104
We allocate it in Create using new byte[], maybe irogers knows a better way? This is all I can think of.

