Revision: 48699fb0b0662d9a4fa593d0bd2a7d5ace83e34e
Patch-set: 2
File: compiler/driver/compiler_driver.cc

2277:0-2280:3
Tue Apr 07 16:34:17 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 637aea34_abf18967
Bytes: 128
Not a big fan of special casing this. When are those results deleted then?

How about just marking the method as non-inlineable?

2277:0-2280:3
Tue Apr 07 16:35:56 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 637aea34_abf18967
UUID: 832a7e12_3ae4f94e
Bytes: 185
Currently results are never deleted (until the driver is destroyed).

I don't understand your comment. You really want to disable inlining for any method that has been already compiled?

2277:0-2280:3
Tue Apr 07 16:40:08 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 832a7e12_3ae4f94e
UUID: a3706250_ed2fa507
Bytes: 41
Only if the method could not be verified.

2277:0-2280:3
Tue Apr 07 16:46:27 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a3706250_ed2fa507
UUID: 832a7e12_9db507e5
Bytes: 238
That is not the point for Jeff, at least. Jeff needs verifier information to correctly fix things up for his string stuff. As long as it's a simple flag, e.g., Calin's work, I guess using the inline-disable flag and deleting here is fine.

2277:0-2280:3
Wed Apr 08 09:24:38 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 832a7e12_9db507e5
UUID: 83fd1eeb_bce821ab
Bytes: 188
Given the comment line 2277, it all indicates this CL is for Calin's work. Jeff, what is is that you require verification results? Optimizing won't inline allocations as of today anyway...

2277:0-2280:3
Wed Apr 08 15:19:38 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 83fd1eeb_bce821ab
UUID: 63f82afb_e4f7b008
Bytes: 343
Jeff needs verifier data to fix up replacements of String <init> calls (you need to insert copies to [or fixup] all register copies with the uninitialized object). It doesn't help that you won't really inline, you'll still try to build the graph at least once, and if that's after the inline candidate itself was compiled, Jeff's data is lost.

2277:0-2280:3
Thu Apr 09 22:38:06 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 63f82afb_e4f7b008
UUID: a38a229d_ddc98b59
Bytes: 142
I don't understand. Why does it matter that we still try to build the graph? Regardless of the string data, we're going to not inline anyways.

2277:0-2280:3
Thu Apr 09 23:04:47 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a38a229d_ddc98b59
UUID: e356daec_9e1a816f
Bytes: 177
Jeff is intervening in the build process, as all String.<init> calls need to go to StringFactory.init. But for that you need to keep track of copies of the uninitialized object.

2277:0-2280:3
Fri Apr 10 08:37:23 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e356daec_9e1a816f
UUID: e3617abc_775fb0f9
Bytes: 539
I see. So about these verified_method objects. They're all being created before any compilation right? So deleting one after its "main" compilation is sort of an optimization.

Since we'll probably end up recompiling it at runtime, potentially many times, if we ever need those results (and Jeff is currently putting that requirement), we'll probably have to keep them around, instead of verifying again and again.

Jeff: how hard would it be to not rely on the verifier? I guess "baseline" compilation would require data flow analysis....

2277:0-2280:3
Fri Apr 10 15:28:38 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e3617abc_775fb0f9
UUID: 636d8ab3_2bc944a7
Bytes: 490
Yes, deletion was an optimization of mathieuc for svelte devices. Originally we kept all of them around until driver shutdown.

Yeah, you'd need a dataflow analysis to track which registers have uninitialized copies that magically become fixed. As Quick needs to do the same, I told Jeff to use the verifier results for the time being - that's what VerifiedMethod is for, after all. I think that approach is the right one until 1) Quick is deprecated and 2) we do re-compilation at runtime.

