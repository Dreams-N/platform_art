Revision: 7a358766cd0e8c8b7a59ff80bf0e0e998a242f4c
Patch-set: 1
File: runtime/native_bridge_art_interface.cc

137:0-137:54
Mon May 25 06:12:10 2015 +0000
Author: Eric Lin <1051588@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6d11f908_d94d334e
Bytes: 166
doesn't it conflict with comments "Currently, only SIGSEGV is
supported by the runtime"? in native_bridge.h.Maybe change the comments to be "decided by native bridge"

137:0-137:54
Tue May 26 16:46:08 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6d11f908_d94d334e
UUID: 4d0995dc_d174d8fa
Bytes: 121
Yes, that was an oversight when merging that CL, the comment should have been removed (as seen in the review discussion).

134:2-142:7
Mon May 25 06:12:10 2015 +0000
Author: Eric Lin <1051588@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6d11f908_f9d10fd2
Bytes: 328
Instead of querying native bridge, what if add a new member in NativeBridgeRuntimeCallbacks, like SetNativeBridgeSignalHandler()? The benefit is: native bridge can decide which signal to "claim" at any time, rather than only in IntializeNativeBridge(). Then native bridge may fully remove sigaction() usage - seems more elegant?

134:2-142:7
Thu May 28 17:17:42 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6d11f908_f9d10fd2
UUID: 8d470d3e_75717a07
Bytes: 449
Better we keep this as it is. First I thought the suggestion is ok, but then I overlooked the sigaction part...

I think this should be part of the setup process. We should handle only native bridge specific signals and I think they should be well known before and not modified dynamically, right? 

The goal here is to be sure that nb handlers are run before. Dragging apps sigaction into this would create problems (e.g. why would they go first?).

File: sigchainlib/sigchain.cc

80:7-80:47
Thu May 28 16:01:34 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 8d470d3e_3540d213
Bytes: 108
small consistency issue: Set*Managed*Handler sets a *Special*SignalHandler.

I'd use the same name for both.

