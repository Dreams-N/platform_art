Revision: 33d7d90162f69f2bd1a6a8d199fc80cb469a17bd
Patch-set: 2
File: runtime/class_linker.cc

3462:24-3462:53
Thu Jun 30 17:33:20 2016 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ddc00e18_937484e1
Bytes: 38
Could use java_lang_Object from above.

5028:0-5028:11
Thu Jun 30 17:33:20 2016 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ddc00e18_d351ac4e
Bytes: 40
What is with the namespace keyword here?

5028:0-5028:11
Thu Jun 30 17:38:04 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ddc00e18_d351ac4e
UUID: 20d49f7c_07be3613
Bytes: 218
You don't like anonymous namespaces? I think they are better than marking methods as "static" (that's C-style, not C++).

I usually add comments:

  namespace {  // anonymous namespace
  ...
  }  // anonymous namespace

5030:37-5030:42
Thu Jun 30 15:40:02 2016 +0000
Author: Artem Udovichenko <1083288@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 20065fd0_1703f407
Bytes: 124
Should I use StackHandleScope here?
I looked at ClassLinker::LinkSuperClass and found that it does not use StackHandleScope.

5030:37-5030:42
Thu Jun 30 17:33:20 2016 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 20065fd0_1703f407
UUID: ddc00e18_9319e4ce
Bytes: 130
That would only be necessary if there was thread suspension in this function, and there isn't.

Also this line is longer than 100.

File: runtime/class_linker_test.cc

151:23-151:36
Thu Jun 30 17:33:20 2016 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ddc00e18_73631828
Bytes: 70
We could check that all of the methods in the IMT are runtime methods.

