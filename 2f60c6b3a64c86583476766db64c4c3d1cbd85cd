Revision: 2f60c6b3a64c86583476766db64c4c3d1cbd85cd
Patch-set: 2
File: runtime/mem_map.cc

111:9-111:38
Sat Mar 15 00:43:17 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dcb1990e_c4206f2b
Bytes: 52
can we remember where we left off for the next call?

111:9-111:38
Mon Mar 17 18:05:47 2014 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dcb1990e_c4206f2b
UUID: dcb1990e_135c5768
Bytes: 4
Done

111:0-112:21
Sat Mar 15 00:43:17 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5cbf69de_8c7bb34b
Bytes: 42
I find the ptr/ptr2 to be a bit confusing.

111:0-112:21
Mon Mar 17 18:05:47 2014 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5cbf69de_8c7bb34b
UUID: fcb49dfd_d7093bc3
Bytes: 16
tail_ptr better?

117:12-117:17
Fri Mar 14 20:54:29 2014 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dcb1990e_4f291d9a
Bytes: 170
This could be redundant, but would it make sense to also check errno == ENOMEM in the 'else' block of this if statement to be conservative? I noticed this in 'man msync'.

117:12-117:17
Sat Mar 15 00:43:17 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dcb1990e_4f291d9a
UUID: dcb1990e_c4ce2f4a
Bytes: 92
Yes, I'd prefer assert that when you fall through that you got the thing you were expecting.

117:12-117:17
Mon Mar 17 18:05:47 2014 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dcb1990e_4f291d9a
UUID: fcb49dfd_b7efcf98
Bytes: 4
Done

117:12-117:17
Mon Mar 17 18:05:47 2014 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dcb1990e_c4ce2f4a
UUID: dcb1990e_934867a5
Bytes: 4
Done

129:24-129:26
Fri Mar 14 20:54:29 2014 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: dcb1990e_cf4bed7a
Bytes: 18
Do you mean '!=' ?

129:24-129:26
Fri Mar 14 21:18:07 2014 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dcb1990e_cf4bed7a
UUID: dcb1990e_cf01ad63
Bytes: 99
Never mind. I see this is your way of matching the else block to the beginning of the if statement.

129:24-129:26
Sat Mar 15 00:43:17 2014 +0000
Author: Brian Carlstrom <1003723@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: dcb1990e_cf01ad63
UUID: fcb49dfd_71adda7e
Bytes: 150
yeah, I also found this more confusing than helpful. When I write a comment after the else, its typically to describe what holds true within the else.

134:15-134:22
Fri Mar 14 20:54:29 2014 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5cbf69de_4074440f
Bytes: 67
Do you mean "!(low_4gb && addr == nullptr)" or something like that?

134:15-134:22
Fri Mar 14 21:18:07 2014 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5cbf69de_4074440f
UUID: fcb49dfd_109c5459
Bytes: 5
Same.

134:15-134:22
Mon Mar 17 18:05:47 2014 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5cbf69de_4074440f
UUID: dcb1990e_7355db36
Bytes: 4
Done

134:15-134:22
Mon Mar 17 18:05:47 2014 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: fcb49dfd_109c5459
UUID: fcb49dfd_97ecd3a4
Bytes: 4
Done

143:0-143:6
Fri Mar 14 20:54:29 2014 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: fcb49dfd_457a20cf
Bytes: 191
What happens if we have a non-x86-64 non-arm64 64-bit architecture? In other words, should we use the non-MAP32BIT code for the case where ifdef _LP64 && !(__x86_64) case, not just for arm64?

143:0-143:6
Mon Mar 17 18:05:47 2014 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: fcb49dfd_457a20cf
UUID: dcb1990e_333e33f0
Bytes: 4
Done

258:28-258:37
Fri Mar 14 20:54:29 2014 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: fcb49dfd_8532681d
Bytes: 129
I see no problem here. Since we're discussing use of MAP_FIXED in MapAnonymous() in CL 87743, I'd like to hear what Brian thinks.

