Revision: 7184456bad3a412ba2ad60e28855b40c4cb82b01
Patch-set: 1
File: runtime/trace.cc

738:0-738:70
Wed Nov 26 09:33:54 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5f404975_fdb7c7f7
Bytes: 148
This confuses me. Are key/value pairs leaked out of the internal data structure, and users of the map assume that pair they fetched is always in it?

738:0-738:70
Wed Nov 26 09:37:47 2014 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5f404975_fdb7c7f7
UUID: ff2f3db3_b693a061
Bytes: 420
The only user of this list is just above: DumpThreadList. The map stores the names of threads when they get unregistered in ThreadList. It's a std::string, so memory management is not an issue.

From test failures it seems that we get the same tid being unregistered twice. (Can happen if you attach - detach - re-attach - detach a thread, I think.)

The issue is with Put. In SafeMap, you cannot Put the same key twice.

738:0-738:70
Wed Nov 26 09:43:08 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ff2f3db3_b693a061
UUID: 9f448158_e4fe403d
Bytes: 68
Can we DCHECK that? (In SafeMap, you cannot Put the same key twice.)

738:0-738:70
Wed Nov 26 09:44:09 2014 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 9f448158_e4fe403d
UUID: 3f663537_d75bbe3d
Bytes: 69
That is the DCHECK we are triggering in ThreadStress at the moment...

738:0-738:70
Wed Nov 26 09:50:42 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1fa5f182_e6a0a005
Bytes: 68
Please add that SafeMap does not support Put with an existing entry.

