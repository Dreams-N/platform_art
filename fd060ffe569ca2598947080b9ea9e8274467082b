Revision: fd060ffe569ca2598947080b9ea9e8274467082b
Patch-set: 1
File: compiler/optimizing/locations.h

276:41-276:42
Tue Mar 03 11:56:51 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 92c00617_0ddf118d
Bytes: 58
Why is that not Contains(other) || other.Contains(*this) ?

File: compiler/optimizing/parallel_move_resolver.cc

286:36-286:58
Tue Mar 03 11:56:51 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 92a646d4_3db16fc6
Bytes: 3
0u?

335:36-335:58
Tue Mar 03 11:56:51 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d2a43ecd_bf26976e
Bytes: 3
0u?

390:5-390:61
Tue Mar 03 11:56:51 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 92c00617_edc5e5b5
Bytes: 19
Move inside the if.

390:62-391:25
Tue Mar 03 11:56:51 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 92c00617_cdc829d1
Bytes: 66
I don't understand this comment, isn't the move already performed?

447:61-447:75
Tue Mar 03 11:56:51 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d2a43ecd_7f0a4fd9
Bytes: 34
But to perform -> But performing ?

473:50-473:59
Tue Mar 03 11:56:51 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d2a43ecd_3f04c7c6
Bytes: 49
there should no -> we ensure there is no move ...

485:26-485:32
Tue Mar 03 11:56:51 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 92a646d4_dd972b1a
Bytes: 24
Why is that not Overlap?

492:0-499:3
Tue Mar 03 11:56:51 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d2a43ecd_1f0103b7
Bytes: 112
Is it really worth it trying to reuse old moves? Looks simpler to just append. At least this deserves a comment.

535:35-535:55
Tue Mar 03 11:56:51 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d2a43ecd_7f112f03
Bytes: 109
You should add a comment that this is only for debugging/dcheck purposes, and why it's important to check it.

537:2-539:3
Tue Mar 03 11:56:51 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 92a646d4_1daeb364
Bytes: 21
Again why this logic?

File: compiler/optimizing/parallel_move_resolver.h

174:29-174:45
Tue Mar 03 11:56:51 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d2a43ecd_df215b5a
Bytes: 48
What does it mean to be unblocked by a location?

181:9-181:15
Tue Mar 03 11:56:51 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 92c00617_50d5b26a
Bytes: 19
GetNum -> GetNumber

File: compiler/optimizing/parallel_move_test.cc

258:0-258:30
Tue Mar 03 11:56:51 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 92a646d4_bd733fa2
Bytes: 30
You can avoid this check here.

281:0-281:32
Tue Mar 03 11:56:51 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 92a646d4_9d78837f
Bytes: 30
You can avoid this check here.

300:4-300:32
Tue Mar 03 11:56:51 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 92a646d4_dd7e0b6c
Bytes: 30
You can avoid this check here.

408:21-408:61
Tue Mar 03 11:56:51 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 72147288_8790e8c7
Bytes: 93
We're currenlty doing 4 moves on arm for this. This will create a few more. Can we do better?

426:0-426:96
Tue Mar 03 11:56:51 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d20a7e5c_55169cce
Bytes: 5
ditto

465:20-465:72
Tue Mar 03 11:56:51 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 92c00617_d0c8c2d0
Bytes: 53
Seems unfortunate lines 465 and 488 are not the same.

488:20-488:78
Tue Mar 03 11:56:51 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d2a43ecd_3f1ba725
Bytes: 93
We're currenlty doing 4 moves on arm for this. This will create a few more. Can we do better?

508:0-508:26
Tue Mar 03 11:56:51 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 92a646d4_fd79c785
Bytes: 92
Explain why. Why do we want to test this then? Should we make NoSwap not support it as well?

