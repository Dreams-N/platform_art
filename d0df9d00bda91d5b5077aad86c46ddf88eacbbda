Revision: d0df9d00bda91d5b5077aad86c46ddf88eacbbda
Patch-set: 2
File: compiler/optimizing/code_generator_mips.cc

4884:36-4884:44
Mon Jan 11 14:13:29 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ea4a4b41_72d8b8a2
Bytes: 9
MIPS32R6?

4915:13-4915:20
Mon Jan 11 14:13:29 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ca4d875b_7140b837
Bytes: 422
The Dalvik bytecode documentation specifies that for values above std::numeric_limits<int64_t>::max() (resp. std::numeric_limits<int32_t>::max()), the {float,double}-to-long (resp. {float,double}-to-int) instructions should produce std::numeric_limits<int64_t>::max() (resp. std::numeric_limits<int32_t>::max()).

How does the TRUNC.L.fmt (resp. TRUNC.W.fmt) instruction deal with such values?  (Same question for MIPS64.)

4944:34-4944:42
Mon Jan 11 14:13:29 2016 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 8a570fe9_cfc1bd09
Bytes: 9
MIPS32R6?

