Revision: 030daa8b0766e8601eb55e7dcf37ce8cea64ab6b
Patch-set: 1
File: /COMMIT_MSG

10:30-10:32
Tue May 26 14:39:37 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2d0c61ed_0e23d728
Bytes: 2
is

File: compiler/elf_writer_quick.cc

211:0-211:51
Tue May 26 10:21:04 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: cdf3c519_581485c6
Bytes: 81
I haven't completely followed everything, but how are we handling deduped method?

211:0-211:51
Tue May 26 12:15:30 2015 +0000
Author: David Srbecky <1065473@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: cdf3c519_581485c6
UUID: 2d0c61ed_2e24dbda
Bytes: 227
First deduped method gets symbol with [DEDUPED] suffix, other deduped methods with the same address have no symbols to save space (see WriteDebugSymbols below).  Methods are not deduped in the first pace if --debuggable is set.

211:0-211:51
Tue May 26 13:02:57 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2d0c61ed_2e24dbda
UUID: ed8889a6_c5536ef1
Bytes: 399
Ok, so:
1) Debuggable is not set: we can get something irrelevant as a stack, but the irrelevant names are marked [DEDUPED]
2) Debuggable is set: we get correct stack trace with correct names.

Is that correct?

If a developer gets a crash, will the DEDUPED be visible to her? Will it be obvious what is going on? Wouldn't it be better to not print a method name to not be confusing? Should we care?

211:0-211:51
Tue May 26 13:28:15 2015 +0000
Author: David Srbecky <1065473@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ed8889a6_c5536ef1
UUID: cdf3c519_9331ce9b
Bytes: 614
Correct.

(However, the names will be available only if dex2oat was run with --include-debug-symbols;  or with --include-cfi with this CL)

The [DEDUPED] suffix is part of the symbol name, so I believe it should be visible in all tools.

Do you mean the deduped methods just have just [DEDUPED] as the method name and nothing else?  Well, on one hand, the printed name has at least 50% chance being wrong and thus misleading.  On the other hand, it must be a function with the exact same behavior so it is still somewhat informative.  I can persuaded either way, and not including the name saves us a bit of space.

211:0-211:51
Tue May 26 13:30:43 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: cdf3c519_9331ce9b
UUID: 2d0c61ed_4e430f22
Bytes: 99
Good point about same behavior. Maybe reverse the name then to:

[DEDUPED from MyClass.MyMethod]

?

211:0-211:51
Tue May 26 13:45:32 2015 +0000
Author: David Srbecky <1065473@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2d0c61ed_4e430f22
UUID: ed8889a6_e54eb219
Bytes: 256
Is that more informative then the suffix?
What about: DUPLICATE of MyClass.MyMethod
However, I think current suffix works just fine.
I am still somewhat curious what others think about removing the name altogether.  I do not have strong opinion either way.

211:0-211:51
Tue May 26 13:48:48 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: ed8889a6_e54eb219
UUID: 2d0c61ed_ee28233b
Bytes: 168
IMO, the [DEDUPED] suffix is confusing, and not helping the user/developer. DUPLICATE works for me, as long as it is clear that there's little chance it is this method.

211:0-211:51
Tue May 26 14:43:53 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2d0c61ed_ee28233b
UUID: 2d0c61ed_8ed0877a
Bytes: 98
I'm against removing the name altogether. The exact format of the name isn't that important to me.

