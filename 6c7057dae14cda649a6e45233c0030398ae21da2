Revision: 6c7057dae14cda649a6e45233c0030398ae21da2
Patch-set: 1
File: compiler/optimizing/code_generator_arm.cc

1066:53-1066:57
Tue Oct 28 15:03:11 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 75ae0e67_0cc87b2e
Bytes: 24
output does not overlap?

1066:53-1066:57
Tue Oct 28 16:31:24 2014 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 75ae0e67_0cc87b2e
UUID: 354d76af_dc064db8
Bytes: 172
You mean, for doubles, right?  I have changed the code to something similar to what is done for longs.

BTW we should update LocationsBuilderARM::VisitAdd() et al. as well.

1066:53-1066:57
Tue Oct 28 16:34:49 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 354d76af_dc064db8
UUID: 354d76af_9c81658c
Bytes: 44
It should be the same for doubles or floats.

1066:53-1066:57
Tue Oct 28 17:31:37 2014 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 354d76af_9c81658c
UUID: 75ae0e67_2f52092b
Bytes: 4
Done

File: compiler/optimizing/code_generator_x86.cc

1001:34-1001:53
Tue Oct 28 15:03:11 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 55abca56_c8532f64
Bytes: 46
Add a comment why the output does not overlap.

1001:34-1001:53
Tue Oct 28 15:03:25 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 55abca56_c8532f64
UUID: 354d76af_fcea29af
Bytes: 16
does not -> does

1001:34-1001:53
Tue Oct 28 16:31:24 2014 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 354d76af_fcea29af
UUID: 354d76af_1c3a756f
Bytes: 4
Done

File: compiler/optimizing/code_generator_x86_64.cc

987:34-987:53
Tue Oct 28 15:03:11 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 354d76af_9cede5cb
Bytes: 5
ditto

987:34-987:53
Tue Oct 28 16:31:24 2014 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 354d76af_9cede5cb
UUID: 55abca56_8bb531f5
Bytes: 4
Done

1016:0-1019:60
Tue Oct 28 15:18:02 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b5396603_065e9e6a
Bytes: 62
// TODO: xorps out, [RIP:...] // value at RIP is 0x80 00 00 00

1016:0-1019:60
Tue Oct 28 16:31:24 2014 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b5396603_065e9e6a
UUID: 55abca56_eba8659a
Bytes: 95
Done (I mean, to be done).

What is the best way to load an immediate value in an xmm register?

1026:0-1029:60
Tue Oct 28 15:18:02 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 953e22e9_e52f32a6
Bytes: 74
// TODO: xorpd out, [RIP:...] // value at RIP is 0x80 00 00 00 00 00 00 00

1026:0-1029:60
Tue Oct 28 16:31:24 2014 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 953e22e9_e52f32a6
UUID: 75ae0e67_ec063f8a
Bytes: 6
Ditto.

File: test/415-optimizing-arith-neg/src/Main.java

33:21-33:33
Tue Oct 28 15:07:54 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 55abca56_0843878e
Bytes: 207
I wonder if there's an easy way to have this and its friends in a base class so that we stop copy pasting it everywhere.

Also... this is the assert behavior, not the expect one (which will log but continue)

33:21-33:33
Tue Oct 28 16:31:24 2014 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 55abca56_0843878e
UUID: 75ae0e67_ac1047be
Bytes: 120
Yes, we probably need a Java-based test driver similar to what GTest offers.

I've renamed expectEquals to assertEquals.

