Revision: 524bb6fb32dccf5373e77fa83869722fcdeef45d
Patch-set: 9
File: compiler/optimizing/inliner.cc

269:6-273:19
Tue Dec 01 17:18:54 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: db0f1bb0_992767a4
Bytes: 117
I'd put a TODO here. You may still want to inline, if the expected outcome is actually smaller because of call setup.

269:6-273:19
Wed Dec 02 23:04:36 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: db0f1bb0_992767a4
UUID: a0f23453_a03ddab9
Bytes: 142
Inline what? We don't know the target. If we could have statically determined the target, we would have tried to inline it earlier (line 245).

269:6-273:19
Wed Dec 02 23:31:25 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a0f23453_a03ddab9
UUID: dbae3bf9_01bbb433
Bytes: 16
Ah, missed that.

298:25-298:43
Tue Dec 01 17:18:54 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3bd59733_7634c6d8
Bytes: 53
You're calling this a lot, consider a named variable?

298:25-298:43
Wed Dec 02 23:04:36 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3bd59733_7634c6d8
UUID: 1b21b386_a4c66294
Bytes: 92
Yes, because otherwise I need a handle, which is not so great at this point in the compiler.

308:17-308:24
Tue Dec 01 17:18:54 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9b0923b2_11d34e84
Bytes: 11
Why cursor?

308:17-308:24
Wed Dec 02 23:04:36 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 9b0923b2_11d34e84
UUID: a0f23453_802ad66f
Bytes: 141
It's the location where things will happen. It's also named that way in a couple of helper methods in nodes.h. Do you have other suggestions?

308:17-308:24
Wed Dec 02 23:31:25 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a0f23453_802ad66f
UUID: 5b1deb19_05e0dcbb
Bytes: 144
It's fine, it was only a question. Cursor is just a bit weird if it's not precise (e.g., I'd expected a cursor to be in the instruction stream).

File: compiler/optimizing/inliner.h

64:2-72:42
Tue Dec 01 17:18:54 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: db0f1bb0_99fc072a
Bytes: 98
Add comments here or in the cc file for the structure/sequence of instructions this will generate.

64:2-72:42
Wed Dec 02 23:04:36 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: db0f1bb0_99fc072a
UUID: fb421f2f_8b16cd27
Bytes: 4
Done

File: runtime/jit/profiling_info.h

140:2-140:55
Tue Dec 01 17:18:54 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: bb1267d6_d22a5a25
Bytes: 172
Extend the comment to note why this doesn't need a lock.

(Proper way would probably be to make the code cache lock global, so that it can be explicitly referenced here...)

140:2-140:55
Wed Dec 02 23:04:36 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: bb1267d6_d22a5a25
UUID: 80f5303f_bfd8579d
Bytes: 25
Good point, added a TODO.

