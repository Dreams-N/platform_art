Revision: 524bb6fb32dccf5373e77fa83869722fcdeef45d
Patch-set: 9
File: compiler/optimizing/inliner.cc

269:6-273:19
Tue Dec 01 17:18:54 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: db0f1bb0_992767a4
Bytes: 117
I'd put a TODO here. You may still want to inline, if the expected outcome is actually smaller because of call setup.

298:25-298:43
Tue Dec 01 17:18:54 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3bd59733_7634c6d8
Bytes: 53
You're calling this a lot, consider a named variable?

308:17-308:24
Tue Dec 01 17:18:54 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9b0923b2_11d34e84
Bytes: 11
Why cursor?

File: compiler/optimizing/inliner.h

64:2-72:42
Tue Dec 01 17:18:54 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: db0f1bb0_99fc072a
Bytes: 98
Add comments here or in the cc file for the structure/sequence of instructions this will generate.

File: runtime/jit/profiling_info.h

140:2-140:55
Tue Dec 01 17:18:54 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: bb1267d6_d22a5a25
Bytes: 172
Extend the comment to note why this doesn't need a lock.

(Proper way would probably be to make the code cache lock global, so that it can be explicitly referenced here...)

