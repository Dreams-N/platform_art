Revision: 9dff9ee039d80ed1302754a264bf7677deb60f1e
Patch-set: 6
File: compiler/optimizing/code_generator.cc

1086:0-1086:49
Thu Sep 10 10:34:54 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 24f726e3_e3c8f2e4
Bytes: 51
Why is that here, and not just replacing lines 993?

1086:0-1086:49
Thu Sep 10 14:08:33 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 24f726e3_e3c8f2e4
UUID: 44517aa7_bf30f31d
Bytes: 123
Because it needs the null check as argument. It might make it more readable to keep the 993 test though, what do you think?

File: compiler/optimizing/optimizing_compiler.cc

581:0-581:45
Thu Sep 10 10:34:54 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c4164adc_788cc1b9
Bytes: 106
Could you change the exception handling to not depend on the mapping table in case of an optimizing frame?

581:0-581:45
Thu Sep 10 14:08:33 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: c4164adc_788cc1b9
UUID: 24f726e3_83aedefe
Bytes: 82
Done. I was gonna do that in another CL, but fair enough. It's not a big change...

File: compiler/optimizing/register_allocator.cc

1390:17-1390:25
Thu Sep 10 10:34:54 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c4164adc_389649ca
Bytes: 34
What's "constant" in this context?

1390:17-1390:25
Thu Sep 10 14:08:33 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: c4164adc_389649ca
UUID: 24f726e3_2335ea71
Bytes: 89
Word dropped... Was supposed to say that the inputs can only be constant, but not needed.

1869:0-1869:75
Thu Sep 10 10:34:54 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c43d6a4e_40f78ef9
Bytes: 52
Can you DCHECK that by walking over the live_in set?

1869:0-1869:75
Thu Sep 10 14:08:33 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: c43d6a4e_40f78ef9
UUID: 24f726e3_e3e47253
Bytes: 4
Done

File: compiler/optimizing/register_allocator.h

104:7-104:24
Thu Sep 10 10:34:54 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 44517aa7_3f0f0366
Bytes: 86
Maybe just BlockRegisters? the caller_save_only makes the 'All' in the name a bit odd.

104:7-104:24
Thu Sep 10 14:08:33 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 44517aa7_3f0f0366
UUID: 0434e264_e29906ba
Bytes: 4
Done

File: compiler/optimizing/ssa_liveness_analysis.h

1212:0-1212:58
Thu Sep 10 10:34:54 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a44076d4_5ff3eb68
Bytes: 21
Please add a comment.

1212:0-1212:58
Thu Sep 10 14:08:33 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a44076d4_5ff3eb68
UUID: e41fceee_592b0318
Bytes: 4
Done

File: runtime/stack_map.cc

140:0-140:26
Thu Sep 10 10:34:54 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 24f726e3_a3d2fa90
Bytes: 46
dump somewhere that this is a catch stack map?

140:0-140:26
Thu Sep 10 14:08:33 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 24f726e3_a3d2fa90
UUID: 0434e264_a261be49
Bytes: 4
Done

