Revision: e4ccb9fec6ba54b8d88b2acd958c070f16615bae
Patch-set: 2
File: runtime/jit/jit_instrumentation.cc

180:2-180:4
Thu Jan 14 20:06:34 2016 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 4768b202_e390b015
Bytes: 350
Had a chat with Mathieu in person.

Let me throw in an idea: An alternative way is to wrap this_object in a Handle (Mathieu says it would need be on the caller side) and allow the thread suspension, which should avoid the stale ref issue.

Mathieu's idea of avoiding to sweep recently-allocated ProfilingInfo's with a bool flag seems to work as well.

180:2-180:4
Thu Jan 14 21:13:27 2016 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 4768b202_e390b015
UUID: 27673e34_8f76466d
Bytes: 81
The new CL has the boolean flag, I think it should be clearer that it is correct.

181:2-181:70
Thu Jan 14 21:20:38 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2771fe1c_a7d3442f
Bytes: 306
How about moving this to the caller of InvokeVirtualOrInterface? That would be: https://cs.corp.google.com/#android/art/runtime/instrumentation.cc&l=929

If any of the instrumentation listener can be interrupted, the this_object given will become stale and the next listener will work on a stale reference.

181:2-181:70
Thu Jan 14 21:45:31 2016 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2771fe1c_a7d3442f
UUID: 274e5eac_a81330ea
Bytes: 4
Done

