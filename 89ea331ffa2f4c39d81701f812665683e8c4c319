Revision: 89ea331ffa2f4c39d81701f812665683e8c4c319
Patch-set: 1
File: runtime/arch/mips/futex_syscall_mips.S

26
Wed Nov 13 20:47:04 2013 +0000
Author: Elliott Hughes <1003224@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9eb471df_039b148b
Bytes: 394
doesn't this just mean we fucked up the mips syscall.S in bionic? the other architectures move the syscall number into the appropriate register and then make that system call directly. on mips, we actually use a 'syscall' system call. i don't think that's necessary, and we should just fix the mips syscall.S in bionic.

(is __NR_syscall even implemented? i can't find it in the kernel source.)

26
Wed Nov 13 20:56:59 2013 +0000
Author: Chris Dearman <1003284@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 9eb471df_039b148b
UUID: 3ea8e58f_2f9e4909
Bytes: 302
Yes, you're right that the current bionic implementation of syscall() for MIPS is prone to error on unpatched kernels. I'll make a patch for bionic to shift the arguments around in userland as is done for the other architectures.

The NR_syscall code is in arch/mips/kernel/scall32-o32.S:sys_syscall().

26
Wed Nov 13 21:21:50 2013 +0000
Author: Elliott Hughes <1003224@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3ea8e58f_2f9e4909
UUID: bee5b5f4_0f1975d1
Bytes: 202
ah, i missed that because of the LEAF. (i added https://android-review.googlesource.com/#/c/69844/ just to convince myself that the current syscall.S at least works for SYS_getpid on MIPS, and it does.)

