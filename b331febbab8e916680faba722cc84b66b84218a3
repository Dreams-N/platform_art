Revision: b331febbab8e916680faba722cc84b66b84218a3
Patch-set: 2
File: compiler/optimizing/code_generator.cc

654:0-654:85
Fri Feb 05 17:19:47 2016 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d185445a_91c4fc1b
Bytes: 62
Kinda beats the point of having an elaborate DCHECK like this.

654:0-654:85
Fri Feb 05 17:24:44 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d185445a_91c4fc1b
UUID: 918f4c7c_afc99932
Bytes: 107
For 10% of methods, unfortunately yes ;) I'll leave it as an exercise to actually read the try/catch table.

File: runtime/arch/arm/quick_entrypoints_arm.S

447:78-447:91
Tue Feb 09 12:48:37 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: bdb504dc_7a19d9bc
Bytes: 65
The comment should say "JValue* result" and the line is too long.

447:78-447:91
Thu Feb 11 17:48:59 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: bdb504dc_7a19d9bc
UUID: 1dc45060_bb7a8f4a
Bytes: 4
Done

451:50-451:63
Tue Feb 09 12:48:37 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1dc45060_55e94c9f
Bytes: 14
JValue* result

451:50-451:63
Thu Feb 11 17:48:59 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1dc45060_55e94c9f
UUID: 7daf0c90_5e6405b0
Bytes: 4
Done

461:45-461:66
Tue Feb 09 12:48:37 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: fde93cd0_5c3dfd15
Bytes: 22
Restore JValue* result

461:45-461:66
Thu Feb 11 17:48:59 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: fde93cd0_5c3dfd15
UUID: 9d9da072_b7fc5089
Bytes: 4
Done

462:4-462:18
Tue Feb 09 12:48:37 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3de034e0_fef6c1a4
Bytes: 62
Why don't we directly "ldr sp, [sp,#4]" (after restoring r10)?

462:4-462:18
Thu Feb 11 17:48:59 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3de034e0_fef6c1a4
UUID: 3de034e0_a1ded853
Bytes: 4
Done

File: runtime/arch/x86_64/quick_entrypoints_x86_64.S

1772
Tue Feb 09 12:48:37 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9d9da072_9174bcd9
Bytes: 98
Why don't we align to 16-byte boundary here? Does the x86-64 native ABI require 16-byte alignment?

1772
Thu Feb 11 17:48:59 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 9d9da072_9174bcd9
UUID: 9d9da072_d7f9d497
Bytes: 23
Yes, I added a comment.

File: runtime/jit/jit.cc

319
Tue Feb 09 12:48:37 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7daf0c90_58625d15
Bytes: 270
CHECK(memory != nullptr); I prefer to see "Check failed" instead of SIGSEGV.

We could avoid the extra allocation by having the stub allocate the frame and _then_ call a helper function to fill it with vregs but that looks like quite a lot of effort for a rare use case.

319
Thu Feb 11 17:48:59 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7daf0c90_58625d15
UUID: 7dd62c0e_06531e42
Bytes: 16
Done, and agree.

File: runtime/jit/jit_code_cache.cc

581:36-581:43
Tue Feb 09 12:48:37 2016 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7daf0c90_985b155d
Bytes: 8
compiled

581:36-581:43
Thu Feb 11 17:48:59 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7daf0c90_985b155d
UUID: 5da5e8c5_457fbeb3
Bytes: 4
Done

