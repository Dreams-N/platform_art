Revision: 660bfd2c91c2951390fa5245a95046b14796b029
Patch-set: 1
File: compiler/optimizing/graph_visualizer.cc

221:0-221:35
Tue Jan 27 14:48:59 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: cb69dfa3_a21824e7
Bytes: 76
The format will need to be " ( loop_header:null ) ". Are you using this yet?

221:0-221:35
Wed Jan 28 09:43:08 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: cb69dfa3_a21824e7
UUID: f79dab26_fb2ccfbf
Bytes: 4
Done

197:4-228:5
Tue Jan 27 14:55:35 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: cb69dfa3_422ae8e8
Bytes: 76
We may want to introduce a switch on `pass_name' here (maybe in another CL).

197:4-228:5
Wed Jan 28 09:43:08 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: cb69dfa3_422ae8e8
UUID: 578037c4_d601a432
Bytes: 58
Yeah, when it becomes harder to read, we can use a switch.

File: compiler/optimizing/licm.cc

26
Tue Jan 27 14:55:35 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: abd02b89_31b29208
Bytes: 48
Maybe add

  DCHECK(instruction->IsInLoop());

?

26
Wed Jan 28 09:43:08 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: abd02b89_31b29208
UUID: f79dab26_9b290baf
Bytes: 4
Done

44:16-44:28
Tue Jan 27 14:48:59 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2bab5bf1_d5284eab
Bytes: 11
can move an

44:16-44:28
Wed Jan 28 09:43:08 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2bab5bf1_d5284eab
UUID: 578037c4_f6fe20c0
Bytes: 4
Done

45
Tue Jan 27 14:55:35 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: cb69dfa3_42dca89c
Bytes: 46
Maybe add "later" at the end of this sentence?

45
Wed Jan 28 09:43:08 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: cb69dfa3_42dca89c
UUID: f79dab26_bb2647da
Bytes: 4
Done

46:36-46:92
Tue Jan 27 14:55:35 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2bab5bf1_552e1eaa
Bytes: 33
Move this logic its own function?

46:36-46:92
Wed Jan 28 09:43:08 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2bab5bf1_552e1eaa
UUID: 578037c4_96fb2ccf
Bytes: 4
Done

64:10-64:66
Tue Jan 27 14:48:59 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2bab5bf1_b542e26f
Bytes: 84
This expression occurs multiple times. How about turning it into an inline function?

63:4-64:67
Tue Jan 27 14:55:35 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: abd02b89_b1a682c7
Bytes: 32
Merge these two `if' statements?

64:10-64:66
Wed Jan 28 09:43:08 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2bab5bf1_b542e26f
UUID: 97662f11_383b29fc
Bytes: 4
Done

63:4-64:67
Wed Jan 28 09:43:08 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: abd02b89_b1a682c7
UUID: 578037c4_b6f8a8d2
Bytes: 4
Done

78:2-78:80
Tue Jan 27 14:55:35 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2bab5bf1_d57a0ea7
Bytes: 54
Is there a way to disable this code in non-debug mode?

78:2-78:80
Wed Jan 28 09:43:08 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2bab5bf1_d57a0ea7
UUID: 578037c4_5615946a
Bytes: 66
No, but its impact is pretty minimal so I wouldn't worry about it.

81:2-82:38
Tue Jan 27 14:55:35 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: cb69dfa3_42a5880e
Bytes: 90
Maybe introduce an art::HGraphVisitor::VisitPostOrder method and turn LICM into a visitor?

81:2-82:38
Wed Jan 28 09:43:08 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: cb69dfa3_42a5880e
UUID: f79dab26_5b638302
Bytes: 74
LICM is an HOptimization already, so we shouldn't extend multiple classes.

93
Tue Jan 27 14:55:35 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: cb69dfa3_027c70d9
Bytes: 42
Maybe add

  DCHECK(inner->IsInLoop());

?

93
Wed Jan 28 09:43:08 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: cb69dfa3_027c70d9
UUID: f79dab26_7b68bfdd
Bytes: 4
Done

112:47-112:49
Tue Jan 27 14:48:59 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2bab5bf1_b5bdc2db
Bytes: 2
if

112:47-112:49
Wed Jan 28 09:43:08 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2bab5bf1_b5bdc2db
UUID: 578037c4_761a109e
Bytes: 4
Done

File: compiler/optimizing/nodes.cc

710:19-710:31
Tue Jan 27 14:55:35 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2bab5bf1_95c24667
Bytes: 119
I know this method was not part of your CL per se, but I think we should rename it as MoveBefore (maybe in another CL).

710:19-710:31
Wed Jan 28 09:43:08 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2bab5bf1_95c24667
UUID: f79dab26_3b7237ce
Bytes: 14
I agree. Done.

File: compiler/optimizing/nodes.h

3051:6-3051:27
Tue Jan 27 14:55:35 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: cb69dfa3_e2769cfc
Bytes: 85
Does this iterator follow a specific traversal order?  Maybe mention it in a comment.

3051:6-3051:27
Wed Jan 28 09:43:08 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: cb69dfa3_e2769cfc
UUID: 97662f11_b82659da
Bytes: 17
Good point. Done.

3057:4-3057:57
Tue Jan 27 14:48:59 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: abd02b89_b1ffa289
Bytes: 72
Deduplicate? E.g by turning this into an "if bit-not-set then Advance()"

3057:4-3057:57
Wed Jan 28 09:43:08 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: abd02b89_b1ffa289
UUID: 97662f11_58637d02
Bytes: 5
Done.

File: tools/checker.py

113:0-115:37
Tue Jan 27 14:48:59 2015 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: cb69dfa3_820b2095
Bytes: 75
Calin is fixing this in https://android-review.googlesource.com/#/c/124779/

113:0-115:37
Wed Jan 28 09:43:08 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: cb69dfa3_820b2095
UUID: 97662f11_7868c1dd
Bytes: 11
OK, thanks.

