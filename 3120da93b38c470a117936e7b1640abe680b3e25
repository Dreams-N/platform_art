Revision: 3120da93b38c470a117936e7b1640abe680b3e25
Patch-set: 20
File: runtime/class_linker.cc

467:2-467:10
Tue Jul 08 23:59:55 2014 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a41cd152_43a68638
Bytes: 109
Add another CHECK_EQ to verify the java_lang_ref_Reference->GetClassSize() == sizeof(mirror::ReferenceClass)?

467:2-467:10
Wed Jul 09 01:55:36 2014 +0000
Author: Fred Shih <1047773@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a41cd152_43a68638
UUID: 99e73894_a2683ebc
Bytes: 4
Done

File: runtime/gc/reference_processor.cc

36:25-36:40
Tue Jul 08 23:59:55 2014 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 84326dd1_fbad5076
Bytes: 7
inline?

36:25-36:40
Wed Jul 09 01:55:36 2014 +0000
Author: Fred Shih <1047773@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 84326dd1_fbad5076
UUID: e4224989_4823ff0f
Bytes: 4
Done

53:2-53:11
Tue Jul 08 23:59:55 2014 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a41cd152_0611fc72
Bytes: 22
Why was this moved up?

53:2-53:11
Wed Jul 09 01:55:36 2014 +0000
Author: Fred Shih <1047773@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a41cd152_0611fc72
UUID: e43969b5_7688a10e
Bytes: 106
A previous version required acquiring the lock, but the current version does not. I've moved it back down.

File: runtime/mirror/reference.cc

35:16-35:26
Tue Jul 08 23:59:55 2014 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 84326dd1_dba5eca8
Bytes: 78
Does this currently get called?

Runtime::VisitConstantRoots() should call it?

35:16-35:26
Wed Jul 09 01:55:36 2014 +0000
Author: Fred Shih <1047773@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 84326dd1_dba5eca8
UUID: 99e73894_22f8ae98
Bytes: 62
My mistake, I forgot to add this to VisitConstantRoots, fixed.

File: runtime/mirror/reference.h

90:11-90:35
Tue Jul 08 23:59:55 2014 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 84326dd1_9be9b4cf
Bytes: 133
If we add a new root, please add the read barrier code. For an example, see String::GetJavaLangString() or Class::GetJavaLangClass().

90:11-90:35
Wed Jul 09 01:55:36 2014 +0000
Author: Fred Shih <1047773@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 84326dd1_9be9b4cf
UUID: 99e73894_42a612de
Bytes: 4
Done

132:26-132:30
Tue Jul 08 23:59:55 2014 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a41cd152_663ab0e1
Bytes: 14
remove 'void'?

132
Wed Jul 09 00:01:32 2014 +0000
Author: Mathieu Chartier <1015378@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e43969b5_d6bcf5ca
Bytes: 25
Also make function const.

132
Wed Jul 09 01:55:36 2014 +0000
Author: Fred Shih <1047773@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e43969b5_d6bcf5ca
UUID: 99e73894_a2bf1ee6
Bytes: 4
Done

140:10-140:28
Tue Jul 08 23:59:55 2014 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 84326dd1_5be73cbc
Bytes: 25
Who writes to this field?

140:10-140:28
Wed Jul 09 01:55:36 2014 +0000
Author: Fred Shih <1047773@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 84326dd1_5be73cbc
UUID: e4224989_a819d3de
Bytes: 435
This is mainly used for benchmarking and debugging (see libcore changes in the same change-id). The problem is that simply setting the slow_path_enabled_ field causes the GetReferent method in reference processor to get stuck in a loop until GC unsets the flag. Because the intrinsic does not completely replace the JNI method, I added this field so that both the intrinsic path and the JNI path can be tested and benchmarked reliably.

