Revision: 9a3be989d0aee1a6998e33813c7f70906d27f89a
Patch-set: 1
File: /COMMIT_MSG

9:0-13:42
Thu Mar 03 23:22:22 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 421d051a_df6197e1
Bytes: 175
Mathieu, Hiroshi, I'd appreciate some context on this. Apparently, having the ArtField and ArtMethod call VisitRoot on their declaring class is fine, but anything else is not.

9:0-13:42
Thu Mar 03 23:57:18 2016 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 421d051a_df6197e1
UUID: 82ea9d1e_2f32004a
Bytes: 778
The way I see this is that a class makes its method/field roots reachable from GC and causes GC to visit them through it. It's sort of a canonical way for GC to visit methods/fields. This doesn't mean that GC can't visit methods/fields through other paths (like the allocation records). And it makes sense because if a class becomes (otherwise) unreachable but its methods are reachable from the allocation records (the allocation site stack traces), the methods makes the class reachable (note that methods/fields have a back pointer to their class) and avoids an incorrect situation like methods are alive but their class isn't and gets unloaded.

So, I don't think this assumption exists.

Do you see a case where visiting methods/fields outside their class causes a problem?

9:0-13:42
Fri Mar 04 09:57:47 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 82ea9d1e_2f32004a
UUID: a220812e_531afc4e
Bytes: 621
Mathieu: The ProfilingInfo objects are indeed visited twice. Once through the the allocation records (via SemiSpace::MarkRoots), and one through the mark stack (via SemiSpace::MarkReachableObjects).

The first visit through SemiSpace::MarkRoots moves entries in the ProfilingInfo from the from space to the to space. The second visit crashes because it doesn't expect a to space entry in the ProfilingInfo.

I'm not sure why it doesn't happen with the declaring class. I also don't understand the comment in "Class::VisitNativeRoots": "// Visit roots first in case the declaring class gets moved", which could be related.

9:0-13:42
Fri Mar 04 18:54:12 2016 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a220812e_531afc4e
UUID: e27a7932_b031c0ee
Bytes: 247
Good that this fixes (or avoids) the test failure.

If this turns out a different issue, I'd prefer moving the profilinginfo visit code back to art_method as that's what directly points to the profiling info from a code organization point of view.

9:0-13:42
Mon Mar 07 10:15:59 2016 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e27a7932_b031c0ee
UUID: 4227c598_06de5a54
Bytes: 90
I agree. Now that Mathieu landed the GC fix, wer eyou successfull in reverting my changes?

