Revision: 0c35737eb7807c41793706152b80b9d97c669aa4
Patch-set: 1
File: compiler/optimizing/bounds_check_elimination.cc

723:35-724:35
Mon Apr 27 21:54:14 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5034ce65_68b9572a
Bytes: 188
I'd reverse the comment and state this first: "We only deoptimize if we can guarantee the loop goes through the full monotonic range. This requires a) the loop has no early exit, b) .... "

725:0-728:50
Mon Apr 27 21:54:14 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5034ce65_c88ae36e
Bytes: 159
This is not really a guaranteed. It's kind of explaining the HDeoptimization approach (ie detecting rare cases that do not happen in normal circonstanstances).

729:8-729:20
Mon Apr 27 21:54:14 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 90fc86c6_4dca519e
Bytes: 8
of what?

780:0-782:57
Mon Apr 27 21:54:14 2015 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5034ce65_e876c705
Bytes: 87
The comment about overflow/underflow was clearer to me :-) Why can't we handle +2 then?

