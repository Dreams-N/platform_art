Revision: ba839c134d6dd9e423703d72de000e75981c913b
Patch-set: 5
File: /COMMIT_MSG

7:0-7:72
Thu Dec 04 18:04:18 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3ffc75c4_6a185366
Bytes: 112
could you add a more detailed description on:
- why we want this
- how it works

it helps others get the context

7:0-7:72
Fri Dec 05 16:23:24 2014 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3ffc75c4_6a185366
UUID: dfb2795b_710c18da
Bytes: 4
Done

File: compiler/optimizing/graph_visualizer.cc

17:9-17:40
Thu Dec 04 18:04:18 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3ffc75c4_4a15972c
Bytes: 28
any reason you changed this?

17:9-17:40
Fri Dec 05 16:23:24 2014 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3ffc75c4_4a15972c
UUID: 5fff69b8_4b84799b
Bytes: 47
Sry, Eclipse did that. It's fixed in patchset 6

304:43-305:59
Thu Dec 04 18:09:00 2014 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3ffc75c4_ca3187e3
Bytes: 38
Place both arguments on the same line.

304:43-305:59
Fri Dec 05 16:23:24 2014 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3ffc75c4_ca3187e3
UUID: ffad7dfd_925c1cc6
Bytes: 4
Done

319:2-322:50
Thu Dec 04 18:09:00 2014 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5f8a0930_e7961e21
Bytes: 93
We usually use curly braces with control flow statements, even around single-line statements.

319:2-322:50
Fri Dec 05 16:23:24 2014 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5f8a0930_e7961e21
UUID: dfb2795b_d135047d
Bytes: 4
Done

328:2-331:48
Thu Dec 04 18:09:00 2014 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5fff69b8_ab3acd5a
Bytes: 9
Likewise.

328:2-331:48
Fri Dec 05 16:23:24 2014 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5fff69b8_ab3acd5a
UUID: ffad7dfd_f2612884
Bytes: 4
Done

File: compiler/optimizing/graph_visualizer.h

35:65-36:11
Thu Dec 04 18:04:18 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5f8a0930_a7b336de
Bytes: 27
should it be abstract then?

35:65-36:11
Fri Dec 05 16:23:24 2014 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5f8a0930_a7b336de
UUID: dfb2795b_51363425
Bytes: 105
We don't need NULL checks every time DumpGraph is called this way. I added a comment which explains this.

42:31-42:32
Thu Dec 04 18:09:00 2014 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3ffc75c4_0a1f9f4c
Bytes: 18
Nit: remove space.

42:31-42:32
Fri Dec 05 16:23:24 2014 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3ffc75c4_0a1f9f4c
UUID: 1f133113_139b0c03
Bytes: 4
Done

61:21-61:25
Thu Dec 04 18:04:18 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5f8a0930_e7bd3ea9
Bytes: 99
indentation issue, here and in the other places. Make sure you indent in sync with the first param.

61:21-61:25
Fri Dec 05 16:23:24 2014 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5f8a0930_e7bd3ea9
UUID: 3ffc75c4_8a870ff2
Bytes: 5
Done.

76:39-76:73
Thu Dec 04 18:04:18 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5fff69b8_8b66f198
Bytes: 165
You could name it LogVisualiser. (It's not really a visualizer though). Also, you should use VERBOSE or even DEBUG for logging since this will produce a lot of text.

76:39-76:73
Fri Dec 05 16:23:24 2014 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5fff69b8_8b66f198
UUID: ffad7dfd_f5d59249
Bytes: 362
True, but the output is only enabled when the --dump-passes flag is passed to dex2oat so it would be awkward if it didn't do anything unless it was paired with another flag that changes the verbosity (there doesn't seem to be one, btw). And either way, different flag-hidden stats in dex2oat.cc are being printed to LOG(INFO) too, so I'd just leave it like this.

File: compiler/optimizing/optimizing_compiler.cc

223:4-223:75
Thu Dec 04 18:04:18 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5f8a0930_07940a17
Bytes: 114
What's the benefit of having a before and an after? This will basically duplicate a lot since after(i)=before(i-1)

223:4-223:75
Fri Dec 05 16:23:24 2014 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5f8a0930_07940a17
UUID: 5f8a0930_67186e18
Bytes: 294
Yeah, you're right. The reason is that it enables you to address both the state before and after a pass with the same name, rather than having to know which pass came before (which will change over time). But I've now changed it to wrap one dump with both the name of the pass before and after.

298:2-298:4
Thu Dec 04 18:04:18 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5f8a0930_677cee58
Bytes: 46
always use brackets, here and everywhere else.

298:2-298:4
Fri Dec 05 16:23:24 2014 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5f8a0930_677cee58
UUID: 3ffc75c4_8a802fd3
Bytes: 4
Done

300:11-300:31
Thu Dec 04 18:04:18 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3ffc75c4_aadf6b17
Bytes: 137
I think this is useful enough to have on a separate if, i.e. even if you dump passes in the logs, having the visualizer could help a lot.

300:11-300:31
Fri Dec 05 16:23:24 2014 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3ffc75c4_aadf6b17
UUID: 3ffc75c4_6a6613cb
Bytes: 301
The first branch should really be invoked just by tests, the other one only manually. Do you think they would ever be used simultaneously? That would involve storing a list of the visualizers. Or do you just mean that setting kIsVisualizerEnabled=true would completely override the --dump-passes flag?

298:2-304:72
Thu Dec 04 18:09:00 2014 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5f8a0930_e76ffe98
Bytes: 29
Add braces around statements.

298:2-304:72
Fri Dec 05 16:23:24 2014 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5f8a0930_e76ffe98
UUID: 3ffc75c4_4a6357b9
Bytes: 4
Done

File: compiler/optimizing/pretty_printer.h

20:0-20:21
Thu Dec 04 18:09:00 2014 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3ffc75c4_8ae4aff2
Bytes: 37
Replace with:

  #include <cinttypes>

20:0-20:21
Fri Dec 05 16:23:24 2014 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3ffc75c4_8ae4aff2
UUID: 5f8a0930_27374689
Bytes: 4
Done

56:15-56:37
Thu Dec 04 18:04:18 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5f8a0930_c76202b4
Bytes: 45
use "Type* pointer" here and everywhere else.

56:6-56:13
Thu Dec 04 18:04:18 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5fff69b8_8bb8316c
Bytes: 43
why did you need to add this special cases?

56:6-56:13
Fri Dec 05 16:23:24 2014 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5fff69b8_8bb8316c
UUID: 5fff69b8_6b31755e
Bytes: 501
The pretty printer only prints the names of the instructions + inputs + outputs. It's good to have the values of constants in the test output though. When you have five different IntConstant instructions in your graph, you want to use their value to distinguish between them. Unfortunately, the *Constant instructions don't have a single GetValue() method (because the return type is different in each case), so it is necessary to cast 'instruction' to the correct type and print each one accordingly.

56:15-56:37
Fri Dec 05 16:23:24 2014 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5f8a0930_c76202b4
UUID: dfb2795b_944b6a87
Bytes: 4
Done

File: compiler/optimizing/test/ConstantFolding.java

1:0-1:30
Thu Dec 04 18:09:00 2014 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3ffc75c4_6aca935a
Bytes: 39
Add copyright header (see other files).

1:0-1:30
Fri Dec 05 16:23:24 2014 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3ffc75c4_6aca935a
UUID: 1f133113_b3ee984a
Bytes: 4
Done

8:20-8:24
Thu Dec 04 18:04:18 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5f8a0930_c74be221
Bytes: 164
does this counting serve any functional purpose? I think they will be more of a annoyance when you add test incrementally and you want to group them in logical way.

8:20-8:24
Fri Dec 05 16:23:24 2014 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5f8a0930_c74be221
UUID: 5fff69b8_ebc565cd
Bytes: 492
Yeah, I know. They're just temporary, don't worry. Right now they're there because dx sorts the methods by name so they then appear in a different order in the HGraph dump and that messes up the flow of the matching (the engine matches the CHECK lines consecutively, so all the checks for IntAddition1 get checked on output after IntNegation). I'll fix this in my next CL by grouping the checks and allowing an arbitrary order of the groups while still having a strict order within each group

15:2-26:57
Thu Dec 04 18:04:18 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5f8a0930_0746ca1a
Bytes: 105
Here's an idea: it would be cool if you could achieve this via annotations instead of arbitrary comments.

15:2-26:57
Fri Dec 05 16:23:24 2014 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5f8a0930_0746ca1a
UUID: 1f133113_d3ed144e
Bytes: 138
Yeah, but that would make it source language dependent. It would be nice to have the option of using this on more than just Java -> HGraph

File: tools/checker.py

19:86-19:95
Thu Dec 04 18:04:18 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3ffc75c4_4ac7d750
Bytes: 61
no need. You can just say: "The *check lines* begin with ..."

19:86-19:95
Fri Dec 05 16:23:24 2014 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3ffc75c4_4ac7d750
UUID: 1f133113_33e3a863
Bytes: 4
Done

20:41-20:59
Thu Dec 04 18:04:18 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5f8a0930_6755cec0
Bytes: 44
I wouldn't bother to make this configurable.

20:41-20:59
Fri Dec 05 16:23:24 2014 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5f8a0930_6755cec0
UUID: 1f133113_13e02c53
Bytes: 41
Left configurable (for now) but rephrased

27:62-27:64
Thu Dec 04 18:04:18 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5fff69b8_6b9e15f4
Bytes: 12
double space

27:62-27:64
Fri Dec 05 16:23:24 2014 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5fff69b8_6b9e15f4
UUID: dfb2795b_b4678e18
Bytes: 4
Done

103:11-103:93
Thu Dec 04 18:09:00 2014 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5fff69b8_4b9b5902
Bytes: 55
Nit: do you really need parens around the return value?

103:11-103:93
Fri Dec 05 16:23:24 2014 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5fff69b8_4b9b5902
UUID: ffad7dfd_95f9a6e3
Bytes: 4
Done

255:87-255:88
Thu Dec 04 18:09:00 2014 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5f8a0930_a7cfb637
Bytes: 42
Nit: I think you don't need this `\' here.

255:87-255:88
Fri Dec 05 16:23:24 2014 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5f8a0930_a7cfb637
UUID: dfb2795b_f47116d2
Bytes: 4
Done

256:89-256:90
Thu Dec 04 18:09:00 2014 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5fff69b8_0ba56141
Bytes: 9
Likewise.

256:89-256:90
Fri Dec 05 16:23:24 2014 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5fff69b8_0ba56141
UUID: ffad7dfd_d5f32eff
Bytes: 4
Done

File: tools/checker_test.py

20:0-20:0
Thu Dec 04 18:04:18 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3ffc75c4_6af3b3b0
Bytes: 73
Document what this file does. In a similar way as you did in  checker.py.

20:0-20:0
Fri Dec 05 16:23:24 2014 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3ffc75c4_6af3b3b0
UUID: 1f133113_133e6cad
Bytes: 4
Done

136:0-137:57
Thu Dec 04 18:09:00 2014 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3ffc75c4_caa4e79d
Bytes: 46
Nit: could fit on a single line; up to you. :)

136:0-137:57
Fri Dec 05 16:23:24 2014 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3ffc75c4_caa4e79d
UUID: dfb2795b_f1df6816
Bytes: 4
Done

234:37-234:46
Thu Dec 04 18:09:00 2014 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5fff69b8_2b813d8b
Bytes: 163
So you are allowed to reassign a variable to capture a(nother) part of the string?  Sounds a bit risky to me, as one could easily reuse a variable name by mistake.

234:37-234:46
Fri Dec 05 16:23:24 2014 +0000
Author: David Brazdil <1059815@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 5fff69b8_2b813d8b
UUID: ffad7dfd_b2884005
Bytes: 300
You are probably right. I can forbid it in the future but right now you wouldn't be allowed to reuse a variable anywhere in the same file. Once I add grouping of check lines (usually by method), I can have a separate variable store for each one and not allowing reassignment would make perfect sense.

