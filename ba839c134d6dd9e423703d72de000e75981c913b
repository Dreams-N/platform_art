Revision: ba839c134d6dd9e423703d72de000e75981c913b
Patch-set: 5
File: /COMMIT_MSG

7:0-7:72
Thu Dec 04 18:04:18 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3ffc75c4_6a185366
Bytes: 112
could you add a more detailed description on:
- why we want this
- how it works

it helps others get the context

File: compiler/optimizing/graph_visualizer.cc

17:9-17:40
Thu Dec 04 18:04:18 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3ffc75c4_4a15972c
Bytes: 28
any reason you changed this?

File: compiler/optimizing/graph_visualizer.h

35:65-36:11
Thu Dec 04 18:04:18 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5f8a0930_a7b336de
Bytes: 27
should it be abstract then?

61:21-61:25
Thu Dec 04 18:04:18 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5f8a0930_e7bd3ea9
Bytes: 99
indentation issue, here and in the other places. Make sure you indent in sync with the first param.

76:39-76:73
Thu Dec 04 18:04:18 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5fff69b8_8b66f198
Bytes: 165
You could name it LogVisualiser. (It's not really a visualizer though). Also, you should use VERBOSE or even DEBUG for logging since this will produce a lot of text.

File: compiler/optimizing/optimizing_compiler.cc

223:4-223:75
Thu Dec 04 18:04:18 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5f8a0930_07940a17
Bytes: 114
What's the benefit of having a before and an after? This will basically duplicate a lot since after(i)=before(i-1)

298:2-298:4
Thu Dec 04 18:04:18 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5f8a0930_677cee58
Bytes: 46
always use brackets, here and everywhere else.

300:11-300:31
Thu Dec 04 18:04:18 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3ffc75c4_aadf6b17
Bytes: 137
I think this is useful enough to have on a separate if, i.e. even if you dump passes in the logs, having the visualizer could help a lot.

File: compiler/optimizing/pretty_printer.h

56:15-56:37
Thu Dec 04 18:04:18 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5f8a0930_c76202b4
Bytes: 45
use "Type* pointer" here and everywhere else.

56:6-56:13
Thu Dec 04 18:04:18 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5fff69b8_8bb8316c
Bytes: 43
why did you need to add this special cases?

File: compiler/optimizing/test/ConstantFolding.java

8:20-8:24
Thu Dec 04 18:04:18 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5f8a0930_c74be221
Bytes: 164
does this counting serve any functional purpose? I think they will be more of a annoyance when you add test incrementally and you want to group them in logical way.

15:2-26:57
Thu Dec 04 18:04:18 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5f8a0930_0746ca1a
Bytes: 105
Here's an idea: it would be cool if you could achieve this via annotations instead of arbitrary comments.

File: tools/checker.py

19:86-19:95
Thu Dec 04 18:04:18 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3ffc75c4_4ac7d750
Bytes: 61
no need. You can just say: "The *check lines* begin with ..."

20:41-20:59
Thu Dec 04 18:04:18 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5f8a0930_6755cec0
Bytes: 44
I wouldn't bother to make this configurable.

27:62-27:64
Thu Dec 04 18:04:18 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 5fff69b8_6b9e15f4
Bytes: 12
double space

File: tools/checker_test.py

20:0-20:0
Thu Dec 04 18:04:18 2014 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 3ffc75c4_6af3b3b0
Bytes: 73
Document what this file does. In a similar way as you did in  checker.py.

