Revision: cb9588e10f0f281a6bc00858e5816ead6ff434e8
Patch-set: 1
File: compiler/cfi_test.h

34:24-34:29
Tue Apr 07 20:37:58 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a32b0216_eae8ebab
Bytes: 147
Ugh, you copied dallison's assembler test. Everywhere else we're trying hard not to use these things directly. I let vmarko and Nicolas judge this.

File: compiler/dex/quick/arm64/call_arm64.cc

285:7-285:13
Tue Apr 07 20:37:58 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 63258a42_68c4e7be
Bytes: 70
If this is for what I think you want it to do, then use ALWAYS_INLINE.

File: compiler/dex/quick/mir_to_lir.h

1915:2-1915:28
Tue Apr 07 20:57:46 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 837fde20_ef0c7d72
Bytes: 91
Add 2 spaces. (We've got non-standard indentation in this file. Let's stick to it for now.)

File: compiler/dex/quick/quick_cfi_test.cc

51:0-53:50
Tue Apr 07 20:57:46 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 637aea34_4b510568
Bytes: 68
Please use the other constructor so that you don't need the setters.

File: compiler/dex/quick/quick_cfi_test_expected.inc

21:15-21:34
Tue Apr 07 20:57:46 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 837fde20_0f06a94d
Bytes: 144
Why is this before the "str r0, [sp, #0]"? The first instruction of the exit sequence is "add sp, sp, 44". (Same for other architectures below.)

31:15-31:33
Tue Apr 07 20:57:46 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 637aea34_4ecef3af
Bytes: 87
Why is this after the padding "lsls r0, r0, #0"? (Same below wherever there's padding.)

94:18-94:19
Tue Apr 07 20:37:58 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 63258a42_e8bb1757
Bytes: 84
Whitespace? It's weird if it's from objdump, as it doesn't happen for the ret above.

123:15-123:28
Tue Apr 07 20:57:46 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a3706250_d0ab6285
Bytes: 85
Promoted ArtMethod*? I'm in the process of cleaning that up. This may soon disappear.

135:18-135:19
Tue Apr 07 20:37:58 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a32b0216_4aa79fb4
Bytes: 11
Whitespace?

174:18-174:19
Tue Apr 07 20:37:58 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a32b0216_ea946b46
Bytes: 11
Whitespace?

212:18-212:19
Tue Apr 07 20:37:58 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 832a7e12_b1402766
Bytes: 11
Whitespace.

File: compiler/dex/quick/quick_compiler.h

63:2-63:80
Tue Apr 07 20:37:58 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a32b0216_0ac1a7d1
Bytes: 115
I don't really see a good reason why you'd want to go through QuickCompiler to gain access to the backends, but OK.

File: compiler/driver/compiler_options.h

154:0-156:3
Tue Apr 07 20:37:58 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a32b0216_8aea971c
Bytes: 108
Don't like. Do not remove const-ness for test purposes. How about using the complex constructor in the test?

219
Tue Apr 07 20:57:46 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a3706250_706f0ef6
Bytes: 26
Keep const, remove setter.

224
Tue Apr 07 20:57:46 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 837fde20_af167580
Bytes: 26
Keep const, remove setter.

