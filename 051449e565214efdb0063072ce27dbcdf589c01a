Revision: 051449e565214efdb0063072ce27dbcdf589c01a
Patch-set: 7
File: compiler/optimizing/intrinsics_x86.cc

927:0-936:3
Thu Aug 13 16:24:37 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c44d6987_08bf27f9
Bytes: 155
Replace with:

  int num_constants =
      ((src_pos != nullptr) ? 1 : 0)
      + ((dest_pos != nullptr) ? 1 : 0)
      + ((length != nullptr) ? 1 : 0);

?

983:2-983:18
Thu Aug 13 16:24:37 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2459e545_8822f72c
Bytes: 31
Move between lines 988 and 989.

986:8-986:15
Thu Aug 13 16:24:37 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 24400542_d0cadcc2
Bytes: 8
uint32_t

986:62-986:72
Thu Aug 13 16:24:37 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e4242da6_39890b32
Bytes: 11
Uint32Value

990:20-990:44
Thu Aug 13 16:24:37 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e4242da6_592607c2
Bytes: 23
length <= input_length?

994:6-994:54
Thu Aug 13 16:24:37 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a47a35a8_1412b4e5
Bytes: 52
Replace with

  // Check that pos < input_length.

?

997:11-997:16
Thu Aug 13 16:24:37 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 045ce134_879f86af
Bytes: 29
Shouldn't this be kLessEqual?

999:20-999:33
Thu Aug 13 16:24:37 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 24b565ac_68b56319
Bytes: 13
input_length?

1001:6-1001:28
Thu Aug 13 16:24:37 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 045ce134_e7a882d9
Bytes: 46
Shouldn't this be

  __ cmpl(length, temp);

?

1006:7-1006:10
Thu Aug 13 16:24:37 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2459e545_68310376
Bytes: 8
pos_reg?

1010:7-1010:10
Thu Aug 13 16:24:37 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e4242da6_b97cfb90
Bytes: 8
pos_reg?

1014:4-1014:45
Thu Aug 13 16:24:37 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e4242da6_99793fa1
Bytes: 62
Replace with

  // Check that input_length - pos <= length.

?

1017:4-1017:26
Thu Aug 13 16:24:37 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2459e545_282b0b08
Bytes: 46
Shouldn't this be

  __ cmpl(length, temp);

?

1040:2-1040:22
Thu Aug 13 16:24:37 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c44d6987_e8eccb05
Bytes: 45
Move this before between lines 1084 and 1085.

1042:2-1042:23
Thu Aug 13 16:24:37 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 446259ef_aca38bb2
Bytes: 45
Move this before between lines 1090 and 1091.

1048:5-1048:9
Thu Aug 13 16:24:37 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c44d6987_c8e90ff4
Bytes: 9
Bail out?

1052:5-1052:9
Thu Aug 13 16:24:37 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e4242da6_39022b18
Bytes: 9
Bail out?

1056:5-1056:9
Thu Aug 13 16:24:37 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2459e545_c8410fc1
Bytes: 9
Bail out?

1060:62-1060:66
Thu Aug 13 16:24:37 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c44d6987_a8e6d321
Bytes: 9
bail out?

1060:5-1060:67
Thu Aug 13 16:24:37 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 8400d1f0_dbf33311
Bytes: 84
What is the constraint or rationale behind this?  (Maybe a limitation of REP MOVSW?)

1082:56-1082:57
Thu Aug 13 16:24:37 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 446259ef_2c89db31
Bytes: 100
Please use a constant to represent a String character size (introduce one if we don't have one yet).

1082:59-1082:69
Thu Aug 13 16:24:37 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a47a35a8_94256439
Bytes: 11
Uint32Value

1082:8-1082:15
Thu Aug 13 16:24:37 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 446259ef_4c940f4a
Bytes: 8
uint32_t

1085:35-1085:36
Thu Aug 13 16:24:37 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 446259ef_cc7fdf84
Bytes: 6
Ditto.

1091:37-1091:38
Thu Aug 13 16:24:37 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a405d5ff_5c36fd6f
Bytes: 6
Ditto.

1100:2-1100:14
Thu Aug 13 16:24:37 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 8400d1f0_5bb1634c
Bytes: 5
Drop?

File: compiler/optimizing/intrinsics_x86_64.cc

830:74-830:78
Thu Aug 13 16:24:37 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 446259ef_ac7cab90
Bytes: 9
bail out?

831:12-831:17
Thu Aug 13 16:24:37 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e4242da6_b9151b4b
Bytes: 5
Drop.

835:27-835:31
Thu Aug 13 16:24:37 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a47a35a8_54310c75
Bytes: 12
nonnegative?

862:52-862:57
Thu Aug 13 16:24:37 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a405d5ff_1c30756e
Bytes: 6
MOVSW?

875:2-875:19
Thu Aug 13 16:24:37 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e4242da6_99125f5f
Bytes: 31
Move between lines 880 and 881.

878:8-878:15
Thu Aug 13 16:24:37 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2459e545_28e42b56
Bytes: 8
uint32_t

878:62-878:72
Thu Aug 13 16:24:37 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2459e545_08e9672c
Bytes: 11
Uint32Value

882:20-882:44
Thu Aug 13 16:24:37 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 446259ef_8c79e7a0
Bytes: 23
length <= input_length?

886:6-886:51
Thu Aug 13 16:24:37 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 045ce134_078dd684
Bytes: 52
Replace with

  // Check that pos < input_length.

?

889:11-889:16
Thu Aug 13 16:24:37 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2459e545_68da2398
Bytes: 29
Shouldn't this be kLessEqual?

891:20-891:33
Thu Aug 13 16:24:37 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e4242da6_391b4b7a
Bytes: 13
input_length?

893:6-893:28
Thu Aug 13 16:24:37 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a47a35a8_74368870
Bytes: 46
Shouldn't this be

  __ cmpl(length, temp);

?

898:18-898:21
Thu Aug 13 16:24:37 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e4242da6_19208fa0
Bytes: 8
pos_reg?

902:18-902:21
Thu Aug 13 16:24:37 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a47a35a8_142b9407
Bytes: 8
pos_reg?

906:4-906:48
Thu Aug 13 16:24:37 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2459e545_48df5f86
Bytes: 62
Replace with

  // Check that input_length - pos <= length.

?

909:4-909:26
Thu Aug 13 16:24:37 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 24400542_90ed742f
Bytes: 46
Shouldn't this be

  __ cmpl(length, temp);

?

932:2-932:22
Thu Aug 13 16:24:37 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 24b565ac_a8ca7b8f
Bytes: 43
Move this before between lines 976 and 977.

934:2-934:23
Thu Aug 13 16:24:37 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 24b565ac_48d97f68
Bytes: 43
Move this before between lines 981 and 982.

940:5-940:9
Thu Aug 13 16:24:37 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a47a35a8_3430106f
Bytes: 9
Bail out?

944:5-944:9
Thu Aug 13 16:24:37 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 446259ef_6cf8f389
Bytes: 9
Bail out?

948:5-948:9
Thu Aug 13 16:24:37 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 446259ef_4cfd2f78
Bytes: 9
Bail out?

952:62-952:66
Thu Aug 13 16:24:37 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 045ce134_e771a203
Bytes: 9
bail out?

952:5-952:67
Thu Aug 13 16:24:37 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e4242da6_f934b3e4
Bytes: 84
What is the constraint or rationale behind this?  (Maybe a limitation of REP MOVSW?)

973:59-973:69
Thu Aug 13 16:24:37 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e4242da6_d931f7f2
Bytes: 11
Uint32Value

973:8-973:15
Thu Aug 13 16:24:37 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c44d6987_48075f59
Bytes: 8
uint32_t

973:56-973:57
Thu Aug 13 16:24:37 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 446259ef_2c02fb17
Bytes: 100
Please use a constant to represent a String character size (introduce one if we don't have one yet).

976:35-976:36
Thu Aug 13 16:24:37 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a405d5ff_fc44a9d2
Bytes: 6
Ditto.

982:37-982:38
Thu Aug 13 16:24:37 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a47a35a8_d4443cd3
Bytes: 6
Ditto.

991:2-991:14
Thu Aug 13 16:24:37 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c44d6987_280c2379
Bytes: 5
Drop?

