Revision: 09f1c96e2bc01ec38c8438e13c9c0f496c10913c
Patch-set: 3
File: compiler/optimizing/prepare_for_register_allocation.cc

162:66-162:78
Thu Nov 19 11:43:55 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 169a6aee_455f60c0
Bytes: 128
this worries me a bit as it implies that we are not sure :). i.e. we should DCHECK this if all the above condition is satisfied.

162:66-162:78
Thu Nov 19 12:01:56 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 169a6aee_455f60c0
UUID: 56278298_4f16a533
Bytes: 163
Removed. I'm not sure if LICM can do that now, but this is also supposed to be future-proof, i.e. if we introduce any other code motion (including loop unrolling).

167:31-167:52
Thu Nov 19 11:43:55 2015 +0000
Author: Calin Juravle <1022077@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 56278298_0f1cad53
Bytes: 61
The comment seems a bit off as we are not inserting anything.

167:31-167:52
Thu Nov 19 12:01:56 2015 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 56278298_0f1cad53
UUID: 56278298_8feedd71
Bytes: 98
We shall do that soon: HX86ComputeBaseMethodAddress. And later something similar for ARM (32-bit).

