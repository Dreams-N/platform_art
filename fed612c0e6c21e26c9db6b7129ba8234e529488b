Revision: fed612c0e6c21e26c9db6b7129ba8234e529488b
Patch-set: 1
File: compiler/optimizing/intrinsics_mips64.cc

35:29-35:32
Wed Sep 23 04:47:31 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a905afc4_7a1df56c
Bytes: 24
Naming. Should be kTemp.

35:29-35:32
Wed Sep 23 19:21:27 2015 +0000
Author: Chris Larsen <1071873@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a905afc4_7a1df56c
UUID: 699c97d8_70fc0e36
Bytes: 563
Likewise for TMP in compiler/optimizing/code_generator_mips64.cc?

If so, how would you name "static constexpr FpuRegister FTMP = F8;" also in compiler/optimizing/code_generator_mips64.cc?

And should TMP be handled the same way as you suggested for TR? From your comments regarding patch 172320:

"Move the definition in code_generator_mips64.cc into the h file and use it here. It isn't good to have to separate declarations that aren't checked to be equal.

Alternatively, you could extend the register enum with a TR value that maps to S1 and share that way."

35:29-35:32
Wed Sep 23 20:33:08 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 699c97d8_70fc0e36
UUID: 09aebbf9_db0a3f5f
Bytes: 242
If you wanted it as a general value, you could do that, and then TMP would be an acceptable name. However, it's less important than TR. So I'm fine having the temp registers defined locally (other architectures are doing it that way already).

276:10-276:31
Thu Sep 24 21:13:25 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0e5fa128_be75f191
Bytes: 42
`java.lang.Object.Math`? (Here and below.)

276:10-276:31
Thu Sep 24 21:28:30 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 0e5fa128_be75f191
UUID: 8e52b121_8f631d25
Bytes: 36
It's java.lang.Math, actually... :-)

276:10-276:31
Thu Sep 24 21:43:00 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 8e52b121_8f631d25
UUID: ee616dea_b813c58f
Bytes: 38
Yeah, sorry, copy n' paste errorâ€¦ :)

302:0-304:50
Thu Sep 24 21:13:25 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a9ba0f35_529c72d0
Bytes: 26
Nit: put on a single line.

305:0-306:34
Thu Sep 24 21:13:25 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2e470569_97cb34aa
Bytes: 243
Replace with

  GpuRegister in = locations->InAt(0).AsRegister<GpuRegister>();
  GpuRegister out = locations->Out().AsRegister<GpuRegister>();

and replace `in.AsRegister<GpuRegister>()` and `out.AsRegister<GpuRegister>()` with `in` and `out`.

341:0-343:34
Thu Sep 24 21:13:25 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 4e4c398b_8d544960
Bytes: 265
Likewise, replace with

  FpuRegister lhs = locations->InAt(0).AsFpuRegister<FpuRegister>();
  FpuRegister rhs = locations->InAt(1).AsFpuRegister<FpuRegister>();
  FpuRegister out = locations->Out().AsFpuRegister<FpuRegister>();

and simplify the expressions below?

415:22-415:52
Thu Sep 24 21:13:25 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2e2e2591_f47b8e85
Bytes: 7
Remove?

417:0-419:34
Thu Sep 24 21:13:25 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: ce582944_d1253644
Bytes: 43
Ditto (here and in other intrinsics below).

421:2-421:69
Thu Sep 24 21:13:25 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2e470569_52b26a1e
Bytes: 179
I don't really get that. Should the code be shorter in that case? Also, shouldn't you also address the case where `out.AsRegister<GpuRegister>() == op2.AsRegister<GpuRegister>()`?

421:2-421:69
Thu Sep 24 21:28:30 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2e470569_52b26a1e
UUID: 2e2e2591_f4494e2d
Bytes: 74
I guess you could drop one of the Sel instructions in each branch below...

421:2-421:69
Thu Sep 24 21:43:00 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 2e2e2591_f4494e2d
UUID: 2e470569_b2199e82
Bytes: 27
Yes, this was my guess too.

541:18-541:23
Thu Sep 24 21:13:25 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2e470569_32b7ee0e
Bytes: 64
Move this magic number to a constant and document it a bit more.

546:23-546:34
Thu Sep 24 21:13:25 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 8e52b121_0fd3ad3c
Bytes: 17
`Long.MAX_VALUE`?

552:55-552:66
Thu Sep 24 21:13:25 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6e4d7d85_3906b727
Bytes: 6
Ditto?

590:18-590:23
Thu Sep 24 21:13:25 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 4e4c398b_78e549df
Bytes: 6
Ditto.

595:23-595:34
Thu Sep 24 21:13:25 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 0e5fa128_1e62bdd5
Bytes: 6
Ditto?

601:55-601:66
Thu Sep 24 21:13:25 2015 +0000
Author: Roland Levillain <1052644@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 2e470569_b2e19e07
Bytes: 6
Ditto?

