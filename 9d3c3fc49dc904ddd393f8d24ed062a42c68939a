Revision: 9d3c3fc49dc904ddd393f8d24ed062a42c68939a
Patch-set: 1
File: test/004-ThreadStress/src/Main.java

460:20-460:59
Tue Aug 18 20:56:34 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c4a9e95f_d3d43766
Bytes: 128
This may throw OOME as well, except less likely. Maybe we need a way to print characters without causing any allocations at all.

460:20-460:59
Tue Aug 18 20:58:45 2015 +0000
Author: Andreas Gampe <1041833@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: c4a9e95f_d3d43766
UUID: e4434d7f_95ac88f9
Bytes: 176
I decided not to comment on this, as it should be a lot less likely, considering it's a literal and so one successful execution of this will have allocated the shared string...

460:20-460:59
Tue Aug 18 21:06:58 2015 +0000
Author: Hiroshi Yamauchi <1022530@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e4434d7f_95ac88f9
UUID: 243ac5f6_a01cef28
Bytes: 129
I agree it's less likely. But in addition to the allocation of the string literal, there's allocations inside the println() call.

