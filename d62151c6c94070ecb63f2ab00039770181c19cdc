Revision: d62151c6c94070ecb63f2ab00039770181c19cdc
Patch-set: 3
File: compiler/optimizing/nodes.cc

421
Thu Aug 21 20:42:37 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 13aec965_0fc70d50
Bytes: 2
ws

421
Tue Sep 02 14:18:18 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 13aec965_0fc70d50
UUID: 133de99e_b4e68875
Bytes: 4
Done

File: compiler/optimizing/nodes.h

555:0-555:33
Thu Aug 21 20:42:37 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 13aec965_6fcd6147
Bytes: 86
what am I? what's the size of an environment? why's it associated with an instruction?

555:0-555:33
Tue Sep 02 14:18:18 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 13aec965_6fcd6147
UUID: d398b1f7_628d3222
Bytes: 4
Done

586:13-586:17
Thu Aug 21 20:42:37 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d3a7d188_787be93e
Bytes: 4
been

586:13-586:17
Tue Sep 02 14:18:18 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d3a7d188_787be93e
UUID: d398b1f7_828a3e09
Bytes: 4
Done

598:0-598:29
Thu Aug 21 20:42:37 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 33b90dab_f06cd6d5
Bytes: 10
what am I?

598:0-598:29
Tue Sep 02 14:18:18 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 33b90dab_f06cd6d5
UUID: 133de99e_d4db14b0
Bytes: 4
Done

1341:0-1341:30
Thu Aug 21 20:42:37 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 13aec965_afd7d9f6
Bytes: 5
const

1341:0-1341:30
Tue Sep 02 14:18:18 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 13aec965_afd7d9f6
UUID: d398b1f7_a2757a4b
Bytes: 4
Done

1426:0-1426:34
Thu Aug 21 20:42:37 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 13aec965_efcdd16c
Bytes: 5
const

1426:0-1426:34
Tue Sep 02 14:18:18 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 13aec965_efcdd16c
UUID: d398b1f7_c27a863a
Bytes: 4
Done

File: compiler/optimizing/register_allocator.cc

931:0-933:35
Thu Aug 21 20:42:37 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d3a7d188_d8dbfdfd
Bytes: 38
document that fall-through is intended

931:0-933:35
Tue Sep 02 14:18:18 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d3a7d188_d8dbfdfd
UUID: 1326c99c_0672da1e
Bytes: 4
Done

File: compiler/optimizing/register_allocator.h

131:0-131:43
Thu Aug 21 20:42:37 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 13aec965_7a7a0194
Bytes: 27
why 3? document differences

131:0-131:43
Tue Sep 02 14:18:18 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 13aec965_7a7a0194
UUID: 1326c99c_466cd242
Bytes: 4
Done

File: compiler/optimizing/ssa_liveness_analysis.h

50:0-51:11
Thu Aug 21 20:42:37 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 13aec965_1ac74d50
Bytes: 145
How do live ranges relate to instructions and temps? Do ins overlap with temps? What about outs? Are there conventions that should be documented?

50:0-51:11
Tue Sep 02 14:18:18 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 13aec965_1ac74d50
UUID: 1326c99c_c6f28248
Bytes: 84
Currently, ins, outs, and temps always overlap. Being finer grain is on the roadmap.

78:0-80:19
Thu Aug 21 20:42:37 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d3a7d188_d8ae9d1d
Bytes: 5
const

78:0-80:19
Tue Sep 02 14:18:18 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d3a7d188_d8ae9d1d
UUID: 1326c99c_a6ed866d
Bytes: 68
Only end can be made 'const'. The others are refined when splitting.

160:2-161:30
Thu Aug 21 20:42:37 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 33b90dab_30f82e27
Bytes: 43
add a new constructor, make is_temp_ const.

160:2-161:30
Tue Sep 02 14:18:18 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 33b90dab_30f82e27
UUID: d398b1f7_a2a01a7d
Bytes: 4
Done

File: compiler/optimizing/stack_map_stream.h

49:13-49:22
Thu Aug 21 20:42:37 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 13aec965_9ab1fde1
Bytes: 32
presumably an offset, amend name

49:13-49:22
Tue Sep 02 14:18:18 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 13aec965_9ab1fde1
UUID: 133de99e_b49128d3
Bytes: 4
Done

File: oatdump/oatdump.cc

398:0-400:7
Thu Aug 21 20:42:37 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 13aec965_1a998d68
Bytes: 15
worth a comment

398:0-400:7
Tue Sep 02 14:18:18 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 13aec965_1a998d68
UUID: 1326c99c_06fd7a16
Bytes: 4
Done

File: runtime/mirror/art_method-inl.h

234:48-234:57
Thu Aug 21 20:42:37 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 33b90dab_bb34ffef
Bytes: 7
+offset

234:48-234:57
Tue Sep 02 14:18:18 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 33b90dab_bb34ffef
UUID: d398b1f7_22b5eab5
Bytes: 4
Done

File: runtime/mirror/art_method.h

331:32-331:41
Thu Aug 21 20:42:37 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 33b90dab_7b7a0794
Bytes: 7
+offset

331:32-331:41
Tue Sep 02 14:18:18 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 33b90dab_7b7a0794
UUID: 1326c99c_26fa761f
Bytes: 4
Done

File: runtime/stack.cc

128:23-128:24
Thu Aug 21 20:42:37 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 33b90dab_5b5ce32a
Bytes: 14
LOG(WARNING) ?

128:23-128:24
Tue Sep 02 14:18:18 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 33b90dab_5b5ce32a
UUID: 1326c99c_860faa98
Bytes: 4
Done

File: runtime/stack_map.h

148:11-148:22
Thu Aug 21 20:42:37 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 33b90dab_3b5b2f32
Bytes: 7
+Offset

148:11-148:22
Tue Sep 02 14:18:18 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 33b90dab_3b5b2f32
UUID: d398b1f7_62bff295
Bytes: 4
Done

152:28-152:37
Thu Aug 21 20:42:37 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d3a7d188_d839bd0b
Bytes: 8
+_offset

152:7-152:18
Thu Aug 21 20:42:37 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d3a7d188_3845717d
Bytes: 7
+Offset

152:28-152:37
Tue Sep 02 14:18:18 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d3a7d188_d839bd0b
UUID: d398b1f7_a2c73a27
Bytes: 4
Done

152:7-152:18
Tue Sep 02 14:18:18 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d3a7d188_3845717d
UUID: d398b1f7_82bcfea0
Bytes: 4
Done

290:43-290:52
Thu Aug 21 20:42:37 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d3a7d188_53d12e68
Bytes: 8
+_offset

290:43-290:52
Tue Sep 02 14:18:18 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d3a7d188_53d12e68
UUID: 1326c99c_a614a6a9
Bytes: 4
Done

File: runtime/thread.cc

2122:8-2122:14
Thu Aug 21 20:42:37 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d3a7d188_33e03230
Bytes: 35
use "else {" to avoid early return.

2122:8-2122:14
Tue Sep 02 14:18:18 2014 +0000
Author: Nicolas Geoffray <1038443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d3a7d188_33e03230
UUID: 1326c99c_c609a294
Bytes: 4
Done

