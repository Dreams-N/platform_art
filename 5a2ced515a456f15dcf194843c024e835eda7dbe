Revision: 5a2ced515a456f15dcf194843c024e835eda7dbe
Base-for-patch-set: 1
File: runtime/class_linker.cc

4100:0-4100:61
Mon Jan 06 16:33:51 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 6ddb9506_f65b78df
Bytes: 84
Why are you removing a SirtRef? Throwing and allocating an exception can trigger GC.

4100:0-4100:61
Mon Jan 06 16:35:49 2014 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 6ddb9506_f65b78df
UUID: eda78588_8465267d
Bytes: 29
What's GC gonna do to a NULL?

4100:0-4100:61
Mon Jan 06 16:42:21 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: eda78588_8465267d
UUID: 8dd609da_57acc473
Bytes: 79
Depends on the GC, but for us nothing. Put a DCHECK here that resolved == NULL.

4100:0-4100:61
Mon Jan 06 17:08:44 2014 +0000
Author: Vladimir Marko <1018108@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 8dd609da_57acc473
UUID: 2daefd65_669fce02
Bytes: 206
Since we're using the C++ NULL here, it cannot change. Even if the VM had some special object for the Java null and could move that special object, after retrieving the new value we must receive NULL again.

